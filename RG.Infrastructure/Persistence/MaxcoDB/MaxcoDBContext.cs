using Microsoft.EntityFrameworkCore;
using RG.Application.Common.CommonInterfaces;
using RG.DBEntities;
using RG.DBEntities.Maxco;
using RG.DBEntities.Maxco.Business;
using RG.DBEntities.Maxco.DBViews;
using RG.DBEntities.Maxco.FabricAndYarn;
using RG.DBEntities.Maxco.Setup;
using RG.DBEntities.Maxco.Trims;
using System;
using System.Reflection;
using System.Threading;
using System.Threading.Tasks;

namespace RG.Infrastructure.Persistence.MaxcoDB
{
    public partial class MaxcoDBContext : DbContext
    {
        private readonly ICurrentUserService currentUserService;

        public MaxcoDBContext(DbContextOptions<MaxcoDBContext> options, ICurrentUserService _currentUserService)
            : base(options)
        {
            currentUserService = _currentUserService;
        }
        #region Maxco Setup
        //
        public virtual DbSet<Yarn_Packages_setup> Yarn_Packages_setup { get; set; }
        public virtual DbSet<Yarn_Contamination_Setup> Yarn_Contamination_Setup { get; set; }
        public virtual DbSet<Brand_Setup> Brand_Setup { get; set; }
        public virtual DbSet<Knitter_Setup> Knitter_Setup { get; set; }
        public virtual DbSet<Cartage_Setup> Cartage_Setup { get; set; }
        public virtual DbSet<YarnBrokerSetup> YarnBrokerSetup { get; set; }
        public virtual DbSet<User_Setup> User_Setup { get; set; }
        public virtual DbSet<UserBuyer_Setup> UserBuyer_Setup { get; set; }
        public virtual DbSet<Country_Setup> Country_Setup { get; set; }
        public virtual DbSet<City_Setup> City_Setup { get; set; }
        public virtual DbSet<SMVModelCost_Setup> SMVModelCost_Setup { get; set; }
        public virtual DbSet<SelectedElement_Transactions> SelectedElement_Transactions { get; set; }
        //
        public virtual DbSet<ThreadCost_Setup> ThreadCost_Setup { get; set; }
        public virtual DbSet<ProcurementSource_Setup> ProcurementSource_Setup { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Designation> Designation { get; set; }
        public virtual DbSet<EmpStatusType> EmpStatusType { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Buyer_Setup> Buyer_Setup { get; set; }
        public virtual DbSet<DrawstringMaterial_Setup> DrawstringMaterial_Setup { get; set; }
        public virtual DbSet<DrawstringType_Setup> DrawstringType_Setup { get; set; }
        public virtual DbSet<ColorMatching_Setup> ColorMatching_Setup { get; set; }
        public virtual DbSet<ColorPalleteType_Setup> ColorPalleteType_Setup { get; set; }
        public virtual DbSet<Currency_Setup> Currency_Setup { get; set; }
        public virtual DbSet<DrawStringDyeing_Setup> DrawStringDyeing_Setup { get; set; }
        public virtual DbSet<FabricDyeingProcess_Setup> FabricDyeingProcess_Setup { get; set; }
        public virtual DbSet<FabricDyeingType_Setup> FabricDyeingType_Setup { get; set; }
        public virtual DbSet<FabricGuage_Setup> FabricGuage_Setup { get; set; }
        public virtual DbSet<FabricMachineType_Setup> FabricMachineType_Setup { get; set; }
        public virtual DbSet<FabricCategory_setup> FabricCategory_setup { get; set; }
        public virtual DbSet<PrintColorType_Setup> PrintColorType_Setup { get; set; }
        public virtual DbSet<FabricQuality_Setup> FabricQuality_Setup { get; set; }
        public virtual DbSet<FabricTrimConstruction_Setup> FabricTrimConstruction_Setup { get; set; }
        public virtual DbSet<FabricTrimPlacementInstruction_Setup> FabricTrimPlacementInstruction_Setup { get; set; }
        public virtual DbSet<FabricTrimRollWidth_Setup> FabricTrimRollWidth_Setup { get; set; }
        public virtual DbSet<FabricTrims_Setup> FabricTrims_Setup { get; set; }
        public virtual DbSet<GarmentCategory_Setup> GarmentCategory_Setup { get; set; }
        public virtual DbSet<GarmentSizeRange_Setup> GarmentSizeRange_Setup { get; set; }
        public virtual DbSet<GarmentType_Setup> GarmentType_Setup { get; set; }
        public virtual DbSet<Insertion_Setup> Insertion_Setup { get; set; }
        public virtual DbSet<InterLinningTypes_Setup> InterLinningTypes_Setup { get; set; }
        public virtual DbSet<MaterialOperation_Setup> MaterialOperation_Setup { get; set; }
        public virtual DbSet<MeasurementScale_Setup> MeasurementScale_Setup { get; set; }
        public virtual DbSet<Pantone> Pantone { get; set; }
        public virtual DbSet<OrderStyleElement_Setup> OrderStyleElement_Setup { get; set; }
        public virtual DbSet<PatternPiece_Setup> PatternPiece_Setup { get; set; }
        public virtual DbSet<PlacketType_Setup> PlacketType_Setup { get; set; }
        public virtual DbSet<PrintEmbroImage_Setup> PrintEmbroImage_Setup { get; set; }
        public virtual DbSet<PrintEmbroImageCategory_Setup> PrintEmbroImageCategory_Setup { get; set; }
        public virtual DbSet<PrintImageLayers_Setup> PrintImageLayers_Setup { get; set; }
        public virtual DbSet<PrintingType_Setup> PrintingType_Setup { get; set; }
        public virtual DbSet<QRM_CostingAllowancesSetup> QRM_CostingAllowancesSetup { get; set; }
        public virtual DbSet<QRM_Activation_Setup> QRM_Activation_Setup { get; set; }
        public virtual DbSet<QRM_FRSConsumptionCriteria_Setup> QRM_FRSConsumptionCriteria_Setup { get; set; }
        public virtual DbSet<Season_Setup> Season_Setup { get; set; }
        public virtual DbSet<SelectedElement> SelectedElement { get; set; }
        public virtual DbSet<SeriesBasis_Setup> SeriesBasis_Setup { get; set; }
        public virtual DbSet<Series> Series { get; set; }
        public virtual DbSet<QRM_GriegeWastageSetup> QRM_GriegeWastageSetup { get; set; }
        public virtual DbSet<SizeRangeType_Setup> SizeRangeType_Setup { get; set; }
        public virtual DbSet<SMVProcess_Setup> SMVProcess_Setup { get; set; }
        public virtual DbSet<SMVRate_Setup> SMVRate_Setup { get; set; }
        public virtual DbSet<SolubleTypes_Setup> SolubleTypes_Setup { get; set; }
        public virtual DbSet<SwatchSetup> SwatchSetup { get; set; }
        public virtual DbSet<TrimWastage_Setup> TrimWastage_Setup { get; set; }
        public virtual DbSet<FabricRatio_Setup> FabricRatio_Setup { get; set; }
        public virtual DbSet<FabricYarnComposition_Setup> FabricYarnComposition_Setup { get; set; }
        public virtual DbSet<GenericFabricCompositionSetup_Master> GenericFabricCompositionSetup_Master { get; set; }
        public virtual DbSet<GenericFabricCompositionSetup_Detail> GenericFabricCompositionSetup_Detail { get; set; }
        public virtual DbSet<FS_FabricType_Setup> FS_FabricType_Setup { get; set; }
        public virtual DbSet<SizeRangeRegion_Setup> SizeRangeRegion_Setup { get; set; }
        public virtual DbSet<Wastage_Setup> Wastage_Setup { get; set; }
        public virtual DbSet<Gender_Setup> Gender_Setup { get; set; }
        public virtual DbSet<FabricPrintType> FabricPrintType { get; set; }
        public virtual DbSet<PatternPieceGarmentTypeID> PatternPieceGarmentTypeID { get; set; }
        public virtual DbSet<Vendor_setup> Vendor_setup { get; set; }
        public virtual DbSet<Style_Transactions> Style_Transactions { get; set; }
        public virtual DbSet<Tansaction_Setup> Tansaction_Setup { get; set; }

        public virtual DbSet<KRS_Colors_DEL> KRS_Colors_DEL { get; set; }
        public virtual DbSet<KRS_DETAIL_DEL> KRS_DETAIL_DEL { get; set; }
        public virtual DbSet<KRS_Dyed_Colors_DEL> KRS_Dyed_Colors_DEL { get; set; }
        public virtual DbSet<KRS_MASTER_DEL> KRS_MASTER_DEL { get; set; }
        public virtual DbSet<KRS_SIZES_DEL> KRS_SIZES_DEL { get; set; }
        public virtual DbSet<KRS_STYLE_INFO_DEL> KRS_STYLE_INFO_DEL { get; set; }
        public virtual DbSet<KRS_YARN_DETAILS_DEL> KRS_YARN_DETAILS_DEL { get; set; }
        public virtual DbSet<SchedularReportEmail> SchedularReportEmail { get; set; }
        public virtual DbSet<OrderClassification> OrderClassification { get; set; }
        public virtual DbSet<Plan_DyeingProductionLocation_Setup> Plan_DyeingProductionLocation_Setup { get; set; }
        public virtual DbSet<Plan_ArtWork_Setup> Plan_ArtWork_Setup { get; set; }
        public virtual DbSet<Country_Assorment_Setup> Country_Assorment_Setup { get; set; }
        public virtual DbSet<CuttingAdditionFabricRequired> CuttingAdditionFabricRequired { get; set; }
        public virtual DbSet<GarmentsProductionEfficiency> GarmentsProductionEfficiency { get; set; }
        //Country_Assorment_Setup
        #endregion Maxco Setup

        #region Maxco Trims
        //
        public virtual DbSet<TwillTapeColor> TwillTapeColor { get; set; }
        public virtual DbSet<TwillTapePlacementInstruction> TwillTapePlacementInstruction { get; set; }
        public virtual DbSet<TwillTapeSpecification> TwillTapeSpecification { get; set; }
        public virtual DbSet<BeadSpecification> BeadSpecification { get; set; }
        public virtual DbSet<HangTagPlacementInstruction> HangTagPlacementInstruction { get; set; }
        public virtual DbSet<BeadColor> BeadColor { get; set; }
        public virtual DbSet<BeadPlacementInstruction> BeadPlacementInstruction { get; set; }
        public virtual DbSet<BuckleSpecification> BuckleSpecification { get; set; }
        public virtual DbSet<BuckleColor> BuckleColor { get; set; }
        public virtual DbSet<DrawstringColor> DrawstringColor { get; set; }
        public virtual DbSet<BucklePlacementInstruction> BucklePlacementInstruction { get; set; }
        public virtual DbSet<ButtonSpecification> ButtonSpecification { get; set; }
        public virtual DbSet<ButtonPlacementInstruction> ButtonPlacementInstruction { get; set; }
        public virtual DbSet<ButtonColor> ButtonColor { get; set; }
        public virtual DbSet<CartunSpecification> CartunSpecification { get; set; }
        public virtual DbSet<DrawstringSpecification> DrawstringSpecification { get; set; }
        public virtual DbSet<DrawstringPlacementInstruction> DrawstringPlacementInstruction { get; set; }
        public virtual DbSet<ElasticColor> ElasticColor { get; set; }
        public virtual DbSet<ElasticPlacementInstruction> ElasticPlacementInstruction { get; set; }
        public virtual DbSet<ElasticSpecification> ElasticSpecification { get; set; }
        public virtual DbSet<EyeletColor> EyeletColor { get; set; }
        public virtual DbSet<EyeletPlacementInstruction> EyeletPlacementInstruction { get; set; }
        public virtual DbSet<EyeletSpecification> EyeletSpecification { get; set; }
        public virtual DbSet<HangerSize> HangerSize { get; set; }
        public virtual DbSet<HangerSpecification> HangerSpecification { get; set; }
        public virtual DbSet<PolyBagSize> PolyBagSize { get; set; }
        public virtual DbSet<PolyBagSpecification> PolyBagSpecification { get; set; }
        public virtual DbSet<LabelColors> LabelColors { get; set; }
        public virtual DbSet<LabelPlacementInstruction> LabelPlacementInstruction { get; set; }
        public virtual DbSet<LabelSize> LabelSize { get; set; }
        public virtual DbSet<LabelSpecification> LabelSpecification { get; set; }
        public virtual DbSet<LaceColor> LaceColor { get; set; }
        public virtual DbSet<LacePlacementInstruction> LacePlacementInstruction { get; set; }
        public virtual DbSet<LaceSpecification> LaceSpecification { get; set; }
        public virtual DbSet<SelectedThreadPurpose> SelectedThreadPurpose { get; set; }
        public virtual DbSet<SelectedTrim> SelectedTrim { get; set; }
        public virtual DbSet<SizeRingColor> SizeRingColor { get; set; }
        public virtual DbSet<ThreadPlacementInstruction> ThreadPlacementInstruction { get; set; }
        public virtual DbSet<ThreadSpecification> ThreadSpecification { get; set; }
        public virtual DbSet<BeadAttachment_Setup> BeadAttachment_Setup { get; set; }
        public virtual DbSet<BeadDesign_Setup> BeadDesign_Setup { get; set; }
        public virtual DbSet<ButtonPartHole_Setup> ButtonPartHole_Setup { get; set; }
        public virtual DbSet<BeadImage_Setup> BeadImage_Setup { get; set; }
        public virtual DbSet<BeadMaterial_Setup> BeadMaterial_Setup { get; set; }
        public virtual DbSet<BeadSize_Setup> BeadSize_Setup { get; set; }
        public virtual DbSet<ButtonSize_Setup> ButtonSize_Setup { get; set; }
        public virtual DbSet<BuckleImage_Setup> BuckleImage_Setup { get; set; }
        public virtual DbSet<ButtonTopType_Setup> ButtonTopType_Setup { get; set; }
        public virtual DbSet<BuckleMaterial_Setup> BuckleMaterial_Setup { get; set; }
        public virtual DbSet<BuckleSize_Setup> BuckleSize_Setup { get; set; }
        public virtual DbSet<CartonImage_Setup> CartonImage_Setup { get; set; }
        public virtual DbSet<ButtonHoleArrangement_Setup> ButtonHoleArrangement_Setup { get; set; }
        public virtual DbSet<CartonNoOfPlies_Setup> CartonNoOfPlies_Setup { get; set; }
        public virtual DbSet<ButtonImage_Setup> ButtonImage_Setup { get; set; }
        public virtual DbSet<CartonPrintedFace_Setup> CartonPrintedFace_Setup { get; set; }
        public virtual DbSet<CartonPrintingType_Setup> CartonPrintingType_Setup { get; set; }
        public virtual DbSet<CartonType_Setup> CartonType_Setup { get; set; }
        public virtual DbSet<ButtonMaterial_Setup> ButtonMaterial_Setup { get; set; }
        public virtual DbSet<DrawstringImage_Setup> DrawstringImage_Setup { get; set; }
        public virtual DbSet<ElasticFinish_Setup> ElasticFinish_Setup { get; set; }
        public virtual DbSet<ElasticImage_Setup> ElasticImage_Setup { get; set; }
        public virtual DbSet<QRM_BuyerTrimAssociation> QRM_BuyerTrimAssociation { get; set; }

        public virtual DbSet<ElasticString_Setup> ElasticString_Setup { get; set; }
        public virtual DbSet<ElasticType_Setup> ElasticType_Setup { get; set; }
        public virtual DbSet<ElasticWidth_Setup> ElasticWidth_Setup { get; set; }
        public virtual DbSet<EyeletImage_Setup> EyeletImage_Setup { get; set; }
        public virtual DbSet<EyeletMaterial_Setup> EyeletMaterial_Setup { get; set; }
        public virtual DbSet<EyeletSize_Setup> EyeletSize_Setup { get; set; }
        public virtual DbSet<HangerImage_Setup> HangerImage_Setup { get; set; }
        public virtual DbSet<HangerType_Setup> HangerType_Setup { get; set; }
        public virtual DbSet<LabelAttachment_Setup> LabelAttachment_Setup { get; set; }
        public virtual DbSet<LabelDesign_Setup> LabelDesign_Setup { get; set; }
        public virtual DbSet<HangTagImage_Setup> HangTagImage_Setup { get; set; }
        public virtual DbSet<LabelImage_Setup> LabelImage_Setup { get; set; }
        public virtual DbSet<LabelMaterial_Setup> LabelMaterial_Setup { get; set; }
        public virtual DbSet<LabelType_Setup> LabelType_Setup { get; set; }
        public virtual DbSet<LaceDyeing_Setup> LaceDyeing_Setup { get; set; }
        public virtual DbSet<LaceImage_Setup> LaceImage_Setup { get; set; }
        public virtual DbSet<HangTagMaterial_Setup> HangTagMaterial_Setup { get; set; }
        public virtual DbSet<LaceMaterial_Setup> LaceMaterial_Setup { get; set; }
        public virtual DbSet<LaceWidth_Setup> LaceWidth_Setup { get; set; }
        public virtual DbSet<HangTagType_Setup> HangTagType_Setup { get; set; }
        public virtual DbSet<PolyBagAdhesiveType_Setup> PolyBagAdhesiveType_Setup { get; set; }
        public virtual DbSet<PolyBagFlapType_Setup> PolyBagFlapType_Setup { get; set; }
        public virtual DbSet<PolyBagGusset_Setup> PolyBagGusset_Setup { get; set; }
        public virtual DbSet<PolyBagImage_Setup> PolyBagImage_Setup { get; set; }
        public virtual DbSet<PolyBagMaterial_Setup> PolyBagMaterial_Setup { get; set; }
        public virtual DbSet<PolyBagPrintingType_Setup> PolyBagPrintingType_Setup { get; set; }
        public virtual DbSet<PolyBagThickness_Setup> PolyBagThickness_Setup { get; set; }
        public virtual DbSet<TwillTapeWidth_Setup> TwillTapeWidth_Setup { get; set; }
        public virtual DbSet<TwillTapeDyeing_Setup> TwillTapeDyeing_Setup { get; set; }
        public virtual DbSet<TwillTapeImage_Setup> TwillTapeImage_Setup { get; set; }
        public virtual DbSet<TwillTapeMaterial_Setup> TwillTapeMaterial_Setup { get; set; }
        public virtual DbSet<TwillTapeWeave_Setup> TwillTapeWeave_Setup { get; set; }
        public virtual DbSet<ThreadCount_Setup> ThreadCount_Setup { get; set; }
        public virtual DbSet<ThreadMaterial_Setup> ThreadMaterial_Setup { get; set; }
        public virtual DbSet<TrimCategory_Setup> TrimCategory_Setup { get; set; }
        public virtual DbSet<Trim_Setup> Trim_Setup { get; set; }
        public virtual DbSet<TrimInsertion_Setup> TrimInsertion_Setup { get; set; }
        public virtual DbSet<TrimMeasurementScale_Setup> TrimMeasurementScale_Setup { get; set; }
        public virtual DbSet<TrimPlacementInstruction_Setup> TrimPlacementInstruction_Setup { get; set; }
        public virtual DbSet<TrimTypeWiseWastage_setup> TrimTypeWiseWastage_setup { get; set; }
        public virtual DbSet<TrimUnit_Setup> TrimUnit_Setup { get; set; }
        public virtual DbSet<HangTagSpecification> HangTagSpecification { get; set; }
        //

        #endregion TRims

        #region Maxco FabricAndYarn
        public virtual DbSet<CostingConsolidatedFabric> CostingConsolidatedFabric { get; set; }
        public virtual DbSet<FabricFeederStripeSpecification> FabricFeederStripeSpecification { get; set; }
        public virtual DbSet<FabricSpecification> FabricSpecification { get; set; }
        public virtual DbSet<FS_ColorSet> FS_ColorSet { get; set; }
        public virtual DbSet<FabricSpecificationColor> FabricSpecificationColor { get; set; }
        public virtual DbSet<FS_RequirementSheet_Fabrics> FS_RequirementSheet_Fabrics { get; set; }
        public virtual DbSet<FabricTrimDimensions> FabricTrimDimensions { get; set; }
        public virtual DbSet<FabricTrimPlacementInstruction> FabricTrimPlacementInstruction { get; set; }
        public virtual DbSet<FS_Fabric_Details> FS_Fabric_Details { get; set; }
        public virtual DbSet<FabricTrimSpecification> FabricTrimSpecification { get; set; }
        public virtual DbSet<FS_Fabric_YarnDetail> FS_Fabric_YarnDetail { get; set; }
        public virtual DbSet<FabricWashingFinishingSpecification> FabricWashingFinishingSpecification { get; set; }
        public virtual DbSet<FS_RequirementSheet_Master> FS_RequirementSheet_Master { get; set; }
        public virtual DbSet<FabricYarnSpecification> FabricYarnSpecification { get; set; }
        public virtual DbSet<FS_SizeSet> FS_SizeSet { get; set; }
        public virtual DbSet<FabricYarnSpecificationColor> FabricYarnSpecificationColor { get; set; }
        public virtual DbSet<FC_FabricGroupUse> FC_FabricGroupUse { get; set; }
        public virtual DbSet<FC_ModelFabricGroups> FC_ModelFabricGroups { get; set; }
        public virtual DbSet<PrintingLayers> PrintingLayers { get; set; }
        public virtual DbSet<PrintingSpecification> PrintingSpecification { get; set; }
        public virtual DbSet<PrintPlacementInstruction> PrintPlacementInstruction { get; set; }
        public virtual DbSet<PrintSizes> PrintSizes { get; set; }
        public virtual DbSet<ModelFinishFabricCost> ModelFinishFabricCost { get; set; }
        public virtual DbSet<KRS_YARN_DETAILS> KRS_YARN_DETAILS { get; set; }
        public virtual DbSet<FabricColorMatchingSource_Setup> FabricColorMatchingSource_Setup { get; set; }
        public virtual DbSet<FabricTrimSelected> FabricTrimSelected { get; set; }

        public virtual DbSet<FabricYarnCosting_Setup> FabricYarnCosting_Setup { get; set; }
        public virtual DbSet<FabricYarnCount_Setup> FabricYarnCount_Setup { get; set; }
        public virtual DbSet<FabricYarnDesignType_Setup> FabricYarnDesignType_Setup { get; set; }
        public virtual DbSet<FabricYarnDyeingMethod_Setup> FabricYarnDyeingMethod_Setup { get; set; }
        public virtual DbSet<FabricYarnQuality_Setup> FabricYarnQuality_Setup { get; set; }
        public virtual DbSet<FabricYarnVendor> FabricYarnVendor { get; set; }
        public virtual DbSet<vw_OrderToFabricSpecification> vw_OrderToFabricSpecification { get; set; }
        public virtual DbSet<FS_RequirementSheet_Versions> FS_RequirementSheet_Versions { get; set; }
        //

        #endregion FabricAndYarn

        #region Maxco Business
        //
        public virtual DbSet<LC_CM_CASH_MASTER> LC_CM_CASH_MASTER { get; set; }
        public virtual DbSet<LC_MC_MASTER_CHILD> LC_MC_MASTER_CHILD { get; set; }
        public virtual DbSet<CostingVariationWise> CostingVariationWise { get; set; }
        public virtual DbSet<QRM_OrderSheet> QRM_OrderSheet { get; set; }
        public virtual DbSet<OrderGarmentAssortmentOrder> OrderGarmentAssortmentOrder { get; set; }
        public virtual DbSet<QRM_OrderSheetFabrics> QRM_OrderSheetFabrics { get; set; }
        public virtual DbSet<PatternPieceSpecification> PatternPieceSpecification { get; set; }
        public virtual DbSet<QRM_OrderSheetInterlinning> QRM_OrderSheetInterlinning { get; set; }
        public virtual DbSet<QRM_OrderSheetStyle> QRM_OrderSheetStyle { get; set; }
        public virtual DbSet<QRM_OrderSheetTrims> QRM_OrderSheetTrims { get; set; }
        public virtual DbSet<QRM_OrderSheetVersions> QRM_OrderSheetVersions { get; set; }
        public virtual DbSet<QRM_UPCSpecification> QRM_UPCSpecification { get; set; }
        public virtual DbSet<SelectedGarmentSizeRange> SelectedGarmentSizeRange { get; set; }
        public virtual DbSet<ModelGreigeFabricCosting> ModelGreigeFabricCosting { get; set; }
        public virtual DbSet<ModelGriegeFabric_YarnsCosting> ModelGriegeFabric_YarnsCosting { get; set; }
        public virtual DbSet<ModelPrintingCost> ModelPrintingCost { get; set; }
        public virtual DbSet<Style> Style { get; set; }
        public virtual DbSet<ModelSMVCosting> ModelSMVCosting { get; set; }
        public virtual DbSet<ModelTrimCost> ModelTrimCost { get; set; }
        public virtual DbSet<ModelApprovedCost> ModelApprovedCost { get; set; }
        public virtual DbSet<ModelWashingDetail> ModelWashingDetail { get; set; }
        public virtual DbSet<ModelCostAllowances> ModelCostAllowances { get; set; }
        public virtual DbSet<ModelCosting> ModelCosting { get; set; }
        public virtual DbSet<ModelYarnCosting> ModelYarnCosting { get; set; }
        public virtual DbSet<ThreadColor> ThreadColor { get; set; }
        public virtual DbSet<StyleCurrency> StyleCurrency { get; set; }
        public virtual DbSet<KRS_Colors> KRS_Colors { get; set; }
        public virtual DbSet<KRS_DETAIL> KRS_DETAIL { get; set; }
        public virtual DbSet<KRS_Dyed_Colors> KRS_Dyed_Colors { get; set; }
        public virtual DbSet<KRS_MASTER> KRS_MASTER { get; set; }
        public virtual DbSet<KRS_Sizes> KRS_Sizes { get; set; }
        public virtual DbSet<KRS_STYLE_INFO> KRS_STYLE_INFO { get; set; }
        public virtual DbSet<KRS_SearchXML> KRS_SearchXML { get; set; }
        public virtual DbSet<KRS_Versions> KRS_Versions { get; set; }

        public virtual DbSet<Collection> Collection { get; set; }
        public virtual DbSet<ModelConsumptionSelectedElement> ModelConsumptionSelectedElement { get; set; }
        public virtual DbSet<QRM_BuyerCostingAllowance> QRM_BuyerCostingAllowance { get; set; }
        public virtual DbSet<vw_GetOrderDetailByModel> vw_GetOrderDetailByModel { get; set; }
        public virtual DbSet<LC_LCType_Setup> LC_LCType_Setup { get; set; }
        public virtual DbSet<LC_LCMaster_Specs> LC_LCMaster_Specs { get; set; }
        public virtual DbSet<QRM_LCOrderAssociation> QRM_LCOrderAssociation { get; set; }

        public virtual DbSet<Plan_Cutting> Plan_Cutting { get; set; }
        public virtual DbSet<Plan_DyeingProduction> Plan_DyeingProduction { get; set; }
        public virtual DbSet<Plan_FabricArtWork> Plan_FabricArtWork { get; set; }
        public virtual DbSet<Plan_FabricBatchCommitment> Plan_FabricBatchCommitment { get; set; }
        public virtual DbSet<Plan_FabricDeliveryCommitment> Plan_FabricDeliveryCommitment { get; set; }
        public virtual DbSet<Plan_FinishFabric> Plan_FinishFabric { get; set; }
        public virtual DbSet<Plan_Knitting> Plan_Knitting { get; set; }
        public virtual DbSet<Plan_OrderMaster> Plan_OrderMaster { get; set; }
        public virtual DbSet<Plan_Sewing> Plan_Sewing { get; set; }
        public virtual DbSet<Plan_Shipment> Plan_Shipment { get; set; }
        public virtual DbSet<Plan_StyleFabrics> Plan_StyleFabrics { get; set; }
        public virtual DbSet<Plan_Versions> Plan_Versions { get; set; }
        public virtual DbSet<Plan_OrderFollowup> Plan_OrderFollowup { get; set; }
        public virtual DbSet<Plan_GarmentAssortmentAndFabricsReport> Plan_GarmentAssortmentAndFabricsReport { get; set; }
        public virtual DbSet<Plan_OrderGreigeQuantityReport> Plan_OrderGreigeQuantityReport { get; set; }
        public virtual DbSet<Plan_OrderBatchAndFinishQuantityReport> Plan_OrderBatchAndFinishQuantityReport { get; set; }

        #endregion Business

        #region DBViews
        public virtual DbSet<VW_ChartOfAccounts> VW_ChartOfAccounts { get; set; }
        public virtual DbSet<vw_StyleFabric> vw_StyleFabric { get; set; }
        public virtual DbSet<vw_DyeingContractBalanceOrder> vw_DyeingContractBalanceOrder { get; set; }
        public virtual DbSet<Vw_PlanOrderVersionMax> Vw_PlanOrderVersionMax { get; set; }
        public virtual DbSet<Vw_OrderKRSGreigeFabric> Vw_OrderKRSGreigeFabric { get; set; }


        #endregion

        #region Ajt
        public virtual DbSet<OrderScheduling> OrderScheduling { get; set; }
        public virtual DbSet<OrderKnittingScheduling> OrderKnittingScheduling { get; set; }
        public virtual DbSet<OrderDyeingScheduling> OrderDyeingScheduling { get; set; }
        public virtual DbSet<OrderCuttingScheduling> OrderCuttingScheduling { get; set; }
        public virtual DbSet<OrderSewingScheduling> OrderSewingScheduling { get; set; }
        #endregion

        public virtual DbSet<CollectionModel_PriceList> CollectionModel_PriceList { get; set; }
        // public virtual DbSet<FabricCategory_setup> FabricCategorySetup { get; set; }
        public virtual DbSet<FabricType_Setup> FabricType_Setup { get; set; }


        //


        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            //            if (!optionsBuilder.IsConfigured)
            //            {
            //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
            //                optionsBuilder.UseSqlServer("Server=192.173.163.190;Database=Dev_Maxco;Trusted_Connection=false;user id=sa;password=ERP@2019");
            //            }
        }
        public override async Task<int> SaveChangesAsync(CancellationToken cancellationToken = new CancellationToken())
        {
            foreach (var entry in ChangeTracker.Entries<DefaultTableProperties>())
            {
                switch (entry.State)
                {
                    case EntityState.Added:
                        entry.Entity.IsActive = true;
                        entry.Entity.IsRemoved = false;
                        entry.Entity.CreatedBy = currentUserService.UserID;
                        entry.Entity.CreatedDate = DateTime.Now;
                        break;

                    case EntityState.Modified:
                        entry.Entity.LastModifiedBy = currentUserService.UserID;
                        entry.Entity.LastModifiedDate = DateTime.Now;
                        break;
                }
            }

            var result = await base.SaveChangesAsync(cancellationToken);
            return result;
        }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfigurationsFromAssembly(Assembly.GetExecutingAssembly());
            base.OnModelCreating(modelBuilder);

            #region Trims
            modelBuilder.Entity<BeadSpecification>(entity =>
            {
                entity.ToTable("BeadSpecification", "dbo");
            });
            modelBuilder.Entity<BeadPlacementInstruction>(entity =>
            {
                entity.ToTable("BeadPlacementInstruction", "dbo");
            });
            #endregion Trims

            #region business
            modelBuilder.Entity<vw_GetOrderDetailByModel>(entity =>
            {
                entity.ToTable("vw_GetOrderDetailByModel", "ajt");
            });
            #endregion business
            modelBuilder.Entity<VW_ChartOfAccounts>(entity =>
            {
                entity.ToView("VW_ChartOfAccounts", "ajt");
            });
            modelBuilder.Entity<vw_StyleFabric>(entity =>
            {
                entity.HasNoKey();
                entity.ToView("vw_StyleFabric", "ajt");
            });
            modelBuilder.Entity<vw_DyeingContractBalanceOrder>(entity =>
            {
                entity.HasNoKey();
                entity.ToView("vw_DyeingContractBalanceOrder", "ajt");
            });



            //modelBuilder.Entity<AllocationDetails>(entity =>
            //{
            //    entity.ToTable("Allocation_details");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AllocationId).HasColumnName("AllocationID");

            //    entity.Property(e => e.ContrastVariationId).HasColumnName("ContrastVariationID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VariationId).HasColumnName("VariationID");

            //    entity.HasOne(d => d.Allocation)
            //        .WithMany(p => p.AllocationDetails)
            //        .HasForeignKey(d => d.AllocationId)
            //        .HasConstraintName("FK_Allocation_details_Allocation_Master");
            //});

            //modelBuilder.Entity<AllocationMaster>(entity =>
            //{
            //    entity.HasKey(e => e.AllocationId);

            //    entity.ToTable("Allocation_Master");

            //    entity.Property(e => e.AllocationId).HasColumnName("AllocationID");

            //    entity.Property(e => e.AssortmentColorsetId).HasColumnName("AssortmentColorsetID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.ReqId).HasColumnName("ReqID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionNo)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.Req)
            //        .WithMany(p => p.AllocationMaster)
            //        .HasForeignKey(d => d.ReqId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_Allocation_Master_FS_RequirementSheet_Master");
            //});

            //modelBuilder.Entity<AllocationRatios>(entity =>
            //{
            //    entity.ToTable("Allocation_ratios");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AllocationId).HasColumnName("AllocationID");

            //    entity.Property(e => e.Quantity).HasColumnName("quantity");

            //    entity.Property(e => e.SizeDescription)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.HasOne(d => d.Allocation)
            //        .WithMany(p => p.AllocationRatios)
            //        .HasForeignKey(d => d.AllocationId)
            //        .HasConstraintName("FK_Allocation_ratios_Allocation_Master");
            //});

            //modelBuilder.Entity<Assortment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.OriginalGsc).HasColumnName("OriginalGSC");

            //    entity.Property(e => e.PackingTypeId).HasColumnName("PackingTypeID");

            //    entity.Property(e => e.ShipmentPackingStyleId).HasColumnName("ShipmentPackingStyleID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.TargetGsc).HasColumnName("TargetGSC");
            //});

            //modelBuilder.Entity<AssortmentXml>(entity =>
            //{
            //    entity.ToTable("AssortmentXML");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.AssortmentXml1)
            //        .IsRequired()
            //        .HasColumnName("AssortmentXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<Attachment>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.AttachmentId)
            //        .HasColumnName("AttachmentID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.BackFileName)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricColorId).HasColumnName("FabricColorID");

            //    entity.Property(e => e.FileName)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.Attachment)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_Attachment_AttachmentTypes_Setup");
            //});

            //modelBuilder.Entity<AttachmentTypesSetup>(entity =>
            //{
            //    entity.ToTable("AttachmentTypes_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BarCodeTypeSetup>(entity =>
            //{
            //    entity.ToTable("BarCodeType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BeadAttachmentSetup>(entity =>
            //{
            //    entity.ToTable("BeadAttachment_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BeadColor>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.BeadColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_BeadColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.BeadColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_BeadColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.BeadColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_BeadColor_BeadSpecification");
            //});

            //modelBuilder.Entity<BeadDesignSetup>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.ToTable("BeadDesign_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(65)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<BeadImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<BeadImageSetup>(entity =>
            //{
            //    entity.ToTable("BeadImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MetalFinishTypeId).HasColumnName("MetalFinishTypeID");

            //    entity.Property(e => e.PartHoleId).HasColumnName("PartHoleID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<BeadMaterialSetup>(entity =>
            //{
            //    entity.ToTable("BeadMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BeadPlacementInstruction>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.BeadPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_BeadPlacementInstruction_BeadSpecification");
            //});

            //modelBuilder.Entity<BeadSizeSetup>(entity =>
            //{
            //    entity.ToTable("BeadSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BeadSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.HoleArrangementId).HasColumnName("HoleArrangementID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.IsValid)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Attachment)
            //        .WithMany(p => p.BeadSpecification)
            //        .HasForeignKey(d => d.AttachmentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_BeadSpecification_BeadAttachment_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.BeadSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_BeadSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.BeadSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_BeadSpecification_SelectedTrim");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.BeadSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_BeadSpecification_BeadSize_Setup");
            //});

            //modelBuilder.Entity<BeadVenderSetup>(entity =>
            //{
            //    entity.ToTable("BeadVender_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BellyBand>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ItemSourceId).HasColumnName("ItemSourceID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");
            //});

            //modelBuilder.Entity<BellyBandImagesSetup>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("BellyBandImages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BellyBandItemSourceSetup>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("BellyBandItemSource_Setup");

            //    entity.Property(e => e.Description).HasMaxLength(50);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<BellyBandMaterialSetup>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("BellyBandMaterial_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<BellyBandPlacementPoints>(entity =>
            //{
            //     //   //entity.HasNoKey();

            //     entity.Property(e => e.BellyBandId).HasColumnName("BellyBandID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");
            //});

            //modelBuilder.Entity<BiFacedFabricColors>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DyeingProcessId).HasColumnName("DyeingProcessID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalletTypeId).HasColumnName("PalletTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.BiFacedFabricColors)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_BiFacedFabricColors_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<BlockOrder>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Comments).HasMaxLength(50);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GarmentId).HasColumnName("GarmentID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Status).HasDefaultValueSql("(5)");
            //});

            //modelBuilder.Entity<BolyBagAdhesiveTypeSetup>(entity =>
            //{
            //    entity.ToTable("BolyBagAdhesiveType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BrandSetup>(entity =>
            //{
            //    entity.HasKey(e => e.BrandId);

            //    entity.ToTable("Brand_Setup");

            //    entity.Property(e => e.BrandId).HasColumnName("BrandID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SupplierId).HasColumnName("SupplierID");
            //});

            ////modelBuilder.Entity<BrandSetupBk>(entity =>
            ////{
            ////entity.HasNoKey();

            ////    entity.ToTable("Brand_Setup_bk");

            ////    entity.Property(e => e.BrandId)
            ////        .HasColumnName("BrandID")
            ////        .ValueGeneratedOnAdd();

            ////    entity.Property(e => e.Description)
            ////        .IsRequired()
            ////        .HasMaxLength(50)
            ////        .IsUnicode(false);

            ////    entity.Property(e => e.SupplierId).HasColumnName("SupplierID");
            ////});

            //modelBuilder.Entity<BuckleColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.BuckleColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_BuckleColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.BuckleColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_BuckleColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.BuckleColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_BuckleColor_BuckleSpecification");
            //});

            //modelBuilder.Entity<BuckleImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<BuckleImageSetup>(entity =>
            //{
            //    entity.ToTable("BuckleImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignPatternId).HasColumnName("DesignPatternID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.MetalFinishTypeId).HasColumnName("MetalFinishTypeID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.BuckleImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_BuckleImage_Setup_BuckleMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.BuckleImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_BuckleImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<BuckleMaterialSetup>(entity =>
            //{
            //    entity.ToTable("BuckleMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(15)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BucklePlacementInstruction>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Location)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.BucklePlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_BucklePlacementInstruction_BuckleSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.BucklePlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .HasConstraintName("FK_BucklePlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<BuckleSizeSetup>(entity =>
            //{
            //    entity.ToTable("BuckleSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BuckleSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.BuckleSpecification)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .HasConstraintName("FK_BuckleSpecification_TrimMeasurementScale_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.BuckleSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .HasConstraintName("FK_BuckleSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.BuckleSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_BuckleSpecification_SelectedTrim");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.BuckleSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_BuckleSpecification_BuckleSize_Setup");
            //});

            //modelBuilder.Entity<ButtonColor>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.ButtonColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_ButtonColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.ButtonColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_ButtonColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ButtonColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ButtonColor_ButtonSpecification");
            //});

            //modelBuilder.Entity<ButtonHoleArrangementSetup>(entity =>
            //{
            //    entity.ToTable("ButtonHoleArrangement_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ButtonImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<ButtonImageSetup>(entity =>
            //{
            //    entity.ToTable("ButtonImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MetalFinishTypeId).HasColumnName("MetalFinishTypeID");

            //    entity.Property(e => e.PartHoleId).HasColumnName("PartHoleID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.ButtonImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ButtonImage_Setup_ButtonMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.ButtonImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_ButtonImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<ButtonMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ButtonMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(15)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ButtonPartHoleSetup>(entity =>
            //{
            //    entity.ToTable("ButtonPartHole_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TopTypeId).HasColumnName("TopTypeID");

            //    entity.HasOne(d => d.TopType)
            //        .WithMany(p => p.ButtonPartHoleSetup)
            //        .HasForeignKey(d => d.TopTypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ButtonPartHole_Setup_ButtonTopType_Setup");
            //});

            //modelBuilder.Entity<ButtonPlacementInstruction>(entity =>
            //{
            //     //   //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ButtonPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ButtonPlacementInstruction_ButtonSpecification");
            //});

            //modelBuilder.Entity<ButtonSizeSetup>(entity =>
            //{
            //    entity.ToTable("ButtonSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ButtonSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.HoleArrangementId).HasColumnName("HoleArrangementID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.PartHoleId).HasColumnName("PartHoleID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.HoleArrangement)
            //        .WithMany(p => p.ButtonSpecification)
            //        .HasForeignKey(d => d.HoleArrangementId)
            //        .HasConstraintName("FK_ButtonSpecification_ButtonHoleArrangement_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.ButtonSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ButtonSpecification_ButtonImage_Setup");

            //    entity.HasOne(d => d.PartHole)
            //        .WithMany(p => p.ButtonSpecification)
            //        .HasForeignKey(d => d.PartHoleId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ButtonSpecification_ButtonPartHole_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.ButtonSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ButtonSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.ButtonSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_ButtonSpecification_SelectedTrim");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.ButtonSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ButtonSpecification_ButtonSize_Setup");
            //});

            //modelBuilder.Entity<ButtonTopTypeSetup>(entity =>
            //{
            //    entity.ToTable("ButtonTopType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<BuyerCodeSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("BuyerCode_Setup");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(5)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.HasOne(d => d.Buyer)
            //        .WithMany(p => p.BuyerCodeSetup)
            //        .HasForeignKey(d => d.BuyerId)
            //        .HasConstraintName("FK_BuyerSeasonCode_Setup_Buyer_Setup");

            //    entity.HasOne(d => d.Gender)
            //        .WithMany(p => p.BuyerCodeSetup)
            //        .HasForeignKey(d => d.GenderId)
            //        .HasConstraintName("FK_BuyerSeasonCode_Setup_Gender_Setup");
            //});

            //modelBuilder.Entity<BuyerSetup>(entity =>
            //{
            //    entity.ToTable("Buyer_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ContactPerson)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Country)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(70)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fax)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.InspectingAgent)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Prefix)
            //        .HasMaxLength(5)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status).HasDefaultValueSql("(5)");

            //    entity.Property(e => e.TelNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Telno2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});



            //modelBuilder.Entity<BuyerWarehouseSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("Buyer_Warehouse_Setup");

            //    entity.Property(e => e.Adress)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<BuyerWisePercentageSetup>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.HasOne(d => d.Buyer)
            //        .WithMany(p => p.BuyerWisePercentageSetup)
            //        .HasForeignKey(d => d.BuyerId)
            //        .HasConstraintName("FK_BuyerWisePercentageSetup_Buyer_Setup");
            //});

            //modelBuilder.Entity<CadcamDispatch>(entity =>
            //{
            //    entity.ToTable("CADCAM_Dispatch");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ConsumptionPerPiece).HasColumnType("numeric(18, 6)");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<CadcamDispatchColorSets>(entity =>
            //{
            //    entity.ToTable("CADCAM_Dispatch_ColorSets");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.HasOne(d => d.Dispatch)
            //        .WithMany(p => p.CadcamDispatchColorSets)
            //        .HasForeignKey(d => d.DispatchId)
            //        .HasConstraintName("FK_CADCAM_Dispatch_ColorSets_CADCAM_Dispatch");
            //});

            //modelBuilder.Entity<CadcamDispatchDetails>(entity =>
            //{
            //    entity.ToTable("CADCAM_Dispatch_Details");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.HasOne(d => d.Dispatch)
            //        .WithMany(p => p.CadcamDispatchDetails)
            //        .HasForeignKey(d => d.DispatchId)
            //        .HasConstraintName("FK_CADCAM_Dispatch_Details_CADCAM_Dispatch");
            //});

            //modelBuilder.Entity<CadcamDispatchFabricColorSets>(entity =>
            //{
            //     //    //entity.HasNoKey();

            //     entity.ToTable("CADCAM_Dispatch_FabricColorSets");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<CadcamFinishedFabricWastageSetup>(entity =>
            //{
            //    entity.ToTable("CADCAM_FinishedFabricWastage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricComposition)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.HasOne(d => d.FabricQuality)
            //        .WithMany(p => p.CadcamFinishedFabricWastageSetup)
            //        .HasForeignKey(d => d.FabricQualityId)
            //        .HasConstraintName("FK_CADCAM_FinishedFabricWastage_Setup_FabricQuality_Setup");
            //});

            //modelBuilder.Entity<CadcamGeneratedLotSheetOrders>(entity =>
            //{
            //    entity.ToTable("CADCAM_GeneratedLotSheetOrders");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<CadcamMarker>(entity =>
            //{
            //    entity.ToTable("CADCAM_Marker");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.ImageName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Spreading)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CadcamMarkerRatio>(entity =>
            //{
            //     //     //entity.HasNoKey();

            //     entity.ToTable("CADCAM_Marker_Ratio");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MarkerId).HasColumnName("MarkerID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");
            //});

            //modelBuilder.Entity<CadcamMarkerRatio1>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("CADCAM_MarkerRatio");

            //    entity.Property(e => e.MarkerId).HasColumnName("MarkerID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.HasOne(d => d.Marker)
            //        .WithMany(p => p.CadcamMarkerRatio1)
            //        .HasForeignKey(d => d.MarkerId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_CADCAM_MarkerRatio_CADCAM_Marker");
            //});

            //modelBuilder.Entity<CadcamOrderStylesStatus>(entity =>
            //{
            //    entity.ToTable("CADCAM_OrderStylesStatus");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<CadcamWastagePercentage>(entity =>
            //{
            //    entity.ToTable("CADCAM_WastagePercentage");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricWastageId).HasColumnName("FabricWastageID");

            //    entity.HasOne(d => d.FabricWastage)
            //        .WithMany(p => p.CadcamWastagePercentage)
            //        .HasForeignKey(d => d.FabricWastageId)
            //        .HasConstraintName("FK_CADCAM_WastagePercentage_CADCAM_FinishedFabricWastage_Setup");
            //});

            //modelBuilder.Entity<CartageSetup>(entity =>
            //{
            //    entity.HasKey(e => e.CartageId);

            //    entity.ToTable("Cartage_Setup");

            //    entity.Property(e => e.CartageId).HasColumnName("CartageID");

            //    entity.Property(e => e.CartageDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartonImageSetup>(entity =>
            //{
            //    entity.ToTable("CartonImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CartonTypeId).HasColumnName("CartonTypeID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.NoOfPliesId).HasColumnName("NoOfPliesID");

            //    entity.Property(e => e.PrintedFaceId).HasColumnName("PrintedFaceID");

            //    entity.Property(e => e.PrintingImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintingTypeId).HasColumnName("PrintingTypeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<CartonNoOfPliesSetup>(entity =>
            //{
            //    entity.ToTable("CartonNoOfPlies_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartonPolyBagMaterialSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("CartonPolyBagMaterial_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<CartonPolyBagPrintImagesSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("CartonPolyBagPrintImages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartonPrintImageSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("CartonPrintImage_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartonPrintedFaceSetup>(entity =>
            //{
            //    entity.ToTable("CartonPrintedFace_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartonPrintingTypeSetup>(entity =>
            //{
            //    entity.ToTable("CartonPrintingType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartonSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("Carton_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<CartonSpecification>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.CartonPolyBagMaterialId).HasColumnName("CartonPolyBagMaterialID");

            //    entity.Property(e => e.CartonPolyBagPrintId).HasColumnName("CartonPolyBagPrintID");

            //    entity.Property(e => e.CartonPrintImageId).HasColumnName("CartonPrintImageID");

            //    entity.Property(e => e.CartonPrintingFaceId).HasColumnName("CartonPrintingFaceID");

            //    entity.Property(e => e.CartonTypeId).HasColumnName("CartonTypeID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConstraintId).HasColumnName("ConstraintID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ItemSourceId).HasColumnName("ItemSourceID");

            //    entity.Property(e => e.ShipmentPackingId).HasColumnName("ShipmentPackingID");

            //    entity.Property(e => e.VersionNo).HasDefaultValueSql("(1)");
            //});

            //modelBuilder.Entity<CartonTypeSetup>(entity =>
            //{
            //    entity.ToTable("CartonType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CartunSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CartonTypeId).HasColumnName("CartonTypeID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.NoOfPliesId).HasColumnName("NoOfPliesID");

            //    entity.Property(e => e.PrintedFaceId).HasColumnName("PrintedFaceID");

            //    entity.Property(e => e.PrintingTypeId).HasColumnName("PrintingTypeID");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<ChainAllowancesSetup>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.ToTable("ChainAllowances_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<ChainDailyProduction>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.GarmentCategoryId).HasColumnName("GarmentCategoryID");

            //    entity.HasOne(d => d.GarmentCategory)
            //        .WithMany(p => p.ChainDailyProduction)
            //        .HasForeignKey(d => d.GarmentCategoryId)
            //        .HasConstraintName("FK_ChainDailyProduction_GarmentCategory_Setup");
            //});

            //modelBuilder.Entity<ChainGroupDepartment>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<ChainHistoricalNmax>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.ToTable("ChainHistoricalNMax");

            //    entity.Property(e => e.GarmentId).HasColumnName("GarmentID");

            //    entity.Property(e => e.NMax).HasColumnName("nMax");

            //    entity.HasOne(d => d.Garment)
            //        .WithMany(p => p.ChainHistoricalNmax)
            //        .HasForeignKey(d => d.GarmentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ChainHistoricalNMax_GarmentType_Setup");
            //});

            //modelBuilder.Entity<ChainLine>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Agmid).HasColumnName("AGMID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<ChainMachineAttachment>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.AttachmentType)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MachineId).HasColumnName("MachineID");

            //    entity.Property(e => e.Placement)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Size)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ChainMachineBrand>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<ChainMachineConstraints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ChainMachineTypeId).HasColumnName("ChainMachineTypeID");

            //    entity.Property(e => e.ChainProcessSetupId).HasColumnName("ChainProcessSetupID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<ChainMachineDetailSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("ChainMachineDetail_Setup");

            //    entity.Property(e => e.BrandId).HasColumnName("BrandID");

            //    entity.Property(e => e.ChainMachineTypeId).HasColumnName("ChainMachineTypeID");

            //    entity.Property(e => e.Famcode)
            //        .HasColumnName("FAMCode")
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MachineCode)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MachineNo)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ModelNo)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Origin)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ChainMachineFlaggedHistory>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.EndDate).HasColumnType("datetime");

            //    entity.Property(e => e.MachineId).HasColumnName("MachineID");

            //    entity.Property(e => e.StartDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<ChainMachineTypeRateVersionSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("ChainMachineTypeRateVersion_Setup");

            //    entity.Property(e => e.ChainMachineTypeId).HasColumnName("ChainMachineTypeID");
            //});

            //modelBuilder.Entity<ChainMachineTypeSetup>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.ToTable("ChainMachineType_Setup");

            //    entity.Property(e => e.Category).HasDefaultValueSql("((1))");

            //    entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FammachineTypeId).HasColumnName("FAMMachineTypeID");

            //    entity.Property(e => e.FammachineTypeName)
            //        .HasColumnName("FAMMachineTypeName")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<ChainOperationMachineType>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ChainMachineTypeId).HasColumnName("ChainMachineTypeID");

            //    entity.Property(e => e.ChainOperationsId).HasColumnName("ChainOperationsID");
            //});

            //modelBuilder.Entity<ChainOperations>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Category).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ChainOperations1>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasColumnName("NAME")
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ChainOperationsGarment>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ChainOperationId).HasColumnName("ChainOperationID");

            //    entity.Property(e => e.GarmentCategoryId).HasColumnName("GarmentCategoryID");

            //    entity.HasOne(d => d.GarmentCategory)
            //        .WithMany(p => p.ChainOperationsGarment)
            //        .HasForeignKey(d => d.GarmentCategoryId)
            //        .HasConstraintName("FK_ChainOperationsGarment_GarmentCategory_Setup");
            //});

            //modelBuilder.Entity<ChainProcessSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ApprovalDate).HasColumnType("datetime");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Ge2)
            //        .IsRequired()
            //        .HasColumnName("GE2")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.HandSmv).HasColumnName("HandSMV");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IsStitch)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MachineSmv).HasColumnName("MachineSMV");

            //    entity.Property(e => e.NMax).HasColumnName("nMax");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ChainProcessSetupOperations>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.AttachmentId)
            //        .HasColumnName("AttachmentID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ChainOperationId).HasColumnName("ChainOperationID");

            //    entity.Property(e => e.ChainProcessSetupId).HasColumnName("ChainProcessSetupID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.ToGroupId).HasColumnName("ToGroupID");
            //});

            //modelBuilder.Entity<ChainSubContractorRates>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.GarmentId).HasColumnName("GarmentID");

            //    entity.Property(e => e.LeadTime)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.SubContractorId).HasColumnName("SubContractorID");
            //});

            //modelBuilder.Entity<ChordHolderImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<ChordHolderSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Design)
            //        .WithMany(p => p.ChordHolderSpecification)
            //        .HasForeignKey(d => d.DesignId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ChordHolderSpecification_ChordholderDesign_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.ChordHolderSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ChordHolderSpecification_ChordholderImage_Setup");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.ChordHolderSpecification)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .HasConstraintName("FK_ChordHolderSpecification_TrimMeasurementScale_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.ChordHolderSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ChordHolderSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.ChordHolderSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ChordHolderSpecification_SelectedTrim");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.ChordHolderSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .HasConstraintName("FK_ChordHolderSpecification_ChordholderSize_Setup");
            //});

            //modelBuilder.Entity<ChordholderColor>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.ChordholderColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_ChordholderColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ChordholderColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ChordholderColor_ChordHolderSpecification");
            //});

            //modelBuilder.Entity<ChordholderDesignSetup>(entity =>
            //{
            //    entity.ToTable("ChordholderDesign_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ChordholderImageSetup>(entity =>
            //{
            //    entity.ToTable("ChordholderImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.MetalFinishTypeId).HasColumnName("MetalFinishTypeID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId)
            //        .IsRequired()
            //        .HasColumnName("VendorID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.ChordholderImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ChordholderImage_Setup_ChordholderMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.ChordholderImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_ChordholderImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<ChordholderMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ChordholderMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ChordholderPlacementInstruction>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ChordholderPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ChordholderPlacementInstruction_ChordHolderSpecification");
            //});

            //modelBuilder.Entity<ChordholderSizeSetup>(entity =>
            //{
            //    entity.ToTable("ChordholderSize_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<CitySetup>(entity =>
            //{
            //    entity.ToTable("City_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CountryId).HasColumnName("CountryID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Country)
            //        .WithMany(p => p.CitySetup)
            //        .HasForeignKey(d => d.CountryId)
            //        .HasConstraintName("FK_City_Setup_Country_Setup");
            //});

            //modelBuilder.Entity<CmblConsolidatedFabricIssQuantitytemp>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("CMBL_ConsolidatedFabricIssQuantitytemp");

            //    entity.Property(e => e.ConsolidatedFabricXml)
            //        .HasColumnName("ConsolidatedFabricXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            ////modelBuilder.Entity<CmblIssuanceWithOutRequisition>(entity =>
            ////{
            ////    ////entity.HasNoKey();

            ////    entity.ToTable("CMBL_IssuanceWithOutRequisition");

            ////    entity.Property(e => e.ActivityId).HasColumnName("ActivityID");

            ////    entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

            ////    entity.Property(e => e.IssuanceDate).HasColumnType("datetime");

            ////    entity.Property(e => e.IssuanceId)
            ////        .HasColumnName("IssuanceID")
            ////        .ValueGeneratedOnAdd();

            ////    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            ////    entity.Property(e => e.ReceivingPerson)
            ////        .IsRequired()
            ////        .HasMaxLength(50)
            ////        .IsUnicode(false);

            ////    entity.Property(e => e.Remarks)
            ////        .HasMaxLength(200)
            ////        .IsUnicode(false);

            ////    entity.Property(e => e.RequisitionNo)
            ////        .HasMaxLength(50)
            ////        .IsUnicode(false);

            ////    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            ////    entity.Property(e => e.UserId).HasColumnName("UserID");

            ////    entity.Property(e => e.YarnKncontractId).HasColumnName("YarnKNContractID");
            ////});

            //modelBuilder.Entity<CmblUserpagesBkup05dec2009b>(entity =>
            //{
            //     //  //entity.HasNoKey();

            //     entity.ToTable("cmbl_userpages_bkup_05Dec2009b");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MenuId).HasColumnName("MenuID");

            //    entity.Property(e => e.PageId).HasColumnName("PageID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<CollarSizeSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollarSpecificationId).HasColumnName("CollarSpecificationID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.CollarSpecification)
            //        .WithMany(p => p.CollarSizeSpecification)
            //        .HasForeignKey(d => d.CollarSpecificationId)
            //        .HasConstraintName("FK_CollarSizeSpecification_CollarSpecification");

            //    entity.HasOne(d => d.SelectedSizeRange)
            //        .WithMany(p => p.CollarSizeSpecification)
            //        .HasForeignKey(d => d.SelectedSizeRangeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_CollarSizeSpecification_SelectedGarmentSizeRange");
            //});

            //modelBuilder.Entity<CollarSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricAndColorId).HasColumnName("FabricAndColorID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.SelectedFabricTrimId).HasColumnName("SelectedFabricTrimID");

            //    entity.HasOne(d => d.FabricAndColor)
            //        .WithMany(p => p.CollarSpecification)
            //        .HasForeignKey(d => d.FabricAndColorId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_CollarSpecification_FabricTrim_FabricAndColorType_Setup");

            //    entity.HasOne(d => d.Fabric)
            //        .WithMany(p => p.CollarSpecification)
            //        .HasForeignKey(d => d.FabricId)
            //        .HasConstraintName("FK_CollarSpecification_FabricSpecification");
            //});

            //modelBuilder.Entity<Collection>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AssignedDate).HasColumnType("datetime");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.DivisionId).HasColumnName("DivisionID");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.SeasonId).HasColumnName("SeasonID");

            //    entity.HasOne(d => d.Gender)
            //        .WithMany(p => p.Collection)
            //        .HasForeignKey(d => d.GenderId)
            //        .HasConstraintName("FK_Collection_Gender_Setup");
            //});

            //modelBuilder.Entity<CollectionModelPriceList>(entity =>
            //{
            //    entity.ToTable("CollectionModel_PriceList");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.InvoicePrice).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.InvoicePriceCurrencyId)
            //        .HasColumnName("InvoicePriceCurrencyID")
            //        .HasDefaultValueSql("(2)");

            //    entity.Property(e => e.InvoicePriceEntryDate).HasColumnType("datetime");

            //    entity.Property(e => e.InvoicePriceUserId).HasColumnName("InvoicePriceUserID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.Style)
            //        .WithMany(p => p.CollectionModelPriceList)
            //        .HasForeignKey(d => d.StyleId)
            //        .HasConstraintName("FK_CollectionModel_PriceList_Style");
            //});

            //modelBuilder.Entity<CollectionModelYarnList>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.YarnXml)
            //        .HasColumnName("YarnXML")
            //        .HasMaxLength(4000);
            //});

            //modelBuilder.Entity<CollectionWiseCostSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.SetupId).HasColumnName("SetupID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<CollectionWisePriceSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CurrencyId).HasColumnName("CurrencyID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.HeatherYarnUnitId).HasColumnName("HeatherYarnUnitID");

            //    entity.Property(e => e.IsDyedYarnRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsEmbroRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsHeatherYarnRate).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsKnittingRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsPantoneRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsPrintingRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsSimpleYarnRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsSmvrate)
            //        .IsRequired()
            //        .HasColumnName("IsSMVRate")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsTrimRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsWashingFinishingRate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsWastage)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ItemSetupId).HasColumnName("ItemSetupID");

            //    entity.Property(e => e.TestId)
            //        .HasColumnName("TestID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<CollectionWisePriceSetupDetail>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ItemSetupId).HasColumnName("ItemSetupID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<ColorMatchingSetup>(entity =>
            //{
            //    entity.ToTable("ColorMatching_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(15)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ColorPalleteTypeSetup>(entity =>
            //{
            //    entity.ToTable("ColorPalleteType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ColorSourceSetup>(entity =>
            //{
            //    entity.ToTable("ColorSource_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ColorTypeSetup>(entity =>
            //{
            //    entity.ToTable("ColorType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ConsolidatedFrsquantitytemp>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("ConsolidatedFRSQuantitytemp");

            //    entity.Property(e => e.ConsolidatedFabricXml)
            //        .HasColumnName("ConsolidatedFabricXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<Continents>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<CostingCm>(entity =>
            //{
            //    entity.HasKey(e => e.Orderid);

            //    entity.ToTable("CostingCM$");

            //    entity.Property(e => e.Orderid)
            //        .HasColumnName("orderid")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CostingCm1).HasColumnName("Costing CM");

            //    entity.Property(e => e.Dyeingrate).HasColumnName("dyeingrate");

            //    entity.Property(e => e.OderNo)
            //        .HasColumnName("Oder No")
            //        .HasMaxLength(255);
            //});

            //modelBuilder.Entity<CostingConsolidatedFabric>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ConsolidatedFabricId).HasColumnName("ConsolidatedFabricID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");
            //});

            //modelBuilder.Entity<CostingVariationWise>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<CountryAssormentSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("Country_Assorment_Setup");

            //    entity.Property(e => e.CountryAbbrevation)
            //        .HasColumnName("Country_Abbrevation")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CountryBuyer).HasColumnName("Country_Buyer");

            //    entity.Property(e => e.CountryId)
            //        .HasColumnName("Country_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.CountryName)
            //        .HasColumnName("Country_Name")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CountrySetupId).HasColumnName("Country_SetupID");
            //});

            modelBuilder.Entity<Country_Setup>(entity =>
            {
                //entity.ToTable("Country_Setup");

                entity.Property(e => e.ID)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            //modelBuilder.Entity<CourierSetup>(entity =>
            //{
            //     // //entity.HasNoKey();

            //     entity.ToTable("Courier_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<CurrencySetup>(entity =>
            //{
            //    entity.ToTable("Currency_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CurrencySymbol)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fid).HasColumnName("FID");
            //});

            //modelBuilder.Entity<DailyTimeBuckets>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.DayDate).HasColumnType("datetime");

            //    entity.Property(e => e.DayId).HasColumnName("DayID");
            //});

            //modelBuilder.Entity<DatabaseBackup>(entity =>
            //{
            //    entity.HasKey(e => e.Name)
            //        .HasName("PK__DatabaseBackup__3C0641FD")
            //        .IsClustered(false);

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BackupFlagFull)
            //        .IsRequired()
            //        .HasMaxLength(1)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BackupFlagLog)
            //        .IsRequired()
            //        .HasMaxLength(1)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RetentionPeriodFull).HasColumnType("datetime");

            //    entity.Property(e => e.RetentionPeriodLog).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<Debug>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("debug");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.Did)
            //        .HasColumnName("DID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Input).HasColumnType("text");
            //});

            //modelBuilder.Entity<DeletedPolyBag>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.DeletedOn).HasColumnType("datetime");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<DenimSelectedWetProcesses>(entity =>
            //{
            //    entity.ToTable("Denim_SelectedWetProcesses");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcessStageId).HasColumnName("ProcessStageID");

            //    entity.Property(e => e.ProcessTypeId).HasColumnName("ProcessTypeID");

            //    entity.Property(e => e.WetProcessMainId).HasColumnName("WetProcessMainID");

            //    entity.HasOne(d => d.ProcessStage)
            //        .WithMany(p => p.DenimSelectedWetProcesses)
            //        .HasForeignKey(d => d.ProcessStageId)
            //        .HasConstraintName("FK_Denim_SelectedWetProcesses_WetProcessStages_Setup");
            //});

            //modelBuilder.Entity<DenimVendor>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<DenimVendorCodeSetup>(entity =>
            //{
            //    entity.ToTable("DenimVendor_Code_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.DenimVendorId).HasColumnName("DenimVendorID");

            //    entity.Property(e => e.VendorCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.DenimVendor)
            //        .WithMany(p => p.DenimVendorCodeSetup)
            //        .HasForeignKey(d => d.DenimVendorId)
            //        .HasConstraintName("FK_DenimVendor_Code_Setup_DenimVendor_Setup");
            //});

            //modelBuilder.Entity<DenimVendorSetup>(entity =>
            //{
            //    entity.ToTable("DenimVendor_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");
            //});

            //modelBuilder.Entity<DenimWeightSetup>(entity =>
            //{
            //    entity.ToTable("DenimWeight_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<DenimWetProcessesMain>(entity =>
            //{
            //    entity.ToTable("Denim_WetProcesses_Main");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.SwatchNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.WashingCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.DenimWetProcessesMain)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_Denim_WetProcesses_Main_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<Dimension>(entity =>
            //{
            //     //////entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<DomainServer>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("Domain_Server");

            //    entity.Property(e => e.ServerId).HasColumnName("ServerID");

            //    entity.Property(e => e.ServerName)
            //        .IsRequired()
            //        .HasMaxLength(50);
            //});

            //modelBuilder.Entity<DomainSetup>(entity =>
            //{
            //    entity.ToTable("Domain_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(70)
            //        .IsUnicode(false);

            //    entity.Property(e => e.HomePage)
            //        .IsRequired()
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ServerId)
            //        .HasColumnName("ServerID")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.WorkCenterId).HasColumnName("WorkCenterID");
            //});

            //modelBuilder.Entity<DrawStringChordHolder>(entity =>
            //{
            //     //////entity.HasNoKey();

            //     entity.Property(e => e.ChordHolderId).HasColumnName("ChordHolderID");

            //    entity.Property(e => e.DrawStringId).HasColumnName("DrawStringID");
            //});

            //modelBuilder.Entity<DrawStringDyeingSetup>(entity =>
            //{
            //    entity.ToTable("DrawStringDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<DrawStringImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            modelBuilder.Entity<DrawstringColor>(entity =>
            {
                //    ////entity.HasNoKey();

                //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

                //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

                //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                //    entity.Property(e => e.TrimColor)
                //        .IsRequired()
                //        .HasMaxLength(10)
                //        .IsUnicode(false);

                entity.HasOne(d => d.ColorSet)
                .WithMany(p => p.DrawstringColor)
                .HasForeignKey(d => d.ColorSetID)
                .HasConstraintName("FK_DrawstringColor_FabricSpecificationColor");

                entity.HasOne(d => d.Object)
                    .WithMany(p => p.DrawstringColor)
                    .HasForeignKey(d => d.ObjectID)
                    .HasConstraintName("FK_DrawstringColor_DrawstringSpecification");
            });

            //modelBuilder.Entity<DrawstringImageSetup>(entity =>
            //{
            //    entity.ToTable("DrawstringImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.NoOfPlies).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.DrawstringImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .HasConstraintName("FK_DrawstringImage_Setup_DrawstringMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.DrawstringImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_DrawstringImage_Setup_TrimUnit_Setup");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.DrawstringImageSetup)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_DrawstringImage_Setup_DrawstringType_Setup");
            //});

            //modelBuilder.Entity<DrawstringMaterialSetup>(entity =>
            //{
            //    entity.ToTable("DrawstringMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<DrawstringPlacementInstruction>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.DrawstringPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_DrawstringPlacementInstruction_DrawstringSpecification");
            //});

            //modelBuilder.Entity<DrawstringSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.HasOne(d => d.Dyed)
            //        .WithMany(p => p.DrawstringSpecification)
            //        .HasForeignKey(d => d.DyedId)
            //        .HasConstraintName("FK_DrawstringSpecification_DrawStringDyeing_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.DrawstringSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_DrawstringSpecification_DrawstringImage_Setup");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.DrawstringSpecification)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_DrawstringSpecification_DrawstringMaterial_Setup");
            //});

            //modelBuilder.Entity<DrawstringTypeSetup>(entity =>
            //{
            //    entity.ToTable("DrawstringType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<DrawstringUse>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.GarmentSizeRangeId).HasColumnName("GarmentSizeRangeID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.DrawstringUse)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_DrawstringUse_DrawstringSpecification");
            //});

            //modelBuilder.Entity<DyeingLrSetup>(entity =>
            //{
            //    entity.ToTable("DyeingLR_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<DyeingPretreatmentSetup>(entity =>
            //{
            //    entity.ToTable("DyeingPretreatment_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ElasticColor>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.ElasticColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_ElasticColor_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<ElasticDrawstring>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.DrawStringId).HasColumnName("DrawStringID");

            //    entity.Property(e => e.ElasticId).HasColumnName("ElasticID");
            //});

            //modelBuilder.Entity<ElasticFinishSetup>(entity =>
            //{
            //    entity.ToTable("ElasticFinish_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<ElasticImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<ElasticImageSetup>(entity =>
            //{
            //    entity.ToTable("ElasticImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.FinishId).HasColumnName("FinishID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.StringId).HasColumnName("StringID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");
            //});

            //modelBuilder.Entity<ElasticPlacementInstruction>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ElasticPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ElasticPlacementInstruction_ElasticSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.ElasticPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ElasticPlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<ElasticSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.FinishId).HasColumnName("FinishID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.StringId).HasColumnName("StringID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");
            //});

            //modelBuilder.Entity<ElasticStringSetup>(entity =>
            //{
            //    entity.ToTable("ElasticString_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(15)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ElasticTypeSetup>(entity =>
            //{
            //    entity.ToTable("ElasticType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ElasticUse>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.GarmentSizeRangeId).HasColumnName("GarmentSizeRangeID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ElasticUse)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ElasticUse_ElasticSpecification");
            //});

            //modelBuilder.Entity<ElasticWidthSetup>(entity =>
            //{
            //    entity.ToTable("ElasticWidth_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ElementInsertionSetup>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("ElementInsertion_Setup");

            //    entity.Property(e => e.ElementId).HasColumnName("ElementID");

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.HasOne(d => d.Insertion)
            //        .WithMany(p => p.ElementInsertionSetup)
            //        .HasForeignKey(d => d.InsertionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ElementInsertion_Setup_Insertion_Setup");
            //});

            //modelBuilder.Entity<ElementPlacementInstructionsSetup>(entity =>
            //{
            //    entity.ToTable("ElementPlacementInstructions_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderStyleElementId).HasColumnName("OrderStyleElementID");
            //});

            //modelBuilder.Entity<ElementTransactionLog>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ElementId).HasColumnName("ElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate)
            //        .HasColumnType("datetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<EmailStyleElement>(entity =>
            //{
            //    entity.ToTable("Email_StyleElement");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ElementId).HasColumnName("ElementID");

            //    entity.Property(e => e.Filename)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<EmailTrim>(entity =>
            //{
            //    entity.ToTable("Email_Trim");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CreateDate)
            //        .HasColumnType("datetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.GroupFile)
            //        .HasMaxLength(300)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.XmlFile)
            //        .HasColumnName("xmlFile")
            //        .HasColumnType("xml");
            //});

            //modelBuilder.Entity<EmbroAppliqueThreads>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.EmbroPrintFabricSpecificationId).HasColumnName("EmbroPrintFabricSpecificationID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ThreadId).HasColumnName("ThreadID");

            //    entity.HasOne(d => d.EmbroPrintFabricSpecification)
            //        .WithMany(p => p.EmbroAppliqueThreads)
            //        .HasForeignKey(d => d.EmbroPrintFabricSpecificationId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_EmbroAppliqueThreads_EmbroPrintFabricSpecification");

            //    entity.HasOne(d => d.Thread)
            //        .WithMany(p => p.EmbroAppliqueThreads)
            //        .HasForeignKey(d => d.ThreadId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_EmbroAppliqueThreads_EmbroLayers");
            //});

            //modelBuilder.Entity<EmbroBrandSetup>(entity =>
            //{
            //    entity.ToTable("EmbroBrand_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EmbroColor>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.EmbroColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_EmbroColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.EmbroColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_EmbroColor_EmbroSpecification");
            //});

            //modelBuilder.Entity<EmbroFrameSizeSetup>(entity =>
            //{
            //    entity.ToTable("EmbroFrameSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FrameName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EmbroImageColor>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<EmbroLayers>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.BrandId).HasColumnName("BrandID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.PalletTypeId).HasColumnName("PalletTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.HasOne(d => d.Brand)
            //        .WithMany(p => p.EmbroLayers)
            //        .HasForeignKey(d => d.BrandId)
            //        .HasConstraintName("FK_EmbroLayers_EmbroBrand_Setup");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.EmbroLayers)
            //        .HasForeignKey(d => d.MaterialId)
            //        .HasConstraintName("FK_EmbroLayers_EmbroMaterial_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.EmbroLayers)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_EmbroLayers_EmbroSpecification");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.EmbroLayers)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EmbroLayers_EmbroType_Setup");
            //});

            //modelBuilder.Entity<EmbroMaterialSetup>(entity =>
            //{
            //    entity.ToTable("EmbroMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EmbroPlacementInstruction>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.Property(e => e.DistFmBottom).HasColumnName("Dist_fm_Bottom");

            //    entity.Property(e => e.DistFmLeft).HasColumnName("Dist_fm_Left");

            //    entity.Property(e => e.DistFmRight).HasColumnName("Dist_fm_Right");

            //    entity.Property(e => e.DistFmTop).HasColumnName("Dist_fm_Top");

            //    entity.Property(e => e.IsCentered).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.EmbroPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_EmbroPlacementInstruction_EmbroSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.EmbroPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EmbroPlacementInstruction_EmbroPrintPlacementPoint_Setup");
            //});

            //modelBuilder.Entity<EmbroPrintApproveTransactionLog>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("EmbroPrintApproveTransaction_Log");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<EmbroPrintDesignSetup>(entity =>
            //{
            //    entity.ToTable("EmbroPrintDesign_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<EmbroPrintFabricCompositionSetup>(entity =>
            //{
            //    entity.ToTable("EmbroPrintFabricComposition_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EmbroPrintFabricSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.BodyPart)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CompositionId).HasColumnName("CompositionID");

            //    entity.Property(e => e.DenimWeightId).HasColumnName("DenimWeightID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id1).HasColumnName("ID1");

            //    entity.Property(e => e.Id2).HasColumnName("ID2");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OrderStyleElementId).HasColumnName("OrderStyleElementID");

            //    entity.Property(e => e.PalletId).HasColumnName("PalletID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EmbroPrintPlacementPointSetup>(entity =>
            //{
            //    entity.ToTable("EmbroPrintPlacementPoint_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Status).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TrimId)
            //        .HasColumnName("TrimID")
            //        .HasComment("1=Embro and 2 = Printing");
            //});

            //modelBuilder.Entity<EmbroPrintSubcontractorSetup>(entity =>
            //{
            //     ////entity.HasNoKey();

            //     entity.ToTable("EmbroPrintSubcontractor_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.TypeId)
            //        .HasColumnName("TypeID")
            //        .HasComment("TypeID = 1 for Embro and TypeID = 2 for Printing");
            //});

            //modelBuilder.Entity<EmbroPrintThreadColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.EmbroPrintThreadColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_EmbroPrintThreadColor_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<EmbroPrintThreadSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CountId).HasColumnName("CountID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");
            //});

            //modelBuilder.Entity<EmbroPullerPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");
            //});

            //modelBuilder.Entity<EmbroSizes>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.EmbroSizes)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_EmbroSizes_EmbroSpecification");
            //});

            //modelBuilder.Entity<EmbroSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FrameNameId).HasColumnName("FrameNameID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.Length)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VariantId).HasColumnName("VariantID");

            //    entity.Property(e => e.Width)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.EmbroSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .HasConstraintName("FK_EmbroSpecification_PrintEmbroImage_Setup");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.EmbroSpecification)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .HasConstraintName("FK_EmbroSpecification_StyleElementMeasurementScale");

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.EmbroSpecification)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .HasConstraintName("FK_EmbroSpecification_SelectedElement");

            //    entity.HasOne(d => d.Variant)
            //        .WithMany(p => p.EmbroSpecification)
            //        .HasForeignKey(d => d.VariantId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EmbroSpecification_EmbroVariant_Setup");
            //});

            //modelBuilder.Entity<EmbroToBeDoneSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("EmbroToBeDone_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");
            //});

            //modelBuilder.Entity<EmbroTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Ipaddress)
            //        .HasColumnName("IPAddress")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsGeredefinition)
            //        .HasColumnName("IsGERedefinition")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<EmbroTypeSetup>(entity =>
            //{
            //    entity.ToTable("EmbroType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EmbroVariantSetup>(entity =>
            //{
            //    entity.ToTable("EmbroVariant_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ErpdomainsSetup>(entity =>
            //{
            //    entity.ToTable("ERPDomains_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Erplanguage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("ERPLanguage");

            //    entity.Property(e => e.English)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.French)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Italian)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Spanish)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ThreeStar)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ErrorLog>(entity =>
            //{
            //    entity.HasKey(e => e.Eid);

            //    entity.Property(e => e.Eid).HasColumnName("EID");

            //    entity.Property(e => e.DateX).IsUnicode(false);

            //    entity.Property(e => e.ErrorXml)
            //        .HasColumnName("ErrorXML")
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ExceptionMessagesSetup>(entity =>
            //{
            //    entity.HasKey(e => e.MessageId);

            //    entity.ToTable("ExceptionMessages_Setup");

            //    entity.Property(e => e.MessageId)
            //        .HasColumnName("MessageID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DomainId).HasColumnName("DomainID");
            //});

            //modelBuilder.Entity<EyeletColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.EyeletColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_EyeletColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.EyeletColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_EyeletColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.EyeletColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_EyeletColor_EyeletSpecification");
            //});

            //modelBuilder.Entity<EyeletDyeingSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("EyeletDyeing_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<EyeletImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<EyeletImageSetup>(entity =>
            //{
            //    entity.ToTable("EyeletImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MetalFinishTypeId).HasColumnName("MetalFinishTypeID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId)
            //        .HasColumnName("UserID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<EyeletMaterialSetup>(entity =>
            //{
            //    entity.ToTable("EyeletMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EyeletPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.EyeletPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_EyeletPlacementInstruction_EyeletSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.EyeletPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EyeletPlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<EyeletSizeSetup>(entity =>
            //{
            //    entity.ToTable("EyeletSize_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<EyeletSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.EyeletSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EyeletSpecification_EyeletImage_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.EyeletSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EyeletSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.EyeletSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_EyeletSpecification_EyeletSize_Setup");
            //});

            //modelBuilder.Entity<FabricBrandSetup>(entity =>
            //{
            //    entity.HasKey(e => e.BrandId);

            //    entity.ToTable("FabricBrand_Setup");

            //    entity.Property(e => e.BrandId).HasColumnName("BrandID");

            //    entity.Property(e => e.BrandDescription)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MillId).HasColumnName("MillID");
            //});

            //modelBuilder.Entity<FabricCalculationDimensions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FabricCategoryMachineType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.HasOne(d => d.FabricCategory)
            //        .WithMany(p => p.FabricCategoryMachineType)
            //        .HasForeignKey(d => d.FabricCategoryId)
            //        .HasConstraintName("FK_FabricCategoryMachineType_FabricCategory_setup");

            //    entity.HasOne(d => d.MachineTypeNavigation)
            //        .WithMany(p => p.FabricCategoryMachineType)
            //        .HasForeignKey(d => d.MachineType)
            //        .HasConstraintName("FK_FabricCategoryMachineType_FabricMachineType_Setup");
            //});

            //modelBuilder.Entity<FabricCategory_setup>(entity =>
            //{
            //    entity.ToTable("FabricCategory_setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricCategoryToBeProcured>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FabricCategory_ToBeProcured");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.FabricCategoryToBeProcured)
            //        .HasForeignKey(d => d.TypeId)
            //        .HasConstraintName("FK_FabricCategory_ToBeProcured_FS_RequirementSheet_FabricType_Setup");
            //});

            //modelBuilder.Entity<FabricCodeAssignmentSetup>(entity =>
            //{
            //    entity.HasKey(e => e.FcodeId);

            //    entity.ToTable("FabricCodeAssignment_Setup");

            //    entity.Property(e => e.FcodeId).HasColumnName("FCodeID");

            //    entity.Property(e => e.AssignedFabricCodeId).HasColumnName("AssignedFabricCodeID");

            //    entity.Property(e => e.Commments)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCodeId).HasColumnName("FabricCodeID");
            //});

            //modelBuilder.Entity<FabricColorMatchingSourceSetup>(entity =>
            //{
            //    entity.ToTable("FabricColorMatchingSource_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricColorSourceSetup>(entity =>
            //{
            //    entity.ToTable("FabricColorSource_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricDyeingProcessSetup>(entity =>
            //{
            //    entity.ToTable("FabricDyeingProcess_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SuperBomid).HasColumnName("SuperBOMID");
            //});

            //modelBuilder.Entity<FabricDyeingTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricDyeingType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.PageNavigation)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricFeederStripeSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");

            //    entity.HasOne(d => d.YarnSpecification)
            //        .WithMany(p => p.FabricFeederStripeSpecification)
            //        .HasForeignKey(d => d.YarnSpecificationId)
            //        .HasConstraintName("FK_FabricFeederStripeSpecification_FabricYarnSpecification");
            //});

            //modelBuilder.Entity<FabricFeederStripeSpecificationSetup>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");
            //});

            //modelBuilder.Entity<FabricFinishBusinessRuleSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FabricFinishBusinessRule_Setup");

            //    entity.Property(e => e.FinishingId).HasColumnName("FinishingID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.HasOne(d => d.Finishing)
            //        .WithMany(p => p.FabricFinishBusinessRuleSetup)
            //        .HasForeignKey(d => d.FinishingId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricFinishBusinessRule_Setup_FabricFinishing_Setup1");
            //});

            //modelBuilder.Entity<FabricFinishingProcessSetup>(entity =>
            //{
            //    entity.ToTable("FabricFinishingProcess_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");
            //});

            //modelBuilder.Entity<FabricFinishingProcessSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FinishingProcessId).HasColumnName("FinishingProcessID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricFinishingProcessSpecification)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricFinishingProcessSpecification_FabricSpecification");
            //});

            //modelBuilder.Entity<FabricFinishingPropertiesSetup>(entity =>
            //{
            //    entity.ToTable("FabricFinishingProperties_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FinishingId).HasColumnName("FinishingID");

            //    entity.HasOne(d => d.Finishing)
            //        .WithMany(p => p.FabricFinishingPropertiesSetup)
            //        .HasForeignKey(d => d.FinishingId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricFinishingProperties_Setup_FabricFinishing_Setup");
            //});

            //modelBuilder.Entity<FabricFinishingPropertiesValueSetup>(entity =>
            //{
            //    entity.ToTable("FabricFinishingPropertiesValue_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricFinishingPropertiesId).HasColumnName("FabricFinishingPropertiesID");

            //    entity.HasOne(d => d.FabricFinishingProperties)
            //        .WithMany(p => p.FabricFinishingPropertiesValueSetup)
            //        .HasForeignKey(d => d.FabricFinishingPropertiesId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricFinishingPropertiesValue_Setup_FabricFinishingProperties_Setup");
            //});

            //modelBuilder.Entity<FabricFinishingSetup>(entity =>
            //{
            //    entity.ToTable("FabricFinishing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricGuageSetup>(entity =>
            //{
            //    entity.ToTable("FabricGuage_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.EndGsm).HasColumnName("EndGSM");

            //    entity.Property(e => e.StartGsm).HasColumnName("StartGSM");
            //});

            //modelBuilder.Entity<FabricHeatherYarnRateSetup>(entity =>
            //{
            //    entity.ToTable("FabricHeatherYarnRate_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricYarnCompositionId).HasColumnName("FabricYarnCompositionID");

            //    entity.Property(e => e.FabricYarnCountId).HasColumnName("FabricYarnCountID");

            //    entity.Property(e => e.FabricYarnQualityId).HasColumnName("FabricYarnQualityID");

            //    entity.Property(e => e.FabricYarnUnitId).HasColumnName("FabricYarnUnitID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.FabricYarnVendorColorNameId).HasColumnName("FabricYarnVendorColorNameID");

            //    entity.Property(e => e.FabricYarnVendorId).HasColumnName("FabricYarnVendorID");
            //});

            //modelBuilder.Entity<FabricImageSetup>(entity =>
            //{
            //    entity.ToTable("FabricImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<FabricJacquardSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BaseYarnId).HasColumnName("BaseYarnID");

            //    entity.Property(e => e.DesignYarnId).HasColumnName("DesignYarnID");

            //    entity.HasOne(d => d.BaseYarn)
            //        .WithMany(p => p.FabricJacquardSpecificationBaseYarn)
            //        .HasForeignKey(d => d.BaseYarnId)
            //        .HasConstraintName("FK_FabricJacquardSpecification_FabricYarnSpecification");

            //    entity.HasOne(d => d.DesignYarn)
            //        .WithMany(p => p.FabricJacquardSpecificationDesignYarn)
            //        .HasForeignKey(d => d.DesignYarnId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricJacquardSpecification_FabricYarnSpecification1");
            //});

            //modelBuilder.Entity<FabricJacquardSpecificationSetup>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BaseYarnId).HasColumnName("BaseYarnID");

            //    entity.Property(e => e.DesignYarnId).HasColumnName("DesignYarnID");
            //});

            //modelBuilder.Entity<FabricKnittingExperiment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Fabric_KnittingExperiment");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.KnittingExperimentId).HasColumnName("KnittingExperimentID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.KnittingExperiment)
            //        .WithMany(p => p.FabricKnittingExperiment)
            //        .HasForeignKey(d => d.KnittingExperimentId)
            //        .HasConstraintName("FK_Fabric_KnittingExperiment_KnittingExperiment");
            //});

            //modelBuilder.Entity<FabricMachineTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricMachineType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricOrderSheet>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Aopdate)
            //        .HasColumnName("AOPDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricSpecTypeDesc)
            //        .IsRequired()
            //        .HasMaxLength(19)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricTrim)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fquality)
            //        .IsRequired()
            //        .HasColumnName("FQuality")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fsid).HasColumnName("FSID");

            //    entity.Property(e => e.Ftype)
            //        .IsRequired()
            //        .HasColumnName("FType")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.KnittingDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderSheetId)
            //        .HasColumnName("OrderSheetID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShellColorId).HasColumnName("ShellColorID");

            //    entity.Property(e => e.StoreDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.StyleDescription)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<FabricPlacementInstructionSelected>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricPlacementInstructionSelected)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricPlacementInstructionSelected_FabricSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.FabricPlacementInstructionSelected)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .HasConstraintName("FK_FabricPlacementInstructionSelected_FabricTrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<FabricQualitySetup>(entity =>
            //{
            //    entity.ToTable("FabricQuality_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.FabricQualitySetup)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricQuality_Setup_FabricType_Setup");
            //});

            //modelBuilder.Entity<FabricRatioSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FabricRatio_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IsDeleted).HasColumnName("isDeleted");
            //});

            //modelBuilder.Entity<FabricRnD>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Fabric_RnD");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.FabricRnDid).HasColumnName("FabricRnDID");

            //    entity.Property(e => e.IsComplete).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.RnDno)
            //        .HasColumnName("RnDNo")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RndSuffix)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.FabricRnDNavigation)
            //        .WithMany(p => p.FabricRnD)
            //        .HasForeignKey(d => d.FabricRnDid)
            //        .HasConstraintName("FK_Fabric_RnD_FabricRnDSheet");
            //});

            //modelBuilder.Entity<FabricRnD1>(entity =>
            //{
            //    entity.ToTable("FabricRnD");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AfterDryingGsm).HasColumnName("AfterDryingGSM");

            //    entity.Property(e => e.AfterShrinkageGsm).HasColumnName("AfterShrinkageGSM");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CompactionParameter)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingProcessId).HasColumnName("DyeingProcessID");

            //    entity.Property(e => e.FgsmafterDyeingWashing).HasColumnName("FGSMAfterDyeingWashing");

            //    entity.Property(e => e.FinishedGsm).HasColumnName("FinishedGSM");

            //    entity.Property(e => e.GreigeGsm).HasColumnName("GreigeGSM");

            //    entity.Property(e => e.LotNumber)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.NoOfNeedles)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RaisingGsm).HasColumnName("RaisingGSM");

            //    entity.Property(e => e.RelaxedGsm).HasColumnName("RelaxedGSM");

            //    entity.Property(e => e.RgsmafterPanelWashing).HasColumnName("RGSMAfterPanelWashing");

            //    entity.Property(e => e.RwidthAfterPanelWashing).HasColumnName("RWidthAfterPanelWashing");

            //    entity.Property(e => e.StitchLengthA)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ThirdWashShrinkageLw).HasColumnName("ThirdWashShrinkageLW");

            //    entity.Property(e => e.ThirdWashShrinkageWw).HasColumnName("ThirdWashShrinkageWW");
            //});

            //modelBuilder.Entity<FabricRnDorder>(entity =>
            //{
            //    entity.ToTable("FabricRnDOrder");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricRndSheetId).HasColumnName("FabricRndSheetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FabricRnDsheet>(entity =>
            //{
            //    entity.ToTable("FabricRnDSheet");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConveyorRatio)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingProcessId)
            //        .HasColumnName("DyeingProcessID")
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GsmafterDrying).HasColumnName("GSMafterDrying");

            //    entity.Property(e => e.GsmafterPanelWash)
            //        .HasColumnName("GSMAfterPanelWash")
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GsmafterRaising).HasColumnName("GSMafterRaising");

            //    entity.Property(e => e.GsmafterShrinkage).HasColumnName("GSMAfterShrinkage");

            //    entity.Property(e => e.GsmatCompaction).HasColumnName("GSMatCompaction");

            //    entity.Property(e => e.Gsmgreige).HasColumnName("GSMGreige");

            //    entity.Property(e => e.LotNumber)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlatterRatio)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RelaxedGsm).HasColumnName("RelaxedGSM");

            //    entity.Property(e => e.ShrinkageGarmentThirdWashDryer)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentOnePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentOnePer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentTestMethod)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentThreePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentThreePer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentTwoPer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnGarmentTwoPer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelOnePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelOnePer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelTestMethod)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelThreePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelThreePer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelTwoPer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageOnPanelTwoPer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageThirdWashDryer)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SpeedMpm)
            //        .HasColumnName("SpeedMPM")
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StemMoisture)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StitchLength1)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StitchLength2)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StitchLength3)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StitchLength4)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.ThirdWashShrinkageAfterDrying1)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ThirdWashShrinkageAfterDrying2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueGarmentTestMethod)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueGarmentThirdWashDryer)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnGarmentOnePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnGarmentOnePer2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnGarmentThreePer1)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnGarmentThreePer2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnGarmentTwoPer1)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnGarmentTwoPer2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelOnePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelOnePer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelTestMethod)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelThreePer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelThreePer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelTwoPer1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueOnPanelTwoPer2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TorqueThirdWashTumbleDryer)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.WidthAfterPanelWash)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricSelectedFinishingPropertiesValue>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FinishingPropertiesValueId).HasColumnName("FinishingPropertiesValueID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricSelectedFinishingPropertiesValue)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FabricSelectedFinishingPropertiesValue_FabricSpecification");

            //    entity.HasOne(d => d.FinishingPropertiesValue)
            //        .WithMany(p => p.FabricSelectedFinishingPropertiesValue)
            //        .HasForeignKey(d => d.FinishingPropertiesValueId)
            //        .HasConstraintName("FK_FabricSelectedFinishingPropertiesValue_FabricFinishingPropertiesValue_Setup");
            //});

            //modelBuilder.Entity<FabricSequenceSetup>(entity =>
            //{
            //    entity.ToTable("FabricSequence_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricSimpleYarnVendorSetup>(entity =>
            //{
            //    entity.ToTable("FabricSimpleYarnVendor_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Coaid).HasColumnName("COAID");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FaxNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MobileNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ntnnumber)
            //        .HasColumnName("NTNNumber")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SalesTaxRegNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TelephoneNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ColorParentId).HasColumnName("ColorParentID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimBuyerCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimBuyerId).HasColumnName("DenimBuyerID");

            //    entity.Property(e => e.DenimWeightId).HasColumnName("DenimWeightID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricParentId).HasColumnName("FabricParentID");

            //    entity.Property(e => e.FabricSpecificationSetupId).HasColumnName("FabricSpecificationSetupID");

            //    entity.Property(e => e.FabricTrimSelectedId).HasColumnName("FabricTrimSelectedID");

            //    entity.Property(e => e.FastnessStandardId).HasColumnName("FastnessStandardID");

            //    entity.Property(e => e.FinishFabricCodeId).HasColumnName("FinishFabricCodeID");

            //    entity.Property(e => e.FinishedWidth).HasDefaultValueSql("((-1))");

            //    entity.Property(e => e.FlatKnitBottomEndId).HasColumnName("FlatKnitBottomEndID");

            //    entity.Property(e => e.FlatKnitTopEndId).HasColumnName("FlatKnitTopEndID");

            //    entity.Property(e => e.GaugeId).HasColumnName("GaugeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.IsDivisor).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalleteTypeId).HasColumnName("PalleteTypeID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.Property(e => e.SizeRangeComments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserSelectedUnitId).HasColumnName("UserSelectedUnitID");

            //    entity.Property(e => e.WeaveTypeId).HasColumnName("WeaveTypeID");

            //    entity.Property(e => e.WovenCompositionId).HasColumnName("WovenCompositionID");

            //    entity.Property(e => e.WovenConstructionId).HasColumnName("WovenConstructionID");

            //    entity.HasOne(d => d.ColorParent)
            //        .WithMany(p => p.InverseColorParent)
            //        .HasForeignKey(d => d.ColorParentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricSpecification_FabricSpecification1");

            //    entity.HasOne(d => d.DenimWeight)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.DenimWeightId)
            //        .HasConstraintName("FK_FabricSpecification_DenimWeight_Setup");

            //    entity.HasOne(d => d.Dyeing)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.DyeingId)
            //        .HasConstraintName("FK_FabricSpecification_FabricDyeingType_Setup");

            //    entity.HasOne(d => d.FabricParent)
            //        .WithMany(p => p.InverseFabricParent)
            //        .HasForeignKey(d => d.FabricParentId)
            //        .HasConstraintName("FK_FabricSpecification_FabricSpecification");

            //    entity.HasOne(d => d.FabricTrimSelected)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.FabricTrimSelectedId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FabricSpecification_FabricTrimSelected");

            //    entity.HasOne(d => d.Gauge)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.GaugeId)
            //        .HasConstraintName("FK_FabricSpecification_FabricGuage_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .HasConstraintName("FK_FabricSpecification_FabricImage_Setup");

            //    entity.HasOne(d => d.MachineType)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.MachineTypeId)
            //        .HasConstraintName("FK_FabricSpecification_FabricMachineType_Setup");

            //    entity.HasOne(d => d.MatchingSource)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.MatchingSourceId)
            //        .HasConstraintName("FK_FabricSpecification_FabricColorMatchingSource_Setup");

            //    entity.HasOne(d => d.Quality)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.QualityId)
            //        .HasConstraintName("FK_FabricSpecification_FabricQuality_Setup");

            //    entity.HasOne(d => d.WovenComposition)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.WovenCompositionId)
            //        .HasConstraintName("FK_FabricSpecification_WovenComposition_Setup");

            //    entity.HasOne(d => d.WovenConstruction)
            //        .WithMany(p => p.FabricSpecification)
            //        .HasForeignKey(d => d.WovenConstructionId)
            //        .HasConstraintName("FK_FabricSpecification_WovenConstruction_Setup");
            //});

            //modelBuilder.Entity<FabricSpecificationColor>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingProcessId)
            //        .HasColumnName("DyeingProcessID")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalletTypeId).HasColumnName("PalletTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ShellColorId).HasColumnName("ShellColorID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricSpecificationColor)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricSpecificationColor_FabricSpecification");

            //    entity.HasOne(d => d.ShellColor)
            //        .WithMany(p => p.InverseShellColor)
            //        .HasForeignKey(d => d.ShellColorId)
            //        .HasConstraintName("FK_FabricSpecificationColor_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<FabricSpecificationColorSetup>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingProcessId)
            //        .HasColumnName("DyeingProcessID")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalletTypeId).HasColumnName("PalletTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ShellColorId).HasColumnName("ShellColorID");
            //});

            //modelBuilder.Entity<FabricSpecificationFinishing>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FinishingId).HasColumnName("FinishingID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricSpecificationFinishing)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricSpecificationFinishing_FabricSpecification");

            //    entity.HasOne(d => d.Finishing)
            //        .WithMany(p => p.FabricSpecificationFinishing)
            //        .HasForeignKey(d => d.FinishingId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricSpecificationFinishing_FabricFinishing_Setup");
            //});

            //modelBuilder.Entity<FabricSpecificationSetup>(entity =>
            //{
            //    entity.ToTable("FabricSpecification_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.BuyerCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DenimBuyerCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimBuyerId).HasColumnName("DenimBuyerID");

            //    entity.Property(e => e.DenimWeightId).HasColumnName("DenimWeightID");

            //    entity.Property(e => e.DestinationId).HasColumnName("DestinationID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FabricCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FastnessStandardId).HasColumnName("FastnessStandardID");

            //    entity.Property(e => e.GaugeId).HasColumnName("GaugeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalleteTypeId).HasColumnName("PalleteTypeID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.Property(e => e.SizeRangeComments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status).HasDefaultValueSql("(5)");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.UserSelectedUnitId).HasColumnName("UserSelectedUnitID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WeaveTypeId).HasColumnName("WeaveTypeID");

            //    entity.Property(e => e.WovenCompositionId).HasColumnName("WovenCompositionID");

            //    entity.Property(e => e.WovenConstructionId).HasColumnName("WovenConstructionID");
            //});

            //modelBuilder.Entity<FabricSpecificationWashing>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricWashingPropertyId).HasColumnName("FabricWashingPropertyID");

            //    entity.Property(e => e.WashingTypeId).HasColumnName("WashingTypeID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricSpecificationWashing)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FabricSpecificationWashing_FabricSpecification");

            //    entity.HasOne(d => d.FabricWashingProperty)
            //        .WithMany(p => p.FabricSpecificationWashing)
            //        .HasForeignKey(d => d.FabricWashingPropertyId)
            //        .HasConstraintName("FK_FabricSpecificationWashing_FabricWashingProperties_Setup");
            //});

            //modelBuilder.Entity<FabricTensionSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FabricTension_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<FabricTieSpotDyeColors>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.FabricTieSpotDyeColors)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_FabricTieSpotDyeColors_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<FabricTieSpotDyeColorsSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<FabricTippingColor>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DyeingMethodId).HasColumnName("DyeingMethodID");

            //    entity.Property(e => e.FabricTippingSpecificationId).HasColumnName("FabricTippingSpecificationID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.Pantone)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.FabricTippingSpecification)
            //        .WithMany(p => p.FabricTippingColor)
            //        .HasForeignKey(d => d.FabricTippingSpecificationId)
            //        .HasConstraintName("FK_FabricYarnTippingColor_FabricYarnTippingSpecification");
            //});

            //modelBuilder.Entity<FabricTippingColorSetup>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DyeingMethodId).HasColumnName("DyeingMethodID");

            //    entity.Property(e => e.FabricTippingSpecificationId).HasColumnName("FabricTippingSpecificationID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.Pantone)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricTippingVeltSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricTippingVeltSpecification)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricTippingSpecification_FabricSpecification");
            //});

            //modelBuilder.Entity<FabricTippingVeltSpecificationSetup>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");
            //});

            //modelBuilder.Entity<FabricTippingYarn>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricTippingSpecificationId).HasColumnName("FabricTippingSpecificationID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");

            //    entity.HasOne(d => d.FabricTippingSpecification)
            //        .WithMany(p => p.FabricTippingYarn)
            //        .HasForeignKey(d => d.FabricTippingSpecificationId)
            //        .HasConstraintName("FK_FabricTippingYarn_FabricTippingSpecification");
            //});

            //modelBuilder.Entity<FabricTippingYarnSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricTippingSpecificationId).HasColumnName("FabricTippingSpecificationID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");
            //});

            //modelBuilder.Entity<FabricTracking>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.InitiatingDate)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PreparedBy)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcessOrderNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReceivedBy)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReqXml)
            //        .HasColumnName("ReqXML")
            //        .HasColumnType("ntext");
            //});

            //modelBuilder.Entity<FabricTrackingRequirementSheet>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FabricTracking_RequirementSheet");

            //    entity.Property(e => e.FabricTrackingId).HasColumnName("FabricTrackingID");

            //    entity.Property(e => e.RequirementSheetId).HasColumnName("RequirementSheetID");
            //});

            //modelBuilder.Entity<FabricTransactionLog>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricTrimId).HasColumnName("FabricTrimID");

            //    entity.Property(e => e.Ipaddress)
            //        .HasColumnName("IPAddress")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsShell).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<FabricTrimConstructionSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrimConstruction_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricTrimDesignSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrimDesign_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricTrimDimensions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricTrimDimensions)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricTrimDimensions_FabricSpecification");
            //});

            //modelBuilder.Entity<FabricTrimFabricAndColorTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrim_FabricAndColorType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<FabricTrimFusingTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrimFusingType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricTrimPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricTrimPlacementInstruction)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricTrimPlacementInstruction_FabricSpecification");
            //});

            //modelBuilder.Entity<FabricTrimPlacementInstructionSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrimPlacementInstruction_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricTrimId).HasColumnName("FabricTrimID");
            //});

            //modelBuilder.Entity<FabricTrimRollWidthSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrimRollWidth_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<FabricTrimSelected>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricTrimId).HasColumnName("FabricTrimID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.FabricTrim)
            //        .WithMany(p => p.FabricTrimSelected)
            //        .HasForeignKey(d => d.FabricTrimId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FabricTrimSelected_FabricTrims_Setup");

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.FabricTrimSelected)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricTrimSelected_SelectedElement");
            //});

            //modelBuilder.Entity<FabricTrimSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConstructionId).HasColumnName("ConstructionID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.OpeningDiameter)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PlacketTypeId).HasColumnName("PlacketTypeID");

            //    entity.Property(e => e.RollWidthId).HasColumnName("RollWidthID");

            //    entity.Property(e => e.TrimDesignId).HasColumnName("TrimDesignID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricTrimSpecification)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FabricTrimSpecification_FabricSpecification");

            //    entity.HasOne(d => d.InterlinningTypeNavigation)
            //        .WithMany(p => p.FabricTrimSpecification)
            //        .HasForeignKey(d => d.InterlinningType)
            //        .HasConstraintName("FK_FabricTrimSpecification_InterLinningTypes_Setup");

            //    entity.HasOne(d => d.PlacketType)
            //        .WithMany(p => p.FabricTrimSpecification)
            //        .HasForeignKey(d => d.PlacketTypeId)
            //        .HasConstraintName("FK_FabricTrimSpecification_PlacketType_Setup");
            //});

            //modelBuilder.Entity<FabricTrimsSetup>(entity =>
            //{
            //    entity.ToTable("FabricTrims_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.HomePage)
            //        .HasMaxLength(200)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<FabricTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.HasOne(d => d.FabricCategory)
            //        .WithMany(p => p.FabricTypeSetup)
            //        .HasForeignKey(d => d.FabricCategoryId)
            //        .HasConstraintName("FK_FabricType_Setup_FabricCategory_setup");
            //});


            //modelBuilder.Entity<FabricVendor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<FabricWashingFinishingSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CodeId).HasColumnName("CodeID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.Location)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcessTypeId).HasColumnName("ProcessTypeID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricWashingFinishingSpecification)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricWashingFinishingSpecification_FabricSpecification");
            //});

            //modelBuilder.Entity<FabricWashingPropertiesSetup>(entity =>
            //{
            //    entity.ToTable("FabricWashingProperties_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricWashingSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricWashingPropertyId).HasColumnName("FabricWashingPropertyID");

            //    entity.Property(e => e.WashingTypeId).HasColumnName("WashingTypeID");
            //});

            //modelBuilder.Entity<FabricWashingTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricWashingType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.Isdeleted)
            //        .HasColumnName("isdeleted")
            //        .HasDefaultValueSql("((0))");
            //});

            //modelBuilder.Entity<FabricWetProcessSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FabricWetProcess_Setup");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Smv).HasColumnName("SMV");
            //});

            //modelBuilder.Entity<FabricYarnCompositionSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnComposition_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CnvCtnRatio).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.CottonRatio).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsNewComposition)
            //        .HasColumnName("isNewComposition")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LycraRatio).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.OrgCtnRatio).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.PolyesterRatio).HasDefaultValueSql("((0))");
            //});

            //modelBuilder.Entity<FabricYarnCostingSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnCosting_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorType)
            //        .HasMaxLength(2)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricYarnCompositionId).HasColumnName("FabricYarnCompositionID");

            //    entity.Property(e => e.FabricYarnCountId).HasColumnName("FabricYarnCountID");

            //    entity.Property(e => e.FabricYarnIsDyed).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.FabricYarnQualityId).HasColumnName("FabricYarnQualityID");

            //    entity.Property(e => e.FabricYarnUnitId).HasColumnName("FabricYarnUnitID");

            //    entity.Property(e => e.MaxcoCode)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.FabricYarnComposition)
            //        .WithMany(p => p.FabricYarnCostingSetup)
            //        .HasForeignKey(d => d.FabricYarnCompositionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnCosting_Setup_FabricYarnComposition_Setup");

            //    entity.HasOne(d => d.FabricYarnQuality)
            //        .WithMany(p => p.FabricYarnCostingSetup)
            //        .HasForeignKey(d => d.FabricYarnQualityId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnCosting_Setup_FabricYarnQuality_Setup");

            //    entity.HasOne(d => d.FabricYarnUnit)
            //        .WithMany(p => p.FabricYarnCostingSetup)
            //        .HasForeignKey(d => d.FabricYarnUnitId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnCosting_Setup_FabricYarnUnit_Setup");
            //});

            //modelBuilder.Entity<FabricYarnCountSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnCount_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.DesFyci)
            //        .HasColumnName("DesFYCI")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricYarnCompositionId).HasColumnName("FabricYarnCompositionID");

            //    entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.IsDisplay).HasDefaultValueSql("((1))");
            //});

            //modelBuilder.Entity<FabricYarnDesignTypeSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnDesignType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricYarnDyeingMethodSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnDyeingMethod_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<FabricYarnDyeingSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FabricYarnQualitySetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnQuality_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");
            //});

            //modelBuilder.Entity<FabricYarnSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Color)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDesignId).HasColumnName("YarnDesignID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.Property(e => e.YarnDyeingMethodId).HasColumnName("YarnDyeingMethodID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricSpecification");

            //    entity.HasOne(d => d.FabricYarnVendorColor)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.FabricYarnVendorColorId)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnVendorColor_Setup");

            //    entity.HasOne(d => d.YarnComposition)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnCompositionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnComposition_Setup");

            //    entity.HasOne(d => d.YarnCount)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnCountId)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnCount_Setup");

            //    entity.HasOne(d => d.YarnDesign)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnDesignId)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnDesignType_Setup");

            //    entity.HasOne(d => d.YarnDyeing)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnDyeingId)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnDyeing_Setup");

            //    entity.HasOne(d => d.YarnDyeingMethod)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnDyeingMethodId)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnDyeingMethod_Setup");

            //    entity.HasOne(d => d.YarnQuality)
            //        .WithMany(p => p.FabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnQualityId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnSpecification_FabricYarnQuality_Setup");
            //});

            //modelBuilder.Entity<FabricYarnSpecificationColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorsetId).HasColumnName("ColorsetID");

            //    entity.Property(e => e.PalleteTypeId).HasColumnName("PalleteTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorColorId).HasColumnName("VendorColorID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");

            //    entity.HasOne(d => d.Colorset)
            //        .WithMany(p => p.FabricYarnSpecificationColor)
            //        .HasForeignKey(d => d.ColorsetId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FabricYarnSpecificationColor_FabricSpecificationColor");
            //});

            //modelBuilder.Entity<FabricYarnSpecificationColorSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorsetId).HasColumnName("ColorsetID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorColorId).HasColumnName("VendorColorID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");
            //});

            //modelBuilder.Entity<FabricYarnSpecificationSetup>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Color)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDesignId).HasColumnName("YarnDesignID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.Property(e => e.YarnDyeingMethodId).HasColumnName("YarnDyeingMethodID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.FabricYarnSpecificationSetup)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_FabricYarnSpecificationSetup_FabricSpecification_Setup");

            //    entity.HasOne(d => d.YarnCount)
            //        .WithMany(p => p.FabricYarnSpecificationSetup)
            //        .HasForeignKey(d => d.YarnCountId)
            //        .HasConstraintName("FK_FabricYarnSpecificationSetup_FabricYarnCount_Setup");
            //});

            //modelBuilder.Entity<FabricYarnTwistingSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.Yarn1Id).HasColumnName("Yarn1ID");

            //    entity.Property(e => e.Yarn2Id).HasColumnName("Yarn2ID");

            //    entity.HasOne(d => d.Fabric)
            //        .WithMany(p => p.FabricYarnTwistingSpecification)
            //        .HasForeignKey(d => d.FabricId)
            //        .HasConstraintName("FK_FabricYarnTwistingSpecification_FabricSpecification");

            //    entity.HasOne(d => d.Yarn1)
            //        .WithMany(p => p.FabricYarnTwistingSpecification)
            //        .HasForeignKey(d => d.Yarn1Id)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnTwistingSpecification_FabricYarnSpecification");
            //});

            //modelBuilder.Entity<FabricYarnUnitSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnUnit_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<FabricYarnVeltSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricYarnSpecificationId).HasColumnName("FabricYarnSpecificationID");

            //    entity.HasOne(d => d.FabricYarnSpecification)
            //        .WithMany(p => p.FabricYarnVeltSpecification)
            //        .HasForeignKey(d => d.FabricYarnSpecificationId)
            //        .HasConstraintName("FK_FabricYarnVeltSpecification_FabricYarnSpecification");
            //});

            //modelBuilder.Entity<FabricYarnVendor>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricYarnId).HasColumnName("FabricYarnID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.FabricYarn)
            //        .WithMany(p => p.FabricYarnVendor)
            //        .HasForeignKey(d => d.FabricYarnId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnVendor_FabricYarnCosting_Setup");

            //    entity.HasOne(d => d.Vendor)
            //        .WithMany(p => p.FabricYarnVendor)
            //        .HasForeignKey(d => d.VendorId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnVendor_FabricSimpleYarnVendor_Setup");
            //});

            //modelBuilder.Entity<FabricYarnVendorColorNameSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnVendorColorName_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricYarnVendorId).HasColumnName("FabricYarnVendorID");
            //});

            //modelBuilder.Entity<FabricYarnVendorColorSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnVendorColor_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricYarnVendorColorNameId).HasColumnName("FabricYarnVendorColorNameID");

            //    entity.Property(e => e.PicturePath).HasMaxLength(255);

            //    entity.HasOne(d => d.FabricYarnVendorColorName)
            //        .WithMany(p => p.FabricYarnVendorColorSetup)
            //        .HasForeignKey(d => d.FabricYarnVendorColorNameId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnVendorColor_Setup_FabricYarnVendorColorName_Setup");
            //});

            //modelBuilder.Entity<FabricYarnVendorSetup>(entity =>
            //{
            //    entity.ToTable("FabricYarnVendor_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Coaid).HasColumnName("COAID");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FaxNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MobileNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ntnnumber)
            //        .HasColumnName("NTNNumber")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SalesTaxRegNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TelephoneNumber)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnDyeingId)
            //        .HasColumnName("YarnDyeingID")
            //        .HasDefaultValueSql("(2)");

            //    entity.HasOne(d => d.YarnDyeing)
            //        .WithMany(p => p.FabricYarnVendorSetup)
            //        .HasForeignKey(d => d.YarnDyeingId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FabricYarnVendor_Setup_FabricYarnDyeing_Setup");
            //});

            //modelBuilder.Entity<FabricsWithStyles>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("FabricsWithStyles");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricTrim)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricTrimId).HasColumnName("FabricTrimID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FaceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Face_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<FastnessStandardSetup>(entity =>
            //{
            //    entity.ToTable("FastnessStandard_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FcFabricGroupUse>(entity =>
            //{
            //    entity.ToTable("FC_FabricGroupUse");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.GroupId).HasColumnName("GroupID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.Use).HasColumnType("decimal(18, 3)");
            //});

            modelBuilder.Entity<FC_ModelFabricGroups>(entity =>
            {
                //entity.ToTable("FC_ModelFabricGroups");

                //entity.Property(e => e.Id).HasColumnName("ID");

                //entity.Property(e => e.FabricId).HasColumnName("FabricID");

                //entity.Property(e => e.GroupUseId).HasColumnName("GroupUseID");

                entity.HasOne(d => d.FabricSpecification)
                    .WithMany(p => p.FC_ModelFabricGroups)
                    .HasForeignKey(d => d.FabricID)
                    .HasConstraintName("FK_FC_ModelFabricGroups_FabricSpecification");

                entity.HasOne(d => d.FC_FabricGroupUse)
                    .WithMany(p => p.FCModelFabricGroups)
                    .HasForeignKey(d => d.GroupUseID)
                    .HasConstraintName("FK_FC_ModelFabricGroups_FC_FabricGroupUse");
            });

            //modelBuilder.Entity<FcStyleCopyXml>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FC_StyleCopyXML");

            //    entity.Property(e => e.ParentStyleId).HasColumnName("ParentStyleID");

            //    entity.Property(e => e.StyleCopyXml)
            //        .IsRequired()
            //        .HasColumnName("StyleCopyXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FiCurrencyMap>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FI_Currency_Map");

            //    entity.Property(e => e.Fcid).HasColumnName("FCID");

            //    entity.Property(e => e.Mcid).HasColumnName("MCID");

            //    entity.Property(e => e.Mid).HasColumnName("MID");
            //});

            //modelBuilder.Entity<Fimmassociation>(entity =>
            //{
            //    entity.ToTable("FIMMAssociation");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.ValuationClassId).HasColumnName("ValuationClassID");

            //    entity.HasOne(d => d.MrpitemCodeNavigation)
            //        .WithMany(p => p.Fimmassociation)
            //        .HasForeignKey(d => d.MrpitemCode)
            //        .HasConstraintName("FK_FIMMAssociation_MRPItem");
            //});

            //modelBuilder.Entity<FinishedFabricFinishing>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FinishedFabricId).HasColumnName("FinishedFabricID");

            //    entity.Property(e => e.FinishingTypeId)
            //        .HasColumnName("FinishingTypeID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<FinishedFabricMir>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FinishedFabricMIR");

            //    entity.Property(e => e.BrushingSpecification)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.DyeingProcessId).HasColumnName("DyeingProcessID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.MatchingSource)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.WashingSpecification)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FinishedFabricWashing>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FinishedFabricId).HasColumnName("FinishedFabricID");

            //    entity.Property(e => e.WashingTypeId).HasColumnName("WashingTypeID");

            //    entity.HasOne(d => d.FinishedFabric)
            //        .WithMany(p => p.FinishedFabricWashing)
            //        .HasForeignKey(d => d.FinishedFabricId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FinishedFabricWashing_SampleMIRFinishedFabric");
            //});

            //modelBuilder.Entity<FinishingMachinesSetup>(entity =>
            //{
            //    entity.ToTable("FinishingMachines_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FixedAsset>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FixedAsset$");

            //    entity.Property(e => e.Brand).HasMaxLength(255);

            //    entity.Property(e => e.Category).HasMaxLength(255);

            //    entity.Property(e => e.CategoryId).HasColumnName("Category_ID");

            //    entity.Property(e => e.Class).HasMaxLength(255);

            //    entity.Property(e => e.Company).HasMaxLength(255);

            //    entity.Property(e => e.Finance)
            //        .HasColumnName("FINANCE ")
            //        .HasMaxLength(255);

            //    entity.Property(e => e.Item)
            //        .HasColumnName("ITEM")
            //        .HasMaxLength(255);

            //    entity.Property(e => e.ItemCode)
            //        .HasColumnName("Item Code")
            //        .HasMaxLength(255);

            //    entity.Property(e => e.ProfitCenter).HasMaxLength(255);

            //    entity.Property(e => e.Type).HasMaxLength(255);
            //});

            //modelBuilder.Entity<FlatKnitEndType>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FlockMaterialSetup>(entity =>
            //{
            //    entity.ToTable("FlockMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsColorSet>(entity =>
            //{
            //    entity.ToTable("FS_ColorSet");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Htmlcode)
            //        .HasColumnName("HTMLCode")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReqId).HasColumnName("ReqID");

            //    entity.Property(e => e.VariationColor)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VariationColorHtmlcode)
            //        .HasColumnName("VariationColorHTMLCode")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsConsolidatedRejectedFabrics>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_ConsolidatedRejectedFabrics");

            //    entity.Property(e => e.ConsolidatedRejectedXml)
            //        .IsRequired()
            //        .HasColumnName("ConsolidatedRejectedXML")
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FsCuttingIssuance>(entity =>
            //{
            //    entity.ToTable("FS_CuttingIssuance");

            //    entity.HasIndex(e => new { e.FsCuttingReceivingId, e.FsReceivingLotsVariationId })
            //        .HasName("IX_FS_CuttingIssuance_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CuttingIssuanceNumber)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsCuttingReceivingId).HasColumnName("FS_CuttingReceivingID");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");
            //});

            //modelBuilder.Entity<FsCuttingPermanentRejection>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_CuttingPermanentRejection");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.RejectionNumber)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TempReceivingId).HasColumnName("TempReceivingID");
            //});

            //modelBuilder.Entity<FsCuttingReceiving>(entity =>
            //{
            //    entity.ToTable("FS_CuttingReceiving");

            //    entity.HasIndex(e => new { e.FsIssuanceMasterId, e.FsReceivingLotsVariationId, e.TempCuttingReceivingId, e.ReqSheetId })
            //        .HasName("IX_FS_CuttingReceiving_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsIssuanceMasterId).HasColumnName("FS_IssuanceMasterID");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");

            //    entity.Property(e => e.ReceivingNumber)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReqSheetId).HasColumnName("ReqSheetID");

            //    entity.Property(e => e.TempCuttingReceivingId).HasColumnName("TempCuttingReceivingID");
            //});

            //modelBuilder.Entity<FsCuttingReceivingTemp>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_CuttingReceivingTemp");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsIssuanceMasterId).HasColumnName("FS_IssuanceMasterID");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ReceivingNumber)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsCuttingRejection>(entity =>
            //{
            //    entity.ToTable("FS_CuttingRejection");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CuttingRejectionNumber)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsCuttingIssuanceId).HasColumnName("FS_CuttingIssuanceID");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");
            //});

            //modelBuilder.Entity<FsCuttingWastage>(entity =>
            //{
            //    entity.ToTable("FS_CuttingWastage");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CuttingWastageNumber)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsCuttingIssuanceId).HasColumnName("FS_CuttingIssuanceID");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");
            //});

            //modelBuilder.Entity<FsDocumentTypeSetup>(entity =>
            //{
            //    entity.HasKey(e => e.DocumentTypeId);

            //    entity.ToTable("FS_DocumentType_Setup");

            //    entity.Property(e => e.DocumentTypeId)
            //        .HasColumnName("DocumentTypeID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.DocumentDescription)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DocumentName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Initials)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsFabricAttributeValues>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_FabricAttributeValues");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.DyeingLevel)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingProcess)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQuality)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricType)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MachineType)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MatchingSource)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsFabricDetails>(entity =>
            //{
            //    entity.ToTable("FS_Fabric_Details");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.Fid).HasColumnName("FID");

            //    entity.Property(e => e.ShellColorSetId).HasColumnName("ShellColorSetID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.F)
            //        .WithMany(p => p.FsFabricDetails)
            //        .HasForeignKey(d => d.Fid)
            //        .HasConstraintName("FK_FS_Fabric_Details_FS_RequirementSheet_Fabrics");
            //});

            //modelBuilder.Entity<FsFabricProcessAssociation>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_FabricProcessAssociation");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ProcessId).HasColumnName("ProcessID");
            //});

            //modelBuilder.Entity<FsFabricTransfer>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_FabricTransfer");

            //    entity.Property(e => e.FromAttributeInstanceId).HasColumnName("FromAttributeInstanceID");

            //    entity.Property(e => e.FromFid).HasColumnName("FromFID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ToFid).HasColumnName("ToFID");
            //});

            //modelBuilder.Entity<FsFabricTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_FabricType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<FsFabricYarnDetail>(entity =>
            //{
            //    entity.ToTable("FS_Fabric_YarnDetail");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttributeinstanceId).HasColumnName("AttributeinstanceID");

            //    entity.Property(e => e.Fid).HasColumnName("FID");

            //    entity.HasOne(d => d.F)
            //        .WithMany(p => p.FsFabricYarnDetail)
            //        .HasForeignKey(d => d.Fid)
            //        .HasConstraintName("FK_FS_Fabric_YarnDetail_FS_RequirementSheet_Fabrics");
            //});

            //modelBuilder.Entity<FsFabricationDepartmentSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_FabricationDepartment_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<FsFabricationLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_FabricationLog");

            //    entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<FsIssuanceMaster>(entity =>
            //{
            //    entity.ToTable("FS_IssuanceMaster");

            //    entity.HasIndex(e => new { e.FsReceivingMasterId, e.FsReceivingLotsVariationId })
            //        .HasName("IX_FS_IssuanceMaster_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");

            //    entity.Property(e => e.FsReceivingMasterId).HasColumnName("FS_Receiving_MasterID");

            //    entity.Property(e => e.IssuanceNumber)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsLaboratoryInspection>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_LaboratoryInspection");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ProcessId).HasColumnName("ProcessID");

            //    entity.Property(e => e.TempReceivingId).HasColumnName("TempReceivingID");
            //});

            //modelBuilder.Entity<FsLotVariationFabrics>(entity =>
            //{
            //    entity.ToTable("FS_Lot_Variation_Fabrics");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Fid).HasColumnName("FID");

            //    entity.Property(e => e.LotVariationId).HasColumnName("LotVariationID");

            //    entity.Property(e => e.ReceivedGsm).HasColumnName("ReceivedGSM");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<FsLotVariationQuantities>(entity =>
            //{
            //    entity.ToTable("FS_Lot_Variation_Quantities");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.LotVariationId).HasColumnName("LotVariationID");

            //    entity.HasOne(d => d.LotVariation)
            //        .WithMany(p => p.FsLotVariationQuantities)
            //        .HasForeignKey(d => d.LotVariationId)
            //        .HasConstraintName("FK_FS_Lot_Variation_Quantities_FS_Receiving_Lot_Variations");
            //});

            //modelBuilder.Entity<FsOrderFabricReceivedQtytemp>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_OrderFabricReceivedQTYtemp");

            //    entity.Property(e => e.ConsolidatedFabricXml)
            //        .HasColumnName("ConsolidatedFabricXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<FsQualityAttributeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_QualityAttribute_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ProcessName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Type)
            //        .IsRequired()
            //        .HasMaxLength(15)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsReceivingLotVariations>(entity =>
            //{
            //    entity.ToTable("FS_Receiving_Lot_Variations");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricsXml)
            //        .HasColumnName("FabricsXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.LotId).HasColumnName("LotID");

            //    entity.Property(e => e.VariationNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Lot)
            //        .WithMany(p => p.FsReceivingLotVariations)
            //        .HasForeignKey(d => d.LotId)
            //        .HasConstraintName("FK_FS_Receiving_Lot_Variations_FS_Receiving_Lots");
            //});

            //modelBuilder.Entity<FsReceivingLots>(entity =>
            //{
            //    entity.ToTable("FS_Receiving_Lots");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.LotNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReceivingId).HasColumnName("ReceivingID");

            //    entity.HasOne(d => d.Receiving)
            //        .WithMany(p => p.FsReceivingLots)
            //        .HasForeignKey(d => d.ReceivingId)
            //        .HasConstraintName("FK_FS_Receiving_Lots_FS_Receiving_Master");
            //});

            //modelBuilder.Entity<FsReceivingMaster>(entity =>
            //{
            //    entity.ToTable("FS_Receiving_Master");

            //    entity.HasIndex(e => e.ReqSheetId)
            //        .HasName("IX_FS_Receiving_Master_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ClientName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Dcno)
            //        .IsRequired()
            //        .HasColumnName("DCNo")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

            //    entity.Property(e => e.MaxcoCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RecSheetNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReqSheetId).HasColumnName("ReqSheetID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.HasOne(d => d.ReqSheet)
            //        .WithMany(p => p.FsReceivingMaster)
            //        .HasForeignKey(d => d.ReqSheetId)
            //        .HasConstraintName("FK_FS_Receiving_Master_FS_RequirementSheet_Master");
            //});

            //modelBuilder.Entity<FsReceivingVariationLots>(entity =>
            //{
            //    entity.ToTable("FS_Receiving_Variation_Lots");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CircularXml)
            //        .HasColumnName("CircularXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.FlatBedXml)
            //        .HasColumnName("FlatBedXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.GreigeXml)
            //        .HasColumnName("GreigeXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.LotNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VariationId).HasColumnName("VariationID");

            //    entity.HasOne(d => d.Variation)
            //        .WithMany(p => p.FsReceivingVariationLots)
            //        .HasForeignKey(d => d.VariationId)
            //        .HasConstraintName("FK_FS_Receiving_Variation_Lots_FS_Receiving_Variations");
            //});

            //modelBuilder.Entity<FsReceivingVariations>(entity =>
            //{
            //    entity.ToTable("FS_Receiving_Variations");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ReceivingId).HasColumnName("ReceivingID");

            //    entity.Property(e => e.VariationNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Receiving)
            //        .WithMany(p => p.FsReceivingVariations)
            //        .HasForeignKey(d => d.ReceivingId)
            //        .HasConstraintName("FK_FS_Receiving_Variations_FS_Receiving_Master");
            //});

            //modelBuilder.Entity<FsRejectedFabric>(entity =>
            //{
            //    entity.ToTable("FS_RejectedFabric");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.BalanceKg).HasColumnName("BalanceKG");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.RejectionDetailId).HasColumnName("RejectionDetailID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TotalKg).HasColumnName("TotalKG");
            //});

            //modelBuilder.Entity<FsRejectedFabricRejections>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_RejectedFabricRejections");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.RejectedFabricId).HasColumnName("RejectedFabricID");

            //    entity.Property(e => e.RejectionDetailId).HasColumnName("RejectionDetailID");

            //    entity.HasOne(d => d.RejectedFabric)
            //        .WithMany(p => p.FsRejectedFabricRejections)
            //        .HasForeignKey(d => d.RejectedFabricId)
            //        .HasConstraintName("FK_FS_RejectedFabricRejections_FS_RejectedFabric");
            //});

            //modelBuilder.Entity<FsRejectedFabricStatus>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_RejectedFabricStatus");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.StatusName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsRequirementSheetCadcamassociation>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_RequirementSheetCADCAMAssociation");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.Frsid).HasColumnName("FRSID");
            //});

            //modelBuilder.Entity<FsRequirementSheetDayEndStatusSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_RequirementSheet_DayEndStatus_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<FsRequirementSheetFabricTypeSetup>(entity =>
            //{
            //    entity.HasKey(e => e.TypeId);

            //    entity.ToTable("FS_RequirementSheet_FabricType_Setup");

            //    entity.Property(e => e.TypeId)
            //        .HasColumnName("TypeID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FsRequirementSheetFabrics>(entity =>
            //{
            //    entity.ToTable("FS_RequirementSheet_Fabrics");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.FinishFabricCodeId).HasColumnName("FinishFabricCodeID");

            //    entity.Property(e => e.Gaqty)
            //        .HasColumnName("GAQty")
            //        .HasColumnType("numeric(18, 0)");

            //    entity.Property(e => e.GroupId).HasColumnName("GroupID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.RequirementSheetId).HasColumnName("RequirementSheetID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<FsRequirementSheetFabricsOld07may2019>(entity =>
            //{
            //    entity.ToTable("FS_RequirementSheet_Fabrics_Old_07May2019");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.FinishFabricCodeId).HasColumnName("FinishFabricCodeID");

            //    entity.Property(e => e.Gaqty)
            //        .HasColumnName("GAQty")
            //        .HasColumnType("numeric(18, 0)");

            //    entity.Property(e => e.GroupId).HasColumnName("GroupID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.RequirementSheetId).HasColumnName("RequirementSheetID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.WastagePercent).HasDefaultValueSql("((10))");
            //});

            //modelBuilder.Entity<FsRequirementSheetMaster>(entity =>
            //{
            //    entity.HasKey(e => e.RequirementSheetId);

            //    entity.ToTable("FS_RequirementSheet_Master");

            //    entity.Property(e => e.RequirementSheetId).HasColumnName("RequirementSheetID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConsolidatedRejectedId).HasColumnName("ConsolidatedRejectedID");

            //    entity.Property(e => e.CostingXml)
            //        .HasColumnName("CostingXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.DayEndStatus).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

            //    entity.Property(e => e.GenerationDate).HasColumnType("datetime");

            //    entity.Property(e => e.IsSrs)
            //        .HasColumnName("IsSRS")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RejectionSrsmasterId).HasColumnName("RejectionSRSMasterID");

            //    entity.Property(e => e.ReqNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.StyleName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<FsRequirementSheetOrderModels>(entity =>
            //{
            //    entity.ToTable("FS_RequirementSheet_OrderModels");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.RequirementSheetId).HasColumnName("RequirementSheetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.RequirementSheet)
            //        .WithMany(p => p.FsRequirementSheetOrderModels)
            //        .HasForeignKey(d => d.RequirementSheetId)
            //        .HasConstraintName("FK_FS_RequirementSheet_OrderModels_FS_RequirementSheet_Master");
            //});

            //modelBuilder.Entity<FsRequirementSheetSpecifications>(entity =>
            //{
            //    entity.ToTable("FS_RequirementSheet_Specifications");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CirculatFabricsXml)
            //        .IsRequired()
            //        .HasColumnName("CirculatFabricsXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.FlatKnitFabricsXml)
            //        .IsRequired()
            //        .HasColumnName("FlatKnitFabricsXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.GreigeTrimsXml)
            //        .IsRequired()
            //        .HasColumnName("GreigeTrimsXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.RequirementSheetId).HasColumnName("RequirementSheetID");

            //    entity.HasOne(d => d.RequirementSheet)
            //        .WithMany(p => p.FsRequirementSheetSpecifications)
            //        .HasForeignKey(d => d.RequirementSheetId)
            //        .HasConstraintName("FK_FS_RequirementSheet_Specifications_FS_RequirementSheet_Master");
            //});

            //modelBuilder.Entity<FsRequirementSheetVersions>(entity =>
            //{
            //    entity.HasKey(e => e.Rsvid);

            //    entity.ToTable("FS_RequirementSheet_Versions");

            //    entity.HasIndex(e => e.Reqid)
            //        .HasName("NonClusteredIndex-20180106-153628");

            //    entity.Property(e => e.Rsvid).HasColumnName("RSVID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Creationuser).HasColumnName("creationuser");

            //    entity.Property(e => e.DeletionDate).HasColumnType("datetime");

            //    entity.Property(e => e.Reqid).HasColumnName("REQID");

            //    entity.Property(e => e.Rssource)
            //        .IsRequired()
            //        .HasColumnName("RSSource")
            //        .HasColumnType("text");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FsReturnFromFloor>(entity =>
            //{
            //    entity.ToTable("FS_ReturnFromFloor");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CuttingJobId).HasColumnName("CuttingJobID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<FsSizeSet>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("FS_SizeSet");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(5)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FsColorSetId).HasColumnName("FS_ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");
            //});

            //modelBuilder.Entity<FsStockTransaction>(entity =>
            //{
            //    entity.ToTable("FS_StockTransaction");

            //    entity.HasIndex(e => new { e.DocumentNo, e.DocumentTypeId })
            //        .HasName("IX_FS_StockTransaction_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttributeinstanceId).HasColumnName("AttributeinstanceID");

            //    entity.Property(e => e.DocumentDate)
            //        .HasColumnName("documentDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.DocumentNo).HasColumnName("documentNo");

            //    entity.Property(e => e.DocumentTypeId).HasColumnName("documentTypeID");

            //    entity.Property(e => e.FsReceivingLotsVariationId).HasColumnName("FS_ReceivingLotsVariationID");

            //    entity.Property(e => e.FsRequirementSheetFabricsId).HasColumnName("FS_RequirementSheet_FabricsID");

            //    entity.Property(e => e.ReceivedGsm).HasColumnName("ReceivedGSM");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<FsSupplementaryRequirementSheet>(entity =>
            //{
            //    entity.ToTable("FS_SupplementaryRequirementSheet");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.RejectionId).HasColumnName("RejectionID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<FsVariationStyleFabrics>(entity =>
            //{
            //    entity.ToTable("FS_Variation_StyleFabrics");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.ShellColorSetId).HasColumnName("ShellColorSetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VariationQuantitiesId).HasColumnName("VariationQuantitiesID");

            //    entity.HasOne(d => d.VariationQuantities)
            //        .WithMany(p => p.FsVariationStyleFabrics)
            //        .HasForeignKey(d => d.VariationQuantitiesId)
            //        .HasConstraintName("FK_FS_Variation_StyleFabrics_FS_Lot_Variation_Quantities");
            //});

            //modelBuilder.Entity<FurColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.FurColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_FurColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.FurColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_FurColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.FurColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_FurColor_FurSpecification");
            //});

            //modelBuilder.Entity<FurDyeingSetup>(entity =>
            //{
            //    entity.ToTable("FurDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FurImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<FurImageSetup>(entity =>
            //{
            //    entity.ToTable("FurImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WeaveId).HasColumnName("WeaveID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.FurImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FurImage_Setup_FurMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.FurImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_FurImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<FurMaterialSetup>(entity =>
            //{
            //    entity.ToTable("FurMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FurPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.FurPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_FurPlacementInstruction_FurSpecification");
            //});

            //modelBuilder.Entity<FurSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.WeaveId).HasColumnName("WeaveID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");

            //    entity.HasOne(d => d.Dyed)
            //        .WithMany(p => p.FurSpecification)
            //        .HasForeignKey(d => d.DyedId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FurSpecification_FurDyeing_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.FurSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FurSpecification_FurImage_Setup");

            //    entity.HasOne(d => d.Weave)
            //        .WithMany(p => p.FurSpecification)
            //        .HasForeignKey(d => d.WeaveId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FurSpecification_FurWeave_Setup");

            //    entity.HasOne(d => d.Width)
            //        .WithMany(p => p.FurSpecification)
            //        .HasForeignKey(d => d.WidthId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FurSpecification_FurWidth_Setup");
            //});

            //modelBuilder.Entity<FurStripes>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FurId).HasColumnName("FurID");

            //    entity.Property(e => e.FurYarnId).HasColumnName("FurYarnID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.HasOne(d => d.Fur)
            //        .WithMany(p => p.FurStripes)
            //        .HasForeignKey(d => d.FurId)
            //        .HasConstraintName("FK_FurStripes_FurSpecification");
            //});

            //modelBuilder.Entity<FurWeaveSetup>(entity =>
            //{
            //    entity.ToTable("FurWeave_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FurWidthSetup>(entity =>
            //{
            //    entity.ToTable("FurWidth_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<FurYarnDyeingSetup>(entity =>
            //{
            //    entity.ToTable("FurYarnDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<FurYarnSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.FurId).HasColumnName("FurID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.HasOne(d => d.FabricYarnVendorColor)
            //        .WithMany(p => p.FurYarnSpecification)
            //        .HasForeignKey(d => d.FabricYarnVendorColorId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_FurYarnSpecification_FabricYarnVendorColor_Setup");

            //    entity.HasOne(d => d.Fur)
            //        .WithMany(p => p.FurYarnSpecification)
            //        .HasForeignKey(d => d.FurId)
            //        .HasConstraintName("FK_FurYarnSpecification_FurSpecification");

            //    entity.HasOne(d => d.YarnComposition)
            //        .WithMany(p => p.FurYarnSpecification)
            //        .HasForeignKey(d => d.YarnCompositionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_FurYarnSpecification_FabricYarnComposition_Setup");

            //    entity.HasOne(d => d.YarnCount)
            //        .WithMany(p => p.FurYarnSpecification)
            //        .HasForeignKey(d => d.YarnCountId)
            //        .HasConstraintName("FK_FurYarnSpecification_FabricYarnCount_Setup");

            //    entity.HasOne(d => d.YarnDyeing)
            //        .WithMany(p => p.FurYarnSpecification)
            //        .HasForeignKey(d => d.YarnDyeingId)
            //        .HasConstraintName("FK_FurYarnSpecification_FurYarnDyeing_Setup");
            //});

            //modelBuilder.Entity<FurYarnSpecificationColor>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorColorId).HasColumnName("VendorColorID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");

            //    entity.HasOne(d => d.YarnSpecification)
            //        .WithMany(p => p.FurYarnSpecificationColor)
            //        .HasForeignKey(d => d.YarnSpecificationId)
            //        .HasConstraintName("FK_FurYarnSpecificationColor_FurYarnSpecification");
            //});

            //modelBuilder.Entity<FusingSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FusingTypeId).HasColumnName("FusingTypeID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.StyleElementMeasurementScaleId).HasColumnName("StyleElementMeasurementScaleID");

            //    entity.HasOne(d => d.FusingType)
            //        .WithMany(p => p.FusingSpecification)
            //        .HasForeignKey(d => d.FusingTypeId)
            //        .HasConstraintName("FK_FusingSpecification_FusingType_Setup");

            //    entity.HasOne(d => d.StyleElementMeasurementScale)
            //        .WithMany(p => p.FusingSpecification)
            //        .HasForeignKey(d => d.StyleElementMeasurementScaleId)
            //        .HasConstraintName("FK_FusingSpecification_StyleElementMeasurementScale");
            //});

            //modelBuilder.Entity<FusingTypeSetup>(entity =>
            //{
            //    entity.ToTable("FusingType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<GarmentAssortment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationColorId).HasColumnName("FabricSpecificationColorID");

            //    entity.Property(e => e.SampleAssortmentId).HasColumnName("SampleAssortmentID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.SampleAssortment)
            //        .WithMany(p => p.GarmentAssortment)
            //        .HasForeignKey(d => d.SampleAssortmentId)
            //        .HasConstraintName("FK_GarmentAssortment_SampleAssortment");

            //    entity.HasOne(d => d.SelectedSizeRange)
            //        .WithMany(p => p.GarmentAssortment)
            //        .HasForeignKey(d => d.SelectedSizeRangeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GarmentAssortment_SelectedGarmentSizeRange");
            //});

            //modelBuilder.Entity<GarmentAssortmentOrder>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderStyleId).HasColumnName("OrderStyleID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.SuperBomid).HasColumnName("SuperBOMID");

            //    entity.HasOne(d => d.OrderStyle)
            //        .WithMany(p => p.GarmentAssortmentOrder)
            //        .HasForeignKey(d => d.OrderStyleId)
            //        .HasConstraintName("FK_GarmentAssortmentOrder_OrderSelectedStyle");
            //});

            //modelBuilder.Entity<GarmentAssortmentTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GarmentAssortmentTransaction_Log");

            //    entity.Property(e => e.Ipaddress)
            //        .HasColumnName("IPAddress")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.HasOne(d => d.Transaction)
            //        .WithMany(p => p.GarmentAssortmentTransactionLog)
            //        .HasForeignKey(d => d.TransactionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GarmentAssortmentTransaction_Log_TransactionLog_Setup");
            //});

            //modelBuilder.Entity<GarmentCategorySetup>(entity =>
            //{
            //    entity.ToTable("GarmentCategory_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<GarmentFinishingPackingTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.IsFinishing)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsPacking)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");
            //});

            //modelBuilder.Entity<GarmentFinishingSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GarmentFinishing_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OperationRate)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Smvvalue).HasColumnName("SMVValue");
            //});

            //modelBuilder.Entity<GarmentFinishingSetup1>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GarmentFinishingSetup");

            //    entity.Property(e => e.GarmentFinishingId).HasColumnName("GarmentFinishingID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OutSourceDetail)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<GarmentSizeRangeSetup>(entity =>
            //{
            //    entity.ToTable("GarmentSizeRange_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.SizeRangeRegionId).HasColumnName("SizeRangeRegionID");

            //    entity.Property(e => e.SizeRangeTypeId).HasColumnName("SizeRangeTypeID");

            //    entity.HasOne(d => d.GarmentType)
            //        .WithMany(p => p.GarmentSizeRangeSetup)
            //        .HasForeignKey(d => d.GarmentTypeId)
            //        .HasConstraintName("FK_GarmentSizeRange_Setup_GarmentType_Setup");

            //    entity.HasOne(d => d.Gender)
            //        .WithMany(p => p.GarmentSizeRangeSetup)
            //        .HasForeignKey(d => d.GenderId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GarmentSizeRange_Setup_Gender_Setup");

            //    entity.HasOne(d => d.SizeRangeRegion)
            //        .WithMany(p => p.GarmentSizeRangeSetup)
            //        .HasForeignKey(d => d.SizeRangeRegionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GarmentSizeRange_Setup_SizeRangeRegion_Setup");

            //    entity.HasOne(d => d.SizeRangeType)
            //        .WithMany(p => p.GarmentSizeRangeSetup)
            //        .HasForeignKey(d => d.SizeRangeTypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GarmentSizeRange_Setup_SizeRangeType_Setup");
            //});

            //modelBuilder.Entity<GarmentTypeSetup>(entity =>
            //{
            //    entity.ToTable("GarmentType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(70)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.GarmentCategoryId).HasColumnName("GarmentCategoryID");

            //    entity.Property(e => e.GarmentCode)
            //        .IsRequired()
            //        .HasMaxLength(2)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.GarmentCategory)
            //        .WithMany(p => p.GarmentTypeSetup)
            //        .HasForeignKey(d => d.GarmentCategoryId)
            //        .HasConstraintName("FK_GarmentType_Setup_GarmentCategory_Setup");
            //});

            //modelBuilder.Entity<GarmentWashing>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.WashingCodeId).HasColumnName("WashingCodeID");

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.GarmentWashing)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_GarmentWashing_SelectedElement");
            //});

            //modelBuilder.Entity<GarmentWashingSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Smv).HasColumnName("SMV");
            //});

            //modelBuilder.Entity<GarmentWeight>(entity =>
            //{
            //    entity.HasKey(e => e.StyleId);

            //    entity.Property(e => e.StyleId)
            //        .HasColumnName("StyleID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<GarmentWeightUnitSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GarmentWeightUnit_setup");

            //    entity.Property(e => e.UnitDescription)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<GarmentWiseFabricTrimSetup>(entity =>
            //{
            //    entity.ToTable("GarmentWise_FabricTrim_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.FabricTrimId).HasColumnName("FabricTrimID");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<GeGarmentWashingSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GE_GarmentWashing_Setup");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.GwId)
            //        .HasColumnName("GW_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<GeGarmentWashingSetupDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GE_GarmentWashing_Setup_Detail");

            //    entity.Property(e => e.GwId).HasColumnName("GW_ID");

            //    entity.Property(e => e.GwOperartionDp).HasColumnName("GW_Operartion_DP");

            //    entity.Property(e => e.GwOperationHp).HasColumnName("GW_Operation_HP");

            //    entity.Property(e => e.GwOperationId).HasColumnName("GW_OperationID");

            //    entity.Property(e => e.GwOperationRate).HasColumnName("GW_OperationRate");

            //    entity.Property(e => e.GwOperationSequence).HasColumnName("GW_Operation_Sequence");

            //    entity.Property(e => e.GwOperationSmv).HasColumnName("GW_OperationSMV");

            //    entity.Property(e => e.GwdId)
            //        .HasColumnName("GWD_ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<GeThreadBreakageAllowance>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GE_ThreadBreakageAllowance");

            //    entity.Property(e => e.GarmentType).HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<GeThreadColor>(entity =>
            //{
            //    entity.ToTable("GE_ThreadColor");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorsetId).HasColumnName("ColorsetID");

            //    entity.Property(e => e.GeThreadSpecificationId).HasColumnName("GE_ThreadSpecificationID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.GeThreadSpecification)
            //        .WithMany(p => p.GeThreadColor)
            //        .HasForeignKey(d => d.GeThreadSpecificationId)
            //        .HasConstraintName("FK_GE_ThreadColor_GE_ThreadSpecification");
            //});

            //modelBuilder.Entity<GeThreadConeSizeSetup>(entity =>
            //{
            //    entity.ToTable("GE_ThreadConeSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MrpunitId).HasColumnName("MRPUnitID");
            //});

            //modelBuilder.Entity<GeThreadConsumptionDetail>(entity =>
            //{
            //    entity.ToTable("GE_ThreadConsumptionDetail");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GeThreadConsumptionMasterId).HasColumnName("GE_ThreadConsumptionMasterID");

            //    entity.Property(e => e.GeThreadSpecificationId).HasColumnName("GE_ThreadSpecificationID");

            //    entity.HasOne(d => d.GeThreadConsumptionMaster)
            //        .WithMany(p => p.GeThreadConsumptionDetail)
            //        .HasForeignKey(d => d.GeThreadConsumptionMasterId)
            //        .HasConstraintName("FK_GE_ThreadConsumptionDetail_GE_ThreadConsumptionMaster");

            //    entity.HasOne(d => d.GeThreadSpecification)
            //        .WithMany(p => p.GeThreadConsumptionDetail)
            //        .HasForeignKey(d => d.GeThreadSpecificationId)
            //        .HasConstraintName("FK_GE_ThreadConsumptionDetail_GE_ThreadSpecification");
            //});

            //modelBuilder.Entity<GeThreadConsumptionMaster>(entity =>
            //{
            //    entity.ToTable("GE_ThreadConsumptionMaster");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OperationId).HasColumnName("OperationID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<GeThreadSeamMarginSetup>(entity =>
            //{
            //    entity.ToTable("GE_ThreadSeamMargin_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GarmentType).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");
            //});

            //modelBuilder.Entity<GeThreadSpecification>(entity =>
            //{
            //    entity.ToTable("GE_ThreadSpecification");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CountId).HasColumnName("CountID");

            //    entity.Property(e => e.GeThreadSpecificationMasterId).HasColumnName("GE_ThreadSpecificationMasterID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.HasOne(d => d.GeThreadSpecificationMaster)
            //        .WithMany(p => p.GeThreadSpecification)
            //        .HasForeignKey(d => d.GeThreadSpecificationMasterId)
            //        .HasConstraintName("FK_GE_ThreadSpecification_GE_ThreadSpecificationMaster");
            //});

            //modelBuilder.Entity<GeThreadSpecificationMaster>(entity =>
            //{
            //    entity.ToTable("GE_ThreadSpecificationMaster");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<GeThreadStandardConsumptionSetup>(entity =>
            //{
            //    entity.ToTable("GE_ThreadStandardConsumption_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GarmentType).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");
            //});

            //modelBuilder.Entity<GeThreadTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GE_ThreadTransaction_Log");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<GenderSetup>(entity =>
            //{
            //    entity.ToTable("Gender_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<GeneratedMessagesDetails>(entity =>
            //{
            //    entity.ToTable("GeneratedMessages_Details");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.GenerationDate).HasColumnType("datetime");

            //    entity.Property(e => e.InitUserId).HasColumnName("Init_UserID");

            //    entity.Property(e => e.Justification)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LotNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MessageId).HasColumnName("MessageID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<GenericFabricCompositionSetupDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GenericFabricCompositionSetup_Detail");

            //    entity.Property(e => e.FabricMasterId).HasColumnName("FabricMasterID");

            //    entity.Property(e => e.FabricRatioId).HasColumnName("FabricRatioID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<GenericFabricCompositionSetupMaster>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GenericFabricCompositionSetup_Master");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(500);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<GreigeFabricCodeSetup>(entity =>
            //{
            //    entity.ToTable("GreigeFabricCode_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DessignTypeId).HasColumnName("DessignTypeID");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricDyeingTypeId).HasColumnName("FabricDyeingTypeID");

            //    entity.Property(e => e.FabricGuageId).HasColumnName("FabricGuageID");

            //    entity.Property(e => e.FabricMachineTypeId).HasColumnName("FabricMachineTypeID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.HasOne(d => d.DessignType)
            //        .WithMany(p => p.GreigeFabricCodeSetup)
            //        .HasForeignKey(d => d.DessignTypeId)
            //        .HasConstraintName("FK_GreigeFabricCode_Setup_FabricYarnDesignType_Setup");

            //    entity.HasOne(d => d.FabricCategory)
            //        .WithMany(p => p.GreigeFabricCodeSetup)
            //        .HasForeignKey(d => d.FabricCategoryId)
            //        .HasConstraintName("FK_GreigeFabricCode_Setup_FabricCategory_setup");

            //    entity.HasOne(d => d.FabricDyeingType)
            //        .WithMany(p => p.GreigeFabricCodeSetup)
            //        .HasForeignKey(d => d.FabricDyeingTypeId)
            //        .HasConstraintName("FK_GreigeFabricCode_Setup_FabricDyeingType_Setup");

            //    entity.HasOne(d => d.FabricGuage)
            //        .WithMany(p => p.GreigeFabricCodeSetup)
            //        .HasForeignKey(d => d.FabricGuageId)
            //        .HasConstraintName("FK_GreigeFabricCode_Setup_FabricGuage_Setup");

            //    entity.HasOne(d => d.FabricMachineType)
            //        .WithMany(p => p.GreigeFabricCodeSetup)
            //        .HasForeignKey(d => d.FabricMachineTypeId)
            //        .HasConstraintName("FK_GreigeFabricCode_Setup_FabricMachineType_Setup");

            //    entity.HasOne(d => d.FabricQuality)
            //        .WithMany(p => p.GreigeFabricCodeSetup)
            //        .HasForeignKey(d => d.FabricQualityId)
            //        .HasConstraintName("FK_GreigeFabricCode_Setup_FabricQuality_Setup");
            //});

            //modelBuilder.Entity<GreigeFabricTiipingColor>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DyeingMethodId).HasColumnName("DyeingMethodID");

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.GreigeFabricTippingSpecificationId).HasColumnName("GreigeFabricTippingSpecificationID");

            //    entity.Property(e => e.Pantone)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.GreigeFabricTippingSpecification)
            //        .WithMany(p => p.GreigeFabricTiipingColor)
            //        .HasForeignKey(d => d.GreigeFabricTippingSpecificationId)
            //        .HasConstraintName("FK_GreigeFabricTiipingColor_GreigeFabricTippingVeltSpecification");
            //});

            //modelBuilder.Entity<GreigeFabricTippingVeltSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.GreigeFabricSpecificationId).HasColumnName("GreigeFabricSpecificationID");

            //    entity.HasOne(d => d.GreigeFabricSpecification)
            //        .WithMany(p => p.GreigeFabricTippingVeltSpecification)
            //        .HasForeignKey(d => d.GreigeFabricSpecificationId)
            //        .HasConstraintName("FK_GreigeFabricTippingVeltSpecification_GreigeFabricCode_Setup");
            //});

            //modelBuilder.Entity<GreigeFabricTippingYarn>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.GreigeFabricTippingSpecificationId).HasColumnName("GreigeFabricTippingSpecificationID");

            //    entity.Property(e => e.GreigeFabricYarnSpecificationId).HasColumnName("GreigeFabricYarnSpecificationID");

            //    entity.HasOne(d => d.GreigeFabricTippingSpecification)
            //        .WithMany(p => p.GreigeFabricTippingYarn)
            //        .HasForeignKey(d => d.GreigeFabricTippingSpecificationId)
            //        .HasConstraintName("FK_GreigeFabricTippingYarn_GreigeFabricTippingVeltSpecification");
            //});

            //modelBuilder.Entity<GreigeFabricYarnSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Color)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.GreigeFabricCodeId).HasColumnName("GreigeFabricCodeID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDesignId).HasColumnName("YarnDesignID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.Property(e => e.YarnDyeingMethodId).HasColumnName("YarnDyeingMethodID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");

            //    entity.HasOne(d => d.FabricYarnVendorColor)
            //        .WithMany(p => p.GreigeFabricYarnSpecification)
            //        .HasForeignKey(d => d.FabricYarnVendorColorId)
            //        .HasConstraintName("FK_GreigeFabricYarnSpecification_FabricYarnVendorColorName_Setup");

            //    entity.HasOne(d => d.GreigeFabricCode)
            //        .WithMany(p => p.GreigeFabricYarnSpecification)
            //        .HasForeignKey(d => d.GreigeFabricCodeId)
            //        .HasConstraintName("FK_GreigeFabricYarnSpecification_GreigeFabricCode_Setup");

            //    entity.HasOne(d => d.YarnComposition)
            //        .WithMany(p => p.GreigeFabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnCompositionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_GreigeFabricYarnSpecification_FabricYarnComposition_Setup");

            //    entity.HasOne(d => d.YarnCount)
            //        .WithMany(p => p.GreigeFabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnCountId)
            //        .HasConstraintName("FK_GreigeFabricYarnSpecification_FabricYarnCount_Setup");

            //    entity.HasOne(d => d.YarnDyeing)
            //        .WithMany(p => p.GreigeFabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnDyeingId)
            //        .HasConstraintName("FK_GreigeFabricYarnSpecification_FabricYarnDyeing_Setup");

            //    entity.HasOne(d => d.YarnDyeingMethod)
            //        .WithMany(p => p.GreigeFabricYarnSpecification)
            //        .HasForeignKey(d => d.YarnDyeingMethodId)
            //        .HasConstraintName("FK_GreigeFabricYarnSpecification_FabricYarnDyeingMethod_Setup");
            //});

            //modelBuilder.Entity<GreigeFabricYarnSpecificationColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorsetId).HasColumnName("ColorsetID");

            //    entity.Property(e => e.GreigeFabricYarnSpecificationId).HasColumnName("GreigeFabricYarnSpecificationID");

            //    entity.Property(e => e.PalleteTypeId).HasColumnName("PalleteTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorColorId).HasColumnName("VendorColorID");
            //});

            //modelBuilder.Entity<GreigeInventory>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.GreigeInventoryId).HasColumnName("GreigeInventoryID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");
            //});

            //modelBuilder.Entity<GreigeOpeningDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.GreigeOdid).HasColumnName("GreigeODID");
            //});

            //modelBuilder.Entity<GreigeReceiptDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.GreigeInventoryId).HasColumnName("GreigeInventoryID");

            //    entity.Property(e => e.GreigeReceiptDetailId).HasColumnName("GreigeReceiptDetailID");

            //    entity.Property(e => e.Mrmid).HasColumnName("MRMID");
            //});

            //modelBuilder.Entity<GreigeWastageSetup>(entity =>
            //{
            //    entity.ToTable("GreigeWastage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<GriegeInventoryRoll>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.GreigeInventoryId).HasColumnName("GreigeInventoryID");

            //    entity.Property(e => e.GreigeIrid).HasColumnName("GreigeIRID");

            //    entity.Property(e => e.RollNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<Gwchain>(entity =>
            //{
            //    entity.ToTable("GWChain");

            //    entity.Property(e => e.GwchainId).HasColumnName("GWChainID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.FinalSmv).HasColumnName("FinalSMV");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.Weight)
            //        .HasColumnName("weight")
            //        .HasDefaultValueSql("(0.6)");
            //});

            //modelBuilder.Entity<GwchainMachineOperation>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWChainMachineOperation");

            //    entity.Property(e => e.GwchainId).HasColumnName("GWChainID");

            //    entity.Property(e => e.GwchainMachineOperationId)
            //        .HasColumnName("GWChainMachineOperationID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.GwmachineOperationId).HasColumnName("GWMachineOperationID");

            //    entity.Property(e => e.NoOfMachines)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.OperationMachineTypeId).HasColumnName("OperationMachineTypeID");

            //    entity.Property(e => e.ProcessSequence).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Smv).HasColumnName("SMV");

            //    entity.HasOne(d => d.Gwchain)
            //        .WithMany(p => p.GwchainMachineOperation)
            //        .HasForeignKey(d => d.GwchainId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GWChainMachineOperation_GWChain");
            //});

            //modelBuilder.Entity<GwchainManualOperation>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWChainManualOperation");

            //    entity.Property(e => e.GwchainId).HasColumnName("GWChainID");

            //    entity.Property(e => e.GwchainManualOperationId)
            //        .HasColumnName("GWChainManualOperationID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.GwmanualOperationId).HasColumnName("GWManualOperationID");

            //    entity.Property(e => e.ProcessSequence).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Smv).HasColumnName("SMV");

            //    entity.HasOne(d => d.Gwchain)
            //        .WithMany(p => p.GwchainManualOperation)
            //        .HasForeignKey(d => d.GwchainId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_GWChainManualOperation_GWChain");
            //});

            //modelBuilder.Entity<GwmachineOperationMachineType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWMachineOperation_MachineType");

            //    entity.Property(e => e.GwmachineOperationId).HasColumnName("GWMachineOperationID");

            //    entity.Property(e => e.GwmachineTypeId).HasColumnName("GWMachineTypeID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<GwmachineOperations>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWMachineOperations");

            //    entity.Property(e => e.GwmachineOperationId)
            //        .HasColumnName("GWMachineOperationID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.GwmachineOperationName)
            //        .IsRequired()
            //        .HasColumnName("GWMachineOperationName")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsDeleted)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<GwmachineTypes>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWMachineTypes");

            //    entity.Property(e => e.FamMachineId).HasColumnName("FAM_MachineID");

            //    entity.Property(e => e.GwmachineCapacity).HasColumnName("GWMachineCapacity");

            //    entity.Property(e => e.GwmachineTypeId)
            //        .HasColumnName("GWMachineTypeID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.GwmachineTypeName)
            //        .IsRequired()
            //        .HasColumnName("GWMachineTypeName")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsDeleted)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<GwmachineTypesInstances>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWMachineTypesInstances");

            //    entity.Property(e => e.FamMachineTypeId).HasColumnName("FAM_MachineTypeID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MachineId).HasColumnName("MachineID");

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<GwmanualOperation>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWManualOperation");

            //    entity.Property(e => e.GwmachineOperationName)
            //        .IsRequired()
            //        .HasColumnName("GWMachineOperationName")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GwmanualOperationId)
            //        .HasColumnName("GWManualOperationID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IsDeleted)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Smv).HasColumnName("SMV");
            //});

            //modelBuilder.Entity<GwstyleChain>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("GWStyleChain");

            //    entity.Property(e => e.Gwchain).HasColumnName("GWChain");

            //    entity.Property(e => e.GwstyleChain1)
            //        .HasColumnName("GWStyleChain")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<HangTagAttachmentSetup>(entity =>
            //{
            //    entity.ToTable("HangTagAttachment_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<HangTagBarCode>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BarCode)
            //        .HasMaxLength(15)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");
            //});

            //modelBuilder.Entity<HangTagColors>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.HangTagSpecificationId).HasColumnName("HangTagSpecificationID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.HangTagColors)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_HangTagColors_FabricSpecificationColor");

            //    entity.HasOne(d => d.HangTagSpecification)
            //        .WithMany(p => p.HangTagColors)
            //        .HasForeignKey(d => d.HangTagSpecificationId)
            //        .HasConstraintName("FK_HangTagColors_HangTagSpecification");
            //});

            //modelBuilder.Entity<HangTagCordMaterialSetup>(entity =>
            //{
            //    entity.ToTable("HangTagCordMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<HangTagImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<HangTagImageSetup>(entity =>
            //{
            //    entity.ToTable("HangTagImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ClassificationId).HasColumnName("ClassificationID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.HangTagImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_HangTagImage_Setup_TrimUnit_Setup");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.HangTagImageSetup)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_HangTagImage_Setup_HangTagType_Setup");
            //});

            //modelBuilder.Entity<HangTagMaterialSetup>(entity =>
            //{
            //    entity.ToTable("HangTagMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<HangTagPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.HangTagPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_HangTagPlacementInstruction_HangTagSpecification");
            //});

            //modelBuilder.Entity<HangTagSize>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.HangTagSpecificationId).HasColumnName("HangTagSpecificationID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.HangTagSpecification)
            //        .WithMany(p => p.HangTagSize)
            //        .HasForeignKey(d => d.HangTagSpecificationId)
            //        .HasConstraintName("FK_HangTagSize_HangTagSpecification");
            //});

            //modelBuilder.Entity<HangTagSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.HangTagClassificationId).HasColumnName("HangTagClassificationID");

            //    entity.Property(e => e.HangTagCordMaterialId).HasColumnName("HangTagCordMaterialID");

            //    entity.Property(e => e.HangTagTypeId).HasColumnName("HangTagTypeID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VarianceTypeId).HasColumnName("VarianceTypeID");

            //    entity.HasOne(d => d.Attachment)
            //        .WithMany(p => p.HangTagSpecification)
            //        .HasForeignKey(d => d.AttachmentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_HangTagSpecification_HangTagAttachment_Setup");

            //    entity.HasOne(d => d.HangTagCordMaterial)
            //        .WithMany(p => p.HangTagSpecification)
            //        .HasForeignKey(d => d.HangTagCordMaterialId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_HangTagSpecification_HangTagCordMaterial_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.HangTagSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_HangTagSpecification_HangTagImage_Setup");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.HangTagSpecification)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_HangTagSpecification_HangTagMaterial_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.HangTagSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_HangTagSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.HangTagSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_HangTagSpecification_SelectedTrim");
            //});

            //modelBuilder.Entity<HangTagTypeSetup>(entity =>
            //{
            //    entity.ToTable("HangTagType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<HangerImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<HangerImageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("HangerImage_Setup");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.Weight).HasColumnType("numeric(4, 0)");
            //});

            //modelBuilder.Entity<HangerSize>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");
            //});

            //modelBuilder.Entity<HangerSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.IsSizeRing)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<HangerTypeSetup>(entity =>
            //{
            //    entity.ToTable("HangerType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<HeadPin>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Color)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FinishId).HasColumnName("FinishID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");
            //});

            //modelBuilder.Entity<HeadPinPlacementPoints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.HeadPinId).HasColumnName("HeadPinID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PlacementId)
            //        .IsRequired()
            //        .HasColumnName("PlacementID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");
            //});

            //modelBuilder.Entity<HeadPinPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("HeadPinPlacement_setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<HeadPinPrintImagesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("HeadPinPrintImages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ImageTypeSetup>(entity =>
            //{
            //    entity.ToTable("ImageType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<InLayCard>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<InLayCardImagesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("InLayCardImages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<InLayCardPlacementPoints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.InLayCardId).HasColumnName("InLayCardID");

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");
            //});

            //modelBuilder.Entity<InLayCardPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("InLayCardPlacement_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<InsertionSetup>(entity =>
            //{
            //    entity.ToTable("Insertion_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsRgd).HasColumnName("IsRGD");
            //});

            //modelBuilder.Entity<InspectionAgencySetup>(entity =>
            //{
            //    entity.ToTable("InspectionAgency_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<InspectionLabSetup>(entity =>
            //{
            //    entity.HasKey(e => e.InspectionLabId);

            //    entity.ToTable("InspectionLab_Setup");

            //    entity.Property(e => e.InspectionLabId).HasColumnName("InspectionLabID");

            //    entity.Property(e => e.InspectionLabDescription)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<InspectionLevelSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("InspectionLevel_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<InterLinningTypesSetup>(entity =>
            //{
            //    entity.ToTable("InterLinningTypes_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<InvoicePriceVersion>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.InvoicePriceCurrencyId).HasColumnName("InvoicePriceCurrencyID");

            //    entity.Property(e => e.InvoicePriceEntryDate).HasColumnType("datetime");

            //    entity.Property(e => e.InvoicePriceUserId).HasColumnName("InvoicePriceUserID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<Ios>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("IOS");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<IosVersions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("IOS_Versions");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IosId).HasColumnName("IOS_ID");

            //    entity.Property(e => e.IosXml)
            //        .IsRequired()
            //        .HasColumnName("IOS_XML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<ItemMap>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AccountingDepRate).HasColumnType("decimal(24, 2)");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Initials)
            //        .HasMaxLength(15)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");

            //    entity.Property(e => e.TaxDepRate1).HasColumnType("decimal(24, 2)");

            //    entity.Property(e => e.TaxDepRate2).HasColumnType("decimal(24, 2)");

            //    entity.Property(e => e.TaxDepRate3).HasColumnType("decimal(24, 2)");

            //    entity.Property(e => e.TaxDepRateN).HasColumnType("decimal(24, 2)");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<JetClip>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AppearenceId).HasColumnName("AppearenceID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");
            //});

            //modelBuilder.Entity<JetClipImagesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("JetClipImages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<JetClipPlacementPoints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.JetClipId).HasColumnName("JetClipID");

            //    entity.Property(e => e.Number)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");
            //});

            //modelBuilder.Entity<JetClipPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("JetClipPlacement_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<KajjingDirectionSetup>(entity =>
            //{
            //    entity.ToTable("KajjingDirection_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<KnitterSetup>(entity =>
            //{
            //    entity.ToTable("Knitter_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Coaid).HasColumnName("COAID");

            //    entity.Property(e => e.ContactPerson)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.KnitterName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PhoneNumber)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<KnittingExperiment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AddtionalFeederXml)
            //        .HasColumnName("AddtionalFeederXML")
            //        .HasMaxLength(4000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.GuageId).HasColumnName("GuageID");

            //    entity.Property(e => e.KnittingChallanNo)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.KnittingLayoutXml)
            //        .HasColumnName("KnittingLayoutXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.KnittingSubcontractorId).HasColumnName("KnittingSubcontractorID");

            //    entity.Property(e => e.MachineDiameterId).HasColumnName("MachineDiameterID");

            //    entity.Property(e => e.StitchLength)
            //        .HasMaxLength(53)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Guage)
            //        .WithMany(p => p.KnittingExperiment)
            //        .HasForeignKey(d => d.GuageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_KnittingExperiment_FabricGuage_Setup");

            //    entity.HasOne(d => d.MachineDiameter)
            //        .WithMany(p => p.KnittingExperiment)
            //        .HasForeignKey(d => d.MachineDiameterId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_KnittingExperiment_MachineDiameter_Setup");
            //});

            //modelBuilder.Entity<KnittingRateSetup>(entity =>
            //{
            //    entity.ToTable("KnittingRate_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricKnittingTypeId).HasColumnName("FabricKnittingTypeID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.IsRateInserted).HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<KnittingRateSetup1>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KnittingRate_Setup_1");

            //    entity.Property(e => e.FabricKnittingTypeId).HasColumnName("FabricKnittingTypeID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<KnittingSubcontractorSetup>(entity =>
            //{
            //    entity.ToTable("KnittingSubcontractor_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<KnittingYarnRate>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.KnittingRateId).HasColumnName("KnittingRateID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");

            //    entity.HasOne(d => d.KnittingRate)
            //        .WithMany(p => p.KnittingYarnRate)
            //        .HasForeignKey(d => d.KnittingRateId)
            //        .HasConstraintName("FK_KnittingYarnRate_KnittingRate_Setup");
            //});

            //modelBuilder.Entity<KnittingYarnRate1>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KnittingYarnRate_1");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.KnittingRateId).HasColumnName("KnittingRateID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");
            //});

            //modelBuilder.Entity<KrsColors>(entity =>
            //{
            //    entity.HasKey(e => e.Krscid);

            //    entity.ToTable("KRS_Colors");

            //    entity.Property(e => e.Krscid)
            //        .HasColumnName("KRSCID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Cid).HasColumnName("CID");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.ColorName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Krsdid).HasColumnName("KRSDID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pid).HasColumnName("PID");

            //    entity.Property(e => e.Quantity).HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.QuantityWow)
            //        .HasColumnName("QuantityWOW")
            //        .HasColumnType("numeric(18, 4)");
            //});



            //modelBuilder.Entity<KrsDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KRS_DETAIL");

            //    entity.Property(e => e.Dyeingid).HasColumnName("DYEINGID");

            //    entity.Property(e => e.FabComposition)
            //        .IsRequired()
            //        .HasColumnName("FAB_COMPOSITION")
            //        .HasMaxLength(80)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fabid).HasColumnName("FABID");

            //    entity.Property(e => e.FinishedWidth).HasColumnName("FINISHED_WIDTH");

            //    entity.Property(e => e.Gauge).HasColumnName("GAUGE");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Isspandex).HasColumnName("ISSPANDEX");

            //    entity.Property(e => e.KrsMid).HasColumnName("KRS_MID");

            //    entity.Property(e => e.Qualityid).HasColumnName("QUALITYID");

            //    entity.Property(e => e.Typeid).HasColumnName("TYPEID");

            //    entity.Property(e => e.Wstg)
            //        .HasColumnName("WSTG")
            //        .HasColumnType("numeric(18, 2)");

            //    entity.Property(e => e.Wstgd)
            //        .HasColumnName("WSTGD")
            //        .IsUnicode(false);
            //});


            //modelBuilder.Entity<KrsDyedColors>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KRS_Dyed_Colors");

            //    entity.Property(e => e.ColorName)
            //        .IsRequired()
            //        .HasMaxLength(800)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Krscid).HasColumnName("KRSCID");

            //    entity.Property(e => e.Krsdid)
            //        .HasColumnName("KRSDID");
            //        //.ValueGeneratedOnAdd();

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");

            //    entity.Property(e => e.Percentage)
            //        .IsRequired()
            //        .HasMaxLength(800)
            //        .IsUnicode(false);
            //});



            //modelBuilder.Entity<KrsMaster>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KRS_MASTER");

            //    entity.Property(e => e.Byr).HasColumnName("BYR");

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CompanyId)
            //        .HasColumnName("CompanyID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Ref).HasMaxLength(100);

            //    entity.Property(e => e.UserId)
            //        .HasColumnName("UserID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            modelBuilder.Entity<KRS_SearchXML>(entity =>
            {
                //  entity.HasNoKey();

                //     entity.ToTable("KRS_SearchXML");

                //    entity.Property(e => e.KrsId).HasColumnName("KRS_ID");

                entity.Property(e => e.KRSXMLID)
                    .HasColumnName("KRSXMLID")
                    .ValueGeneratedOnAdd();

                //    entity.Property(e => e.SearchXml)
                //        .IsRequired()
                //        .HasColumnName("SearchXML")
                //        .IsUnicode(false);
            });

            //modelBuilder.Entity<KrsSizes>(entity =>
            //{
            //    entity.HasKey(e => e.Krssid);

            //    entity.ToTable("KRS_Sizes");

            //    entity.Property(e => e.Krssid).HasColumnName("KRSSID");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Krsdid).HasColumnName("KRSDID");

            //    entity.Property(e => e.Len).HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.Quantity).HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Wid).HasColumnType("numeric(18, 4)");
            //});



            //modelBuilder.Entity<KrsStyleInfo>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KRS_STYLE_INFO");

            //    entity.Property(e => e.Consumption).HasColumnName("CONSUMPTION");

            //    entity.Property(e => e.Consumptionwow).HasColumnName("CONSUMPTIONWOW");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.KrsDid).HasColumnName("KRS_DID");

            //    entity.Property(e => e.Styleid).HasColumnName("STYLEID");
            //});



            //modelBuilder.Entity<KrsVersions>(entity =>
            //{
            //    entity.HasKey(e => e.Krsvid);

            //    entity.ToTable("KRS_Versions");

            //    entity.Property(e => e.Krsvid).HasColumnName("KRSVID");

            //    entity.Property(e => e.Krsid).HasColumnName("krsid");

            //    entity.Property(e => e.Versionxml)
            //        .IsRequired()
            //        .HasColumnName("versionxml")
            //        .HasColumnType("ntext");
            //});

            //modelBuilder.Entity<KrsYarnDetails>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("KRS_YARN_DETAILS");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.Consumption).HasColumnName("CONSUMPTION");

            //    entity.Property(e => e.FabPantone)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.KrsDid).HasColumnName("KRS_DID");

            //    entity.Property(e => e.Pantone)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Utilization).HasColumnName("UTILIZATION");

            //    entity.Property(e => e.YarnCompositionid).HasColumnName("YARN_COMPOSITIONID");

            //    entity.Property(e => e.YarnCountid).HasColumnName("YARN_COUNTID");

            //    entity.Property(e => e.YarnQualityid).HasColumnName("YARN_QUALITYID");
            //});

            modelBuilder.Entity<KRS_Colors_DEL>(entity =>
            {
                entity.HasKey(b => b.KRSCID);
            });

            modelBuilder.Entity<KRS_Dyed_Colors_DEL>(entity =>
            {
                entity.HasKey(b => b.KRSDID);
            });
            modelBuilder.Entity<KRS_SIZES_DEL>(entity =>
            {
                entity.HasKey(b => b.KRSSID);
            });


            //modelBuilder.Entity<LabelAttachmentSetup>(entity =>
            //{
            //    entity.ToTable("LabelAttachment_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LabelBarCode>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BarCode)
            //        .HasMaxLength(15)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");
            //});

            //modelBuilder.Entity<LabelColors>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.LabelSpecificationId).HasColumnName("LabelSpecificationID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.LabelColors)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_LabelColors_FabricSpecificationColor");

            //    entity.HasOne(d => d.LabelSpecification)
            //        .WithMany(p => p.LabelColors)
            //        .HasForeignKey(d => d.LabelSpecificationId)
            //        .HasConstraintName("FK_LabelColors_LabelSpecification");
            //});

            //modelBuilder.Entity<LabelDesignSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LabelDesign_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LabelImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<LabelImageSetup>(entity =>
            //{
            //    entity.ToTable("LabelImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.LabelClassificationId).HasColumnName("LabelClassificationID");

            //    entity.Property(e => e.Length).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId)
            //        .HasColumnName("TypeID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.Width).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.LabelImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_LabelImage_Setup_TrimUnit_Setup");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.LabelImageSetup)
            //        .HasForeignKey(d => d.TypeId)
            //        .HasConstraintName("FK_LabelImage_Setup_LabelType_Setup");
            //});

            //modelBuilder.Entity<LabelMaterialSetup>(entity =>
            //{
            //    entity.ToTable("LabelMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LabelPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Location)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.LabelPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LabelPlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<LabelSize>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.LabelSpecificationId).HasColumnName("LabelSpecificationID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.SelectedSizeRange)
            //        .WithMany(p => p.LabelSize)
            //        .HasForeignKey(d => d.SelectedSizeRangeId)
            //        .HasConstraintName("FK_LabelSize_SelectedGarmentSizeRange");
            //});

            //modelBuilder.Entity<LabelSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttachmentId).HasColumnName("AttachmentID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.LabelClassificationId).HasColumnName("LabelClassificationID");

            //    entity.Property(e => e.LabelTypeId).HasColumnName("LabelTypeID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VarianceTypeId).HasColumnName("VarianceTypeID");

            //    entity.HasOne(d => d.Attachment)
            //        .WithMany(p => p.LabelSpecification)
            //        .HasForeignKey(d => d.AttachmentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LabelSpecification_LabelAttachment_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.LabelSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LabelSpecification_LabelImage_Setup");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.LabelSpecification)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LabelSpecification_LabelMaterial_Setup");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.LabelSpecification)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .HasConstraintName("FK_LabelSpecification_TrimMeasurementScale_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.LabelSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LabelSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.LabelSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_LabelSpecification_SelectedTrim");
            //});

            //modelBuilder.Entity<LabelTypeSetup>(entity =>
            //{
            //    entity.ToTable("LabelType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LaceColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(16)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.LaceColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_LaceColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.LaceColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LaceColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.LaceColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_LaceColor_LaceSpecification");
            //});

            //modelBuilder.Entity<LaceDyeingSetup>(entity =>
            //{
            //    entity.ToTable("LaceDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<LaceImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<LaceImageSetup>(entity =>
            //{
            //    entity.ToTable("LaceImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.LaceImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .HasConstraintName("FK_LaceImage_Setup_LaceMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.LaceImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_LaceImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<LaceMaterialSetup>(entity =>
            //{
            //    entity.ToTable("LaceMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LacePlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.LacePlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_LacePlacementInstruction_LaceSpecification");
            //});

            //modelBuilder.Entity<LaceSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Test).HasColumnName("test");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");

            //    entity.HasOne(d => d.Dyeing)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.DyeingId)
            //        .HasConstraintName("FK_LaceSpecification_LaceDyeing_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LaceSpecification_LaceImage_Setup");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LaceSpecification_LaceMaterial_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LaceSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_LaceSpecification_SelectedTrim");

            //    entity.HasOne(d => d.TrimMeasurementScale)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.TrimMeasurementScaleId)
            //        .HasConstraintName("FK_LaceSpecification_TrimMeasurementScale_Setup");

            //    entity.HasOne(d => d.Width)
            //        .WithMany(p => p.LaceSpecification)
            //        .HasForeignKey(d => d.WidthId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LaceSpecification_LaceWidth_Setup");
            //});

            //modelBuilder.Entity<LaceWidthSetup>(entity =>
            //{
            //    entity.ToTable("LaceWidth_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<Language>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Language1)
            //        .IsRequired()
            //        .HasColumnName("Language")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcAldAcceptanceLiabilityMaster>(entity =>
            //{
            //    entity.HasKey(e => e.LcinputId);

            //    entity.ToTable("LC_ALD_AcceptanceLiabilityMaster");

            //    entity.Property(e => e.LcinputId).HasColumnName("LCInputID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.LcaldAmount)
            //        .HasColumnName("LCALD_Amount")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcaldBankId).HasColumnName("LCALD_BankID");

            //    entity.Property(e => e.LcaldBankMaturityDate)
            //        .HasColumnName("LCALD_BankMaturityDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldBankRecvDate)
            //        .HasColumnName("LCALD_BankRecvDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldBtblcno)
            //        .HasColumnName("LCALD_BTBLCNo")
            //        .HasMaxLength(100);

            //    entity.Property(e => e.LcaldCompanyId).HasColumnName("LCALD_CompanyID");

            //    entity.Property(e => e.LcaldCurrencyId).HasColumnName("LCALD_CurrencyID");

            //    entity.Property(e => e.LcaldCurrencyRate)
            //        .HasColumnName("LCALD_CurrencyRate")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcaldDescription)
            //        .HasColumnName("LCALD_Description")
            //        .HasMaxLength(100);

            //    entity.Property(e => e.LcaldLcdate)
            //        .HasColumnName("LCALD_LCDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldLctype)
            //        .HasColumnName("LCALD_LCType")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LcaldMasterLcSalesContract)
            //        .HasColumnName("LCALD_MasterLC_SalesContract")
            //        .HasMaxLength(100);

            //    entity.Property(e => e.LcaldOurAcceptanceDate)
            //        .HasColumnName("LCALD_OurAcceptanceDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldRefNo)
            //        .HasColumnName("LCALD_RefNo")
            //        .HasMaxLength(20);

            //    entity.Property(e => e.LcaldVendorId).HasColumnName("LCALD_VendorID");
            //});

            //modelBuilder.Entity<LcAmendmentTypes>(entity =>
            //{
            //    entity.HasKey(e => e.Amdtid);

            //    entity.ToTable("LC_AmendmentTypes");

            //    entity.Property(e => e.Amdtid)
            //        .HasColumnName("AMDTID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.SystemData).IsUnicode(false);

            //    entity.Property(e => e.SystemId)
            //        .HasColumnName("SystemID")
            //        .IsUnicode(false);

            //    entity.Property(e => e.SystemName).IsUnicode(false);

            //    entity.Property(e => e.TypeDescription)
            //        .IsRequired()
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcBsBuyinghouseSetup>(entity =>
            //{
            //    entity.HasKey(e => e.LbsId);

            //    entity.ToTable("LC_BS_BUYINGHOUSE_SETUP");

            //    entity.Property(e => e.LbsId).HasColumnName("LBS_ID");

            //    entity.Property(e => e.LbsCode)
            //        .IsRequired()
            //        .HasColumnName("LBS_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LbsContactperson)
            //        .HasColumnName("LBS_CONTACTPERSON")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LbsDesc)
            //        .HasColumnName("LBS_DESC")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LbsIsactive).HasColumnName("LBS_ISACTIVE");

            //    entity.Property(e => e.LbsName)
            //        .IsRequired()
            //        .HasColumnName("LBS_NAME")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LbsPhoneno)
            //        .HasColumnName("LBS_PHONENO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcCbtbAmendmentDetail>(entity =>
            //{
            //    entity.HasKey(e => e.Amddid);

            //    entity.ToTable("LC_CBTB_AmendmentDetail");

            //    entity.Property(e => e.Amddid).HasColumnName("AMDDID");

            //    entity.Property(e => e.Amdmaster).HasColumnName("AMDMaster");

            //    entity.Property(e => e.Amdtid).HasColumnName("AMDTID");

            //    entity.Property(e => e.Ntext)
            //        .HasColumnName("NText")
            //        .IsUnicode(false);

            //    entity.Property(e => e.Nvalue)
            //        .HasColumnName("NValue")
            //        .IsUnicode(false);

            //    entity.Property(e => e.Otext)
            //        .HasColumnName("OText")
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ovalue)
            //        .HasColumnName("OValue")
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcCbtbAmendmentMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Amdid);

            //    entity.ToTable("LC_CBTB_AmendmentMaster");

            //    entity.Property(e => e.Amdid).HasColumnName("AMDID");

            //    entity.Property(e => e.Btblc).HasColumnName("BTBLC");

            //    entity.Property(e => e.DateofFinal).HasColumnType("datetime");

            //    entity.Property(e => e.DateofInsert).HasColumnType("datetime");

            //    entity.Property(e => e.Uid).HasColumnName("UID");
            //});

            //modelBuilder.Entity<LcCbtbAmendmentPopiadd>(entity =>
            //{
            //    entity.HasKey(e => e.LcpId);

            //    entity.ToTable("LC_CBTB_AmendmentPOPIADD");

            //    entity.Property(e => e.LcpId).HasColumnName("LCP_ID");

            //    entity.Property(e => e.Amdmaster).HasColumnName("AMDMaster");

            //    entity.Property(e => e.LcpAttributeinstenceid).HasColumnName("LCP_ATTRIBUTEINSTENCEID");

            //    entity.Property(e => e.LcpConversionrate)
            //        .HasColumnName("LCP_CONVERSIONRATE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcpCurrencyid).HasColumnName("LCP_CURRENCYID");

            //    entity.Property(e => e.LcpOrderid).HasColumnName("LCP_ORDERID");

            //    entity.Property(e => e.LcpPidate)
            //        .HasColumnName("LCP_PIDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcpPoid).HasColumnName("LCP_POID");

            //    entity.Property(e => e.LcpQuantity)
            //        .HasColumnName("LCP_QUANTITY")
            //        .HasColumnType("decimal(18, 6)");

            //    entity.Property(e => e.LcpRate)
            //        .HasColumnName("LCP_RATE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcpStore)
            //        .HasColumnName("LCP_STORE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcpUnitid).HasColumnName("LCP_UNITID");

            //    entity.Property(e => e.LcpVpi)
            //        .IsRequired()
            //        .HasColumnName("LCP_VPI")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcCdCashDetail>(entity =>
            //{
            //    entity.HasKey(e => e.LcdId);

            //    entity.ToTable("LC_CD_CASH_DETAIL");

            //    entity.Property(e => e.LcdId)
            //        .HasColumnName("LCD_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LcdPonoId).HasColumnName("LCD_PONO_ID");

            //    entity.Property(e => e.LciVendorpino)
            //        .HasColumnName("LCI_VENDORPINO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LmpId).HasColumnName("LMP_ID");
            //});

            //modelBuilder.Entity<LcCdChildDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_CD_CHILD_DETAIL");

            //    entity.HasIndex(e => new { e.LmcId, e.Poid })
            //        .HasName("_dta_index_LC_CD_CHILD_DETAIL_8_627233735__K2_K6");

            //    entity.Property(e => e.Attributeinstanceid).HasColumnName("ATTRIBUTEINSTANCEID");

            //    entity.Property(e => e.Currencyid).HasColumnName("CURRENCYID");

            //    entity.Property(e => e.LcdId)
            //        .HasColumnName("LCD_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcRate)
            //        .HasColumnName("LMC_RATE")
            //        .HasColumnType("numeric(18, 6)");

            //    entity.Property(e => e.LmcRequiredqty)
            //        .HasColumnName("LMC_REQUIREDQTY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.OfsverId).HasColumnName("OFSVer_ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.Poid).HasColumnName("POID");

            //    entity.Property(e => e.Unitid).HasColumnName("UNITID");

            //    entity.HasOne(d => d.Lmc)
            //        .WithMany(p => p.LcCdChildDetail)
            //        .HasForeignKey(d => d.LmcId)
            //        .HasConstraintName("FK_LC_CD_CHILD_DETAIL_LC_MC_MASTER_CHILD");
            //});

            //modelBuilder.Entity<LcCdChildDetailDeleted>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_CD_CHILD_DETAIL_DELETED");

            //    entity.Property(e => e.Actiondate)
            //        .HasColumnName("ACTIONdate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.Attributeinstanceid).HasColumnName("ATTRIBUTEINSTANCEID");

            //    entity.Property(e => e.Currencyid).HasColumnName("CURRENCYID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LcdId).HasColumnName("LCD_ID");

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcRate)
            //        .HasColumnName("LMC_RATE")
            //        .HasColumnType("numeric(18, 6)");

            //    entity.Property(e => e.LmcRequiredqty)
            //        .HasColumnName("LMC_REQUIREDQTY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.OfsverId).HasColumnName("OFSVer_ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.Poid).HasColumnName("POID");

            //    entity.Property(e => e.Unitid).HasColumnName("UNITID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<LcCiCashItem>(entity =>
            //{
            //    entity.HasKey(e => e.LciId);

            //    entity.ToTable("LC_CI_CASH_ITEM");

            //    entity.Property(e => e.LciId).HasColumnName("LCI_ID");

            //    entity.Property(e => e.LcdId).HasColumnName("LCD_ID");

            //    entity.Property(e => e.LciAttributeinstanceid).HasColumnName("LCI_ATTRIBUTEINSTANCEID");

            //    entity.Property(e => e.LciItemId).HasColumnName("LCI_ITEM_ID");

            //    entity.Property(e => e.LciQuantity)
            //        .HasColumnName("LCI_QUANTITY")
            //        .HasColumnType("numeric(18, 8)");

            //    entity.Property(e => e.LciUnit).HasColumnName("LCI_UNIT");

            //    entity.Property(e => e.LciUnitprice)
            //        .HasColumnName("LCI_UNITPRICE")
            //        .HasColumnType("numeric(18, 8)");

            //    entity.Property(e => e.LfpId).HasColumnName("LFP_ID");
            //});

            //modelBuilder.Entity<LcCmCashMain>(entity =>
            //{
            //    entity.HasKey(e => e.LcmId);

            //    entity.ToTable("LC_CM_CASH_MAIN");

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LcmBuyerid).HasColumnName("LCM_BUYERID");

            //    entity.Property(e => e.LcmCode)
            //        .IsRequired()
            //        .HasColumnName("LCM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCompanybankId).HasColumnName("LCM_COMPANYBANK_ID");

            //    entity.Property(e => e.LcmDateofexpiry)
            //        .HasColumnName("LCM_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmDateofissuance)
            //        .HasColumnName("LCM_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmExpirycityid).HasColumnName("LCM_EXPIRYCITYID");

            //    entity.Property(e => e.LcmIssuancecityid).HasColumnName("LCM_ISSUANCECITYID");

            //    entity.Property(e => e.LcmItemId).HasColumnName("LCM_ITEM_ID");

            //    entity.Property(e => e.LcmLastmoddate)
            //        .HasColumnName("LCM_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmLccondition).HasColumnName("LCM_LCCONDITION");

            //    entity.Property(e => e.LcmModuserid).HasColumnName("LCM_MODUSERID");

            //    entity.Property(e => e.LcmVendorId).HasColumnName("LCM_VENDOR_ID");
            //});

            //modelBuilder.Entity<LcCmCashMaster>(entity =>
            //{
            //    entity.HasKey(e => e.LcmId);

            //    entity.ToTable("LC_CM_CASH_MASTER");

            //    entity.HasIndex(e => new { e.LomId, e.LcmCompanyId })
            //        .HasName("_dta_index_LC_CM_CASH_MASTER_8_931234818__K7_33");

            //    entity.HasIndex(e => new { e.LcmVendorId, e.LcmBankno, e.LcmItemid, e.LcmId })
            //        .HasName("_dta_index_LC_CM_CASH_MASTER_8_931234818__K6_K29_K5_K1");

            //    entity.HasIndex(e => new { e.LcmCode, e.LcmVendorId, e.LcmCompanyId, e.LcmBankno, e.LcmId, e.LcmCompanybankId })
            //        .HasName("_dta_index_LC_CM_CASH_MASTER_8_931234818__K6_K7_K29_K1_K8_2");

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.HsodeId).HasColumnName("HSODE_ID");

            //    entity.Property(e => e.LcmBankLcdate)
            //        .HasColumnName("LCM_BankLCDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LcmBankaccountid).HasColumnName("LCM_BANKACCOUNTID");

            //    entity.Property(e => e.LcmBankno)
            //        .HasColumnName("LCM_BANKNO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCode)
            //        .IsRequired()
            //        .HasColumnName("LCM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCompanyId).HasColumnName("LCM_COMPANY_ID");

            //    entity.Property(e => e.LcmCompanybankId).HasColumnName("LCM_COMPANYBANK_ID");

            //    entity.Property(e => e.LcmConditions)
            //        .HasColumnName("LCM_CONDITIONS")
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmContryOrigin)
            //        .HasColumnName("LCM_CONTRY_ORIGIN")
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCreationdate)
            //        .HasColumnName("LCM_CREATIONDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmCreationuserid).HasColumnName("LCM_CREATIONUSERID");

            //    entity.Property(e => e.LcmDateofexpiry)
            //        .HasColumnName("LCM_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmDateofissuance)
            //        .HasColumnName("LCM_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmDateofshipment)
            //        .HasColumnName("LCM_DATEOFSHIPMENT")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmExpirycityid).HasColumnName("LCM_EXPIRYCITYID");

            //    entity.Property(e => e.LcmFooter)
            //        .HasColumnName("LCM_FOOTER")
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmHeader)
            //        .HasColumnName("LCM_HEADER")
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmHscode)
            //        .IsRequired()
            //        .HasColumnName("LCM_HSCODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmInssurancecom)
            //        .IsRequired()
            //        .HasColumnName("LCM_INSSURANCECOM")
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmInssurancecomadd)
            //        .IsRequired()
            //        .HasColumnName("LCM_INSSURANCECOMADD")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmInssurancecomnoteno)
            //        .IsRequired()
            //        .HasColumnName("LCM_INSSURANCECOMNOTENO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmInterest)
            //        .HasColumnName("LCM_INTEREST")
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmIrcno)
            //        .IsRequired()
            //        .HasColumnName("LCM_IRCNO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmIssuancecityid).HasColumnName("LCM_ISSUANCECITYID");

            //    entity.Property(e => e.LcmItemid).HasColumnName("LCM_ITEMID");

            //    entity.Property(e => e.LcmLastmoddate)
            //        .HasColumnName("LCM_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmLcano)
            //        .IsRequired()
            //        .HasColumnName("LCM_LCANO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmLccondition).HasColumnName("LCM_LCCONDITION");

            //    entity.Property(e => e.LcmMapstatus)
            //        .HasColumnName("LCM_MAPSTATUS")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LcmModofshipment)
            //        .HasColumnName("LCM_MODOFSHIPMENT")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmModuserid).HasColumnName("LCM_MODUSERID");

            //    entity.Property(e => e.LcmPaymentTerms)
            //        .HasColumnName("LCM_PAYMENT_TERMS")
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmPivalue)
            //        .HasColumnName("LCM_PIValue")
            //        .HasColumnType("decimal(18, 6)");

            //    entity.Property(e => e.LcmPortofdisscharge)
            //        .IsRequired()
            //        .HasColumnName("LCM_PORTOFDISSCHARGE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmPortofshipment)
            //        .HasColumnName("LCM_PORTOFSHIPMENT")
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmSpecialcomments)
            //        .HasColumnName("LCM_SPECIALCOMMENTS")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmVendorId).HasColumnName("LCM_VENDOR_ID");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");
            //});

            //modelBuilder.Entity<LcCmCashMasterDeleted>(entity =>
            //{
            //    entity.ToTable("LC_CM_CASH_MASTER_DELETED");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ActionDate).HasColumnType("datetime");

            //    entity.Property(e => e.HsodeId).HasColumnName("HSODE_ID");

            //    entity.Property(e => e.LcmBankaccountid).HasColumnName("LCM_BANKACCOUNTID");

            //    entity.Property(e => e.LcmBankno)
            //        .HasColumnName("LCM_BANKNO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCode)
            //        .IsRequired()
            //        .HasColumnName("LCM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCompanyId).HasColumnName("LCM_COMPANY_ID");

            //    entity.Property(e => e.LcmCompanybankId).HasColumnName("LCM_COMPANYBANK_ID");

            //    entity.Property(e => e.LcmContryOrigin)
            //        .HasColumnName("LCM_CONTRY_ORIGIN")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmCreationdate)
            //        .HasColumnName("LCM_CREATIONDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmCreationuserid).HasColumnName("LCM_CREATIONUSERID");

            //    entity.Property(e => e.LcmDateofexpiry)
            //        .HasColumnName("LCM_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmDateofissuance)
            //        .HasColumnName("LCM_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmExpirycityid).HasColumnName("LCM_EXPIRYCITYID");

            //    entity.Property(e => e.LcmHscode)
            //        .IsRequired()
            //        .HasColumnName("LCM_HSCODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LcmInssurancecom)
            //        .IsRequired()
            //        .HasColumnName("LCM_INSSURANCECOM")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmInssurancecomadd)
            //        .IsRequired()
            //        .HasColumnName("LCM_INSSURANCECOMADD")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmInssurancecomnoteno)
            //        .IsRequired()
            //        .HasColumnName("LCM_INSSURANCECOMNOTENO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmIrcno)
            //        .IsRequired()
            //        .HasColumnName("LCM_IRCNO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmIssuancecityid).HasColumnName("LCM_ISSUANCECITYID");

            //    entity.Property(e => e.LcmItemid).HasColumnName("LCM_ITEMID");

            //    entity.Property(e => e.LcmLastmoddate)
            //        .HasColumnName("LCM_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcmLcano)
            //        .IsRequired()
            //        .HasColumnName("LCM_LCANO")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmLccondition).HasColumnName("LCM_LCCONDITION");

            //    entity.Property(e => e.LcmMapstatus).HasColumnName("LCM_MAPSTATUS");

            //    entity.Property(e => e.LcmModofshipment)
            //        .HasColumnName("LCM_MODOFSHIPMENT")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmModuserid).HasColumnName("LCM_MODUSERID");

            //    entity.Property(e => e.LcmPortofdisscharge)
            //        .IsRequired()
            //        .HasColumnName("LCM_PORTOFDISSCHARGE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmPortofshipment)
            //        .HasColumnName("LCM_PORTOFSHIPMENT")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmSpecialcomments)
            //        .HasColumnName("LCM_SPECIALCOMMENTS")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcmVendorId).HasColumnName("LCM_VENDOR_ID");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.Property(e => e.UserId).HasColumnName("USER_ID");
            //});

            //modelBuilder.Entity<LcContactamendment>(entity =>
            //{
            //    entity.ToTable("LC_CONTACTAMENDMENT");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.AmndBtbper)
            //        .HasColumnName("AMND_BTBPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndDyesper)
            //        .HasColumnName("AMND_DYESPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndFabricdyeper)
            //        .HasColumnName("AMND_FABRICDYEPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndKnitper)
            //        .HasColumnName("AMND_KNITPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndOtherper)
            //        .HasColumnName("AMND_OTHERPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndPrintper)
            //        .HasColumnName("AMND_PRINTPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndQty)
            //        .HasColumnName("AMND_QTY")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.AmndTrimper)
            //        .HasColumnName("AMND_TRIMPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndUserid).HasColumnName("AMND_USERID");

            //    entity.Property(e => e.AmndValue)
            //        .HasColumnName("AMND_VALUE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.AmndYarnper)
            //        .HasColumnName("AMND_YARNPER")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.Date)
            //        .HasColumnName("DATE")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LomId).HasColumnName("LOM-ID");
            //});

            //modelBuilder.Entity<LcCpCashPurchaseorders>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_CP_CASH_PURCHASEORDERS");

            //    entity.HasIndex(e => new { e.LcmId, e.LcpPoid })
            //        .HasName("_dta_index_LC_CP_CASH_PURCHASEORDERS_8_659233849__K2_K3");

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LcpConversionrate)
            //        .HasColumnName("LCP_CONVERSIONRATE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcpCurrencyid).HasColumnName("LCP_CURRENCYID");

            //    entity.Property(e => e.LcpId)
            //        .HasColumnName("LCP_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LcpPidate)
            //        .HasColumnName("LCP_PIDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcpPoid).HasColumnName("LCP_POID");

            //    entity.Property(e => e.LcpQuantity)
            //        .HasColumnName("LCP_QUANTITY")
            //        .HasColumnType("decimal(18, 6)");

            //    entity.Property(e => e.LcpRate)
            //        .HasColumnName("LCP_RATE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcpVpi)
            //        .IsRequired()
            //        .HasColumnName("LCP_VPI")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcCpCashPurchaseordersDeleted>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_CP_CASH_PURCHASEORDERS_DELETED");

            //    entity.Property(e => e.ActionDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LcpConversionrate)
            //        .HasColumnName("LCP_CONVERSIONRATE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcpCurrencyid).HasColumnName("LCP_CURRENCYID");

            //    entity.Property(e => e.LcpId).HasColumnName("LCP_ID");

            //    entity.Property(e => e.LcpPidate)
            //        .HasColumnName("LCP_PIDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcpPoid).HasColumnName("LCP_POID");

            //    entity.Property(e => e.LcpQuantity)
            //        .HasColumnName("LCP_QUANTITY")
            //        .HasColumnType("decimal(18, 6)");

            //    entity.Property(e => e.LcpRate)
            //        .HasColumnName("LCP_RATE")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcpVpi)
            //        .IsRequired()
            //        .HasColumnName("LCP_VPI")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("USER_ID");
            //});

            //modelBuilder.Entity<LcDebug>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_Debug");

            //    entity.Property(e => e.Did)
            //        .HasColumnName("DID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Tbl)
            //        .HasColumnName("TBL")
            //        .HasMaxLength(80)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Xml)
            //        .HasColumnName("XML")
            //        .HasColumnType("xml");
            //});

            //modelBuilder.Entity<LcFpManufacturefabricPi>(entity =>
            //{
            //    entity.HasKey(e => e.LfpId);

            //    entity.ToTable("LC_FP_MANUFACTUREFABRIC_PI");

            //    entity.Property(e => e.LfpId)
            //        .HasColumnName("LFP_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LfpOrdersheetfabricid).HasColumnName("LFP_ORDERSHEETFABRICID");

            //    entity.Property(e => e.LfpRequiredquantity)
            //        .HasColumnName("LFP_REQUIREDQUANTITY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LmpId).HasColumnName("LMP_ID");

            //    entity.HasOne(d => d.LfpOrdersheetfabric)
            //        .WithMany(p => p.LcFpManufacturefabricPi)
            //        .HasForeignKey(d => d.LfpOrdersheetfabricid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LC_FP_MANUFACTUREFABRIC_PI_QRM_OrderSheetFabrics");
            //});

            //modelBuilder.Entity<LcItem>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_Item");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ItemId).HasColumnName("Item_ID");
            //});

            //modelBuilder.Entity<LcLcmasterSpecs>(entity =>
            //{
            //    entity.ToTable("LC_LCMaster_Specs");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LctypeId).HasColumnName("LCTypeID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<LcLctypeSetup>(entity =>
            //{
            //    entity.ToTable("LC_LCType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.DefaultType).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcLmLcMap>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_LM_LC_MAP");

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LlmAtins).HasColumnName("LLM_ATINS");

            //    entity.Property(e => e.LlmId)
            //        .HasColumnName("LLM_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LlmMaptype).HasColumnName("LLM_MAPTYPE");

            //    entity.Property(e => e.LlmPartial).HasColumnName("LLM_PARTIAL");
            //});

            //modelBuilder.Entity<LcLog>(entity =>
            //{
            //    entity.ToTable("LC_Log");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ActionPerformed)
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DateTime)
            //        .HasColumnName("Date&Time")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.UserId)
            //        .HasColumnName("UserID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ValueSaved)
            //        .HasColumnName("valueSaved")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Xml)
            //        .HasColumnName("xml")
            //        .HasColumnType("xml");
            //});

            //modelBuilder.Entity<LcLsLcStatus>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_LS_LC_STATUS");

            //    entity.Property(e => e.LlsDescription)
            //        .IsRequired()
            //        .HasColumnName("LLS_Description")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LlsId).HasColumnName("LLS_ID");
            //});

            //modelBuilder.Entity<LcMcMasterChild>(entity =>
            //{
            //    entity.HasKey(e => e.LmcId);

            //    entity.ToTable("LC_MC_MASTER_CHILD");

            //    entity.HasIndex(e => e.LomId)
            //        .HasName("_dta_index_LC_MC_MASTER_CHILD_8_115231911__K2");

            //    entity.HasIndex(e => new { e.LmcId, e.LmcLcno, e.LmcVendorId })
            //        .HasName("_dta_index_LC_MC_MASTER_CHILD_8_115231911__K7_1_4");

            //    entity.HasIndex(e => new { e.LmcId, e.LomId, e.LmcCode, e.LmcLcno, e.LmcCompanybankId, e.LmcVendorId })
            //        .HasName("_dta_index_LC_MC_MASTER_CHILD_8_115231911__K7_1_2_3_4_8");

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.HscodeId).HasColumnName("HSCODE_ID");

            //    entity.Property(e => e.LlsId).HasColumnName("LLS_ID");

            //    entity.Property(e => e.LltId).HasColumnName("LLT_ID");

            //    entity.Property(e => e.LmcBankLcdate)
            //        .HasColumnName("LMC_BankLCDate")
            //        .HasColumnType("smalldatetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.LmcBankaccountid).HasColumnName("LMC_BANKACCOUNTID");

            //    entity.Property(e => e.LmcCntryOrigin)
            //        .HasColumnName("LMC_CNTRY_ORIGIN")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcCode)
            //        .HasColumnName("LMC_CODE")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcCompanybankId).HasColumnName("LMC_COMPANYBANK_ID");

            //    entity.Property(e => e.LmcConditions)
            //        .HasColumnName("LMC_CONDITIONS")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcCreationdate)
            //        .HasColumnName("LMC_CREATIONDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcCreationuserid).HasColumnName("LMC_CREATIONUSERID");

            //    entity.Property(e => e.LmcDateofexpiry)
            //        .HasColumnName("LMC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcDateofissuance)
            //        .HasColumnName("LMC_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcExpirycityid).HasColumnName("LMC_EXPIRYCITYID");

            //    entity.Property(e => e.LmcFooter)
            //        .HasColumnName("LMC_FOOTER")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcHeader)
            //        .HasColumnName("LMC_HEADER")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcHscode)
            //        .HasColumnName("LMC_HSCODE")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcInssurancecom)
            //        .HasColumnName("LMC_INSSURANCECOM")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcInssurancecomadd)
            //        .HasColumnName("LMC_INSSURANCECOMADD")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcInssurancecomnoteno)
            //        .HasColumnName("LMC_INSSURANCECOMNOTENO")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcInterest)
            //        .HasColumnName("LMC_INTEREST")
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcIrcno)
            //        .HasColumnName("LMC_IRCNO")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcIssuancecityid).HasColumnName("LMC_ISSUANCECITYID");

            //    entity.Property(e => e.LmcLastmoddate)
            //        .HasColumnName("LMC_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcLcano)
            //        .HasColumnName("LMC_LCANO")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcLccondition).HasColumnName("LMC_LCCONDITION");

            //    entity.Property(e => e.LmcLcno)
            //        .HasColumnName("LMC_LCNO")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcModeShipment)
            //        .HasColumnName("LMC_MODE_SHIPMENT")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcModuserid).HasColumnName("LMC_MODUSERID");

            //    entity.Property(e => e.LmcPaymentTerms)
            //        .HasColumnName("LMC_PAYMENT_TERMS")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcPortShipment)
            //        .HasColumnName("LMC_PORT_SHIPMENT")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcPortofdisscharge)
            //        .HasColumnName("LMC_PORTOFDISSCHARGE")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcShipdate)
            //        .HasColumnName("LMC_SHIPDATE")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LmcSpecialcomments).HasColumnName("LMC_SPECIALCOMMENTS");

            //    entity.Property(e => e.LmcVendorId).HasColumnName("LMC_VENDOR_ID");

            //    entity.Property(e => e.LmcVendorpi)
            //        .HasColumnName("LMC_VENDORPI")
            //        .HasMaxLength(4000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcVendorpidate)
            //        .HasColumnName("LMC_VENDORPIDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcVendorpivalue)
            //        .HasColumnName("LMC_VENDORPIVALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.HasOne(d => d.LmcExpirycity)
            //        .WithMany(p => p.LcMcMasterChildLmcExpirycity)
            //        .HasForeignKey(d => d.LmcExpirycityid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LC_MC_MASTER_CHILD_City_Setup1");

            //    entity.HasOne(d => d.LmcIssuancecity)
            //        .WithMany(p => p.LcMcMasterChildLmcIssuancecity)
            //        .HasForeignKey(d => d.LmcIssuancecityid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LC_MC_MASTER_CHILD_City_Setup");

            //    entity.HasOne(d => d.LmcModuser)
            //        .WithMany(p => p.LcMcMasterChild)
            //        .HasForeignKey(d => d.LmcModuserid)
            //        .HasConstraintName("FK_LC_MC_MASTER_CHILD_User_Setup");

            //    entity.HasOne(d => d.Lom)
            //        .WithMany(p => p.LcMcMasterChild)
            //        .HasForeignKey(d => d.LomId)
            //        .HasConstraintName("FK_LC_MC_MASTER_CHILD_LC_OM_ORDER_MASTER");
            //});

            //modelBuilder.Entity<LcMcMasterChildDeleted>(entity =>
            //{
            //    entity.ToTable("LC_MC_MASTER_CHILD_DELETED");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Actiondate)
            //        .HasColumnName("ACTIONdate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.HscodeId).HasColumnName("HSCODE_ID");

            //    entity.Property(e => e.LlsId).HasColumnName("LLS_ID");

            //    entity.Property(e => e.LltId).HasColumnName("LLT_ID");

            //    entity.Property(e => e.LmcBankaccountid).HasColumnName("LMC_BANKACCOUNTID");

            //    entity.Property(e => e.LmcCntryOrigin)
            //        .HasColumnName("LMC_CNTRY_ORIGIN")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcCode)
            //        .HasColumnName("LMC_CODE")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcCompanybankId).HasColumnName("LMC_COMPANYBANK_ID");

            //    entity.Property(e => e.LmcConditions)
            //        .HasColumnName("LMC_CONDITIONS")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcCreationdate)
            //        .HasColumnName("LMC_CREATIONDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcCreationuserid).HasColumnName("LMC_CREATIONUSERID");

            //    entity.Property(e => e.LmcDateofexpiry)
            //        .HasColumnName("LMC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcDateofissuance)
            //        .HasColumnName("LMC_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcExpirycityid).HasColumnName("LMC_EXPIRYCITYID");

            //    entity.Property(e => e.LmcFooter)
            //        .HasColumnName("LMC_FOOTER")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcHeader)
            //        .HasColumnName("LMC_HEADER")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcHscode)
            //        .HasColumnName("LMC_HSCODE")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcInssurancecom)
            //        .HasColumnName("LMC_INSSURANCECOM")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcInssurancecomadd)
            //        .HasColumnName("LMC_INSSURANCECOMADD")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcInssurancecomnoteno)
            //        .HasColumnName("LMC_INSSURANCECOMNOTENO")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcIrcno)
            //        .HasColumnName("LMC_IRCNO")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcIssuancecityid).HasColumnName("LMC_ISSUANCECITYID");

            //    entity.Property(e => e.LmcLastmoddate)
            //        .HasColumnName("LMC_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcLcano)
            //        .HasColumnName("LMC_LCANO")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcLccondition).HasColumnName("LMC_LCCONDITION");

            //    entity.Property(e => e.LmcLcno)
            //        .HasColumnName("LMC_LCNO")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcModeShipment)
            //        .HasColumnName("LMC_MODE_SHIPMENT")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcModuserid).HasColumnName("LMC_MODUSERID");

            //    entity.Property(e => e.LmcPaymentTerms)
            //        .HasColumnName("LMC_PAYMENT_TERMS")
            //        .HasColumnType("text");

            //    entity.Property(e => e.LmcPortShipment)
            //        .HasColumnName("LMC_PORT_SHIPMENT")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcPortofdisscharge)
            //        .HasColumnName("LMC_PORTOFDISSCHARGE")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcSpecialcomments).HasColumnName("LMC_SPECIALCOMMENTS");

            //    entity.Property(e => e.LmcVendorId).HasColumnName("LMC_VENDOR_ID");

            //    entity.Property(e => e.LmcVendorpi)
            //        .HasColumnName("LMC_VENDORPI")
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmcVendorpidate)
            //        .HasColumnName("LMC_VENDORPIDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcVendorpivalue)
            //        .HasColumnName("LMC_VENDORPIVALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});



            //modelBuilder.Entity<LcMomMegaOrderMaster>(entity =>
            //{
            //    entity.ToTable("LC_MOM_MEGA_ORDER_MASTER");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.LbsId).HasColumnName("LBS_ID");

            //    entity.Property(e => e.LmomCreationdate)
            //        .HasColumnName("LMOM_CREATIONDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmomId).HasColumnName("LMOM_ID");

            //    entity.Property(e => e.LmtId).HasColumnName("LMT_ID");

            //    entity.Property(e => e.LomBalancequantity)
            //        .HasColumnName("LOM_BALANCEQUANTITY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomBuyerbank)
            //        .IsRequired()
            //        .HasColumnName("LOM_BUYERBANK")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LomBuyerid).HasColumnName("LOM_BUYERID");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LomCompanyId).HasColumnName("LOM_COMPANY_ID");

            //    entity.Property(e => e.LomCompanybankId).HasColumnName("LOM_COMPANYBANK_ID");

            //    entity.Property(e => e.LomCompanybankaccountId).HasColumnName("LOM_COMPANYBANKACCOUNT_ID");

            //    entity.Property(e => e.LomCurrencyid).HasColumnName("LOM_CURRENCYID");

            //    entity.Property(e => e.LomDateofexpiry)
            //        .HasColumnName("LOM_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LomDateofissuance)
            //        .HasColumnName("LOM_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LomExpirycityid).HasColumnName("LOM_EXPIRYCITYID");

            //    entity.Property(e => e.LomForeignbuyinghouseper).HasColumnName("LOM_FOREIGNBUYINGHOUSEPER");

            //    entity.Property(e => e.LomGooddescription)
            //        .HasColumnName("LOM_GOODDESCRIPTION")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.Property(e => e.LomIspartialshipment).HasColumnName("LOM_ISPARTIALSHIPMENT");

            //    entity.Property(e => e.LomIssuancecityid).HasColumnName("LOM_ISSUANCECITYID");

            //    entity.Property(e => e.LomLastmoddate)
            //        .HasColumnName("LOM_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LomLocalbuyinghouseper).HasColumnName("LOM_LOCALBUYINGHOUSEPER");

            //    entity.Property(e => e.LomMiscellaneousper).HasColumnName("LOM_MISCELLANEOUSPER");

            //    entity.Property(e => e.LomModuserid).HasColumnName("LOM_MODUSERID");

            //    entity.Property(e => e.LomQuantity)
            //        .HasColumnName("LOM_QUANTITY")
            //        .HasColumnType("numeric(18, 0)");

            //    entity.Property(e => e.LomTechcom).HasColumnName("LOM_TECHCOM");

            //    entity.Property(e => e.LomTransactionmode)
            //        .HasColumnName("LOM_TRANSACTIONMODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LomUnitprice).HasColumnName("LOM_UNITPRICE");

            //    entity.Property(e => e.LomValue)
            //        .HasColumnName("LOM_VALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomViashipment).HasColumnName("LOM_VIASHIPMENT");

            //    entity.Property(e => e.LtdId).HasColumnName("LTD_ID");
            //});

            //modelBuilder.Entity<LcMpManufactureitemPi>(entity =>
            //{
            //    entity.HasKey(e => e.LmpId);

            //    entity.ToTable("LC_MP_MANUFACTUREITEM_PI");

            //    entity.Property(e => e.LmpId)
            //        .HasColumnName("LMP_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LmpCode)
            //        .IsRequired()
            //        .HasColumnName("LMP_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LpoId).HasColumnName("LPO_ID");
            //});

            //modelBuilder.Entity<LcMtMasterType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_MT_MASTER_TYPE");

            //    entity.Property(e => e.LmtDesc)
            //        .IsRequired()
            //        .HasColumnName("LMT_DESC")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LmtId)
            //        .HasColumnName("LMT_ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LcOmOrderMap>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_OM_ORDER_MAP");

            //    entity.Property(e => e.LomCurrentquantity)
            //        .HasColumnName("LOM_CURRENTQUANTITY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomId)
            //        .HasColumnName("LOM_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LscId).HasColumnName("LSC_ID");

            //    entity.Property(e => e.Orderid).HasColumnName("ORDERID");
            //});

            //modelBuilder.Entity<LcOmOrderMaster>(entity =>
            //{
            //    entity.HasKey(e => e.LomId);

            //    entity.ToTable("LC_OM_ORDER_MASTER");

            //    entity.HasIndex(e => e.LomCompanyId)
            //        .HasName("_dta_index_LC_OM_ORDER_MASTER_8_554185470__K9");

            //    entity.HasIndex(e => new { e.LomId, e.LomCode, e.LomCompanyId, e.LomBuyerid })
            //        .HasName("_dta_index_LC_OM_ORDER_MASTER_8_554185470__K9_K6_1_2");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.Property(e => e.LbsId).HasColumnName("LBS_ID");

            //    entity.Property(e => e.LmtId).HasColumnName("LMT_ID");

            //    entity.Property(e => e.LomBalancequantity)
            //        .HasColumnName("LOM_BALANCEQUANTITY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomBtbper)
            //        .HasColumnName("LOM_BTBPER")
            //        .HasDefaultValueSql("((60))");

            //    entity.Property(e => e.LomBuyerbank)
            //        .IsRequired()
            //        .HasColumnName("LOM_BUYERBANK")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LomBuyerid).HasColumnName("LOM_BUYERID");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LomCompanyId).HasColumnName("LOM_COMPANY_ID");

            //    entity.Property(e => e.LomCompanybankId).HasColumnName("LOM_COMPANYBANK_ID");

            //    entity.Property(e => e.LomCompanybankaccountId).HasColumnName("LOM_COMPANYBANKACCOUNT_ID");

            //    entity.Property(e => e.LomCurrencyid).HasColumnName("LOM_CURRENCYID");

            //    entity.Property(e => e.LomDateofexpiry)
            //        .HasColumnName("LOM_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LomDateofissuance)
            //        .HasColumnName("LOM_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LomDyesper)
            //        .HasColumnName("LOM_DYESPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LomExpirycityid).HasColumnName("LOM_EXPIRYCITYID");

            //    entity.Property(e => e.LomFabricdyeper)
            //        .HasColumnName("LOM_FABRICDYEPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LomForeignbuyinghouseper)
            //        .HasColumnName("LOM_FOREIGNBUYINGHOUSEPER")
            //        .HasColumnType("decimal(10, 2)");

            //    entity.Property(e => e.LomGooddescription)
            //        .HasColumnName("LOM_GOODDESCRIPTION")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LomIspartialshipment).HasColumnName("LOM_ISPARTIALSHIPMENT");

            //    entity.Property(e => e.LomIssuancecityid).HasColumnName("LOM_ISSUANCECITYID");

            //    entity.Property(e => e.LomKnitper)
            //        .HasColumnName("LOM_KNITPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LomLastmoddate)
            //        .HasColumnName("LOM_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LomLocalbuyinghouseper)
            //        .HasColumnName("LOM_LOCALBUYINGHOUSEPER")
            //        .HasColumnType("decimal(10, 2)");

            //    entity.Property(e => e.LomMiscellaneousper)
            //        .HasColumnName("LOM_MISCELLANEOUSPER")
            //        .HasColumnType("decimal(10, 2)");

            //    entity.Property(e => e.LomModuserid).HasColumnName("LOM_MODUSERID");

            //    entity.Property(e => e.LomOthersper)
            //        .HasColumnName("LOM_OTHERSPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LomPrintper)
            //        .HasColumnName("LOM_PRINTPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LomQuantity)
            //        .HasColumnName("LOM_QUANTITY")
            //        .HasColumnType("numeric(18, 0)");

            //    entity.Property(e => e.LomTechcom)
            //        .HasColumnName("LOM_TECHCOM")
            //        .HasColumnType("decimal(10, 2)");

            //    entity.Property(e => e.LomTransactionmode)
            //        .HasColumnName("LOM_TRANSACTIONMODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LomTrimsper)
            //        .HasColumnName("LOM_TRIMSPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LomUnitprice).HasColumnName("LOM_UNITPRICE");

            //    entity.Property(e => e.LomValue)
            //        .HasColumnName("LOM_VALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomViashipment).HasColumnName("LOM_VIASHIPMENT");

            //    entity.Property(e => e.LomYarnper)
            //        .HasColumnName("LOM_YARNPER")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.LtdId).HasColumnName("LTD_ID");
            //});

            //modelBuilder.Entity<LcOpOrdermasterPerforma>(entity =>
            //{
            //    entity.HasKey(e => e.LopId);

            //    entity.ToTable("LC_OP_ORDERMASTER_PERFORMA");

            //    entity.Property(e => e.LopId).HasColumnName("LOP_ID");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.Property(e => e.LpoId).HasColumnName("LPO_ID");

            //    entity.Property(e => e.OrderValue).HasColumnType("numeric(18, 4)");
            //});

            //modelBuilder.Entity<LcOpOrdermasterPerformaBk>(entity =>
            //{
            //    entity.HasKey(e => e.LopId);

            //    entity.ToTable("LC_OP_ORDERMASTER_PERFORMA_bk");

            //    entity.Property(e => e.LopId).HasColumnName("LOP_ID");

            //    entity.Property(e => e.LomId).HasColumnName("LOM_ID");

            //    entity.Property(e => e.LpoId).HasColumnName("LPO_ID");

            //    entity.Property(e => e.OrderValue).HasColumnType("numeric(18, 4)");
            //});

            //modelBuilder.Entity<LcOutofFlowAmmendment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_OutofFlow_Ammendment");

            //    entity.Property(e => e.LcAdate)
            //        .HasColumnName("LC_ADate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LcAid)
            //        .HasColumnName("LC_AID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LcAmmendType).HasColumnName("LC_AmmendType");

            //    entity.Property(e => e.LcCreationDate)
            //        .HasColumnName("LC_CreationDate")
            //        .HasColumnType("smalldatetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.LcId).HasColumnName("LC_ID");

            //    entity.Property(e => e.LcNewValue)
            //        .HasColumnName("LC_NewValue")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcOldValue)
            //        .HasColumnName("LC_OldValue")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pidate)
            //        .HasColumnName("PIDATE")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.Pinumber)
            //        .HasColumnName("PINumber")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Userid).HasColumnName("USERID");
            //});

            //modelBuilder.Entity<LcPiPerformaInvoice>(entity =>
            //{
            //    entity.HasKey(e => e.LpiId);

            //    entity.ToTable("LC_PI_PERFORMA_INVOICE");

            //    entity.Property(e => e.LpiId)
            //        .HasColumnName("LPI_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LpiCode)
            //        .IsRequired()
            //        .HasColumnName("LPI_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LpiDesc)
            //        .HasColumnName("LPI_DESC")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LpiLastmoddate)
            //        .HasColumnName("LPI_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LpiModuserid).HasColumnName("LPI_MODUSERID");
            //});

            //modelBuilder.Entity<LcPoPerformaOrderassociation>(entity =>
            //{
            //    entity.HasKey(e => e.LpoId);

            //    entity.ToTable("LC_PO_PERFORMA_ORDERASSOCIATION");

            //    entity.Property(e => e.LpoId)
            //        .HasColumnName("LPO_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LpiId).HasColumnName("LPI_ID");

            //    entity.Property(e => e.LpoOrderid).HasColumnName("LPO_ORDERID");
            //});

            //modelBuilder.Entity<LcPrPonumberRanges>(entity =>
            //{
            //    entity.HasKey(e => e.LprId);

            //    entity.ToTable("LC_PR_PONUMBER_RANGES");

            //    entity.Property(e => e.LprId)
            //        .HasColumnName("LPR_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LpoId).HasColumnName("LPO_ID");

            //    entity.Property(e => e.LprPorangeend).HasColumnName("LPR_PORANGEEND");

            //    entity.Property(e => e.LprPorangestart).HasColumnName("LPR_PORANGESTART");
            //});

            //modelBuilder.Entity<LcScSalesContract>(entity =>
            //{
            //    entity.HasKey(e => e.LscId)
            //        .HasName("PK_LC_SC_SALES_CONTRACT2");

            //    entity.ToTable("LC_SC_SALES_CONTRACT");

            //    entity.Property(e => e.LscId).HasColumnName("LSC_ID");

            //    entity.Property(e => e.LbsId).HasColumnName("LBS_ID");

            //    entity.Property(e => e.LscBuyerbank)
            //        .IsRequired()
            //        .HasColumnName("LSC_BUYERBANK")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LscBuyerid).HasColumnName("LSC_BUYERID");

            //    entity.Property(e => e.LscCode)
            //        .IsRequired()
            //        .HasColumnName("LSC_CODE")
            //        .HasMaxLength(15)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LscCompanyId).HasColumnName("LSC_COMPANY_ID");

            //    entity.Property(e => e.LscCompanybankId).HasColumnName("LSC_COMPANYBANK_ID");

            //    entity.Property(e => e.LscCompanybankaccountId).HasColumnName("LSC_COMPANYBANKACCOUNT_ID");

            //    entity.Property(e => e.LscCurrencyid).HasColumnName("LSC_CURRENCYID");

            //    entity.Property(e => e.LscDateofexpiry)
            //        .HasColumnName("LSC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LscDateofissuance)
            //        .HasColumnName("LSC_DATEOFISSUANCE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LscExpirycityid).HasColumnName("LSC_EXPIRYCITYID");

            //    entity.Property(e => e.LscGoodsdescription)
            //        .HasColumnName("LSC_GOODSDESCRIPTION")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.LscIspartialshipment).HasColumnName("LSC_ISPARTIALSHIPMENT");

            //    entity.Property(e => e.LscIssuancecityid).HasColumnName("LSC_ISSUANCECITYID");

            //    entity.Property(e => e.LscIsviashipment).HasColumnName("LSC_ISVIASHIPMENT");

            //    entity.Property(e => e.LscLastmoddate)
            //        .HasColumnName("LSC_LASTMODDATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LscModuserid).HasColumnName("LSC_MODUSERID");

            //    entity.Property(e => e.LscOrderquantity)
            //        .HasColumnName("LSC_ORDERQUANTITY")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LscOrdervalue)
            //        .HasColumnName("LSC_ORDERVALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LscTransactionmode)
            //        .HasColumnName("LSC_TRANSACTIONMODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcTdTypeDependency>(entity =>
            //{
            //    entity.HasKey(e => e.LtdId);

            //    entity.ToTable("LC_TD_TYPE_DEPENDENCY");

            //    entity.Property(e => e.LtdId)
            //        .HasColumnName("LTD_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LtdName)
            //        .IsRequired()
            //        .HasColumnName("LTD_NAME")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LtsId).HasColumnName("LTS_ID");

            //    entity.HasOne(d => d.Lts)
            //        .WithMany(p => p.LcTdTypeDependency)
            //        .HasForeignKey(d => d.LtsId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LC_TD_TYPE_DEPENDENCY_LC_TS_TYPE_SETUP");
            //});

            //modelBuilder.Entity<LcTemp>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_TEMP");

            //    entity.Property(e => e.C1)
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcTsTypeSetup>(entity =>
            //{
            //    entity.HasKey(e => e.LtsId);

            //    entity.ToTable("LC_TS_TYPE_SETUP");

            //    entity.Property(e => e.LtsId)
            //        .HasColumnName("LTS_ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.LtsName)
            //        .IsRequired()
            //        .HasColumnName("LTS_NAME")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LcUserRightMap>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LC_UserRightMap");

            //    entity.Property(e => e.RightsId).HasColumnName("RightsID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.HasOne(d => d.Rights)
            //        .WithMany(p => p.LcUserRightMap)
            //        .HasForeignKey(d => d.RightsId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_LC_UserRightMap_LC_UserRights");
            //});

            //modelBuilder.Entity<LcUserRights>(entity =>
            //{
            //    entity.ToTable("LC_UserRights");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LctypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LCType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LdMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Ldid);

            //    entity.ToTable("LD_Master");

            //    entity.Property(e => e.Ldid).HasColumnName("LDID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Composition).IsUnicode(false);

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm)
            //        .HasColumnName("GSM")
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsmba).HasColumnName("GSMBA");

            //    entity.Property(e => e.Hash).IsUnicode(false);

            //    entity.Property(e => e.LabDipNo)
            //        .IsRequired()
            //        .IsUnicode(false);

            //    entity.Property(e => e.PantoneNo).IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.SubmitDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<LdRcpMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Rcpid);

            //    entity.ToTable("LD_RCP_Master");

            //    entity.Property(e => e.Rcpid).HasColumnName("RCPID");

            //    entity.Property(e => e.ApproveDate).HasColumnType("datetime");

            //    entity.Property(e => e.Comments).HasColumnType("text");

            //    entity.Property(e => e.Ldid).HasColumnName("LDID");

            //    entity.Property(e => e.Rcpname)
            //        .IsRequired()
            //        .HasColumnName("RCPName")
            //        .IsUnicode(false);

            //    entity.Property(e => e.SubmitDate).HasColumnType("datetime");

            //    entity.Property(e => e.Usrid).HasColumnName("USRID");
            //});

            //modelBuilder.Entity<LeatherFinishTypesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LeatherFinishTypes_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LeatherMeasurementsSetup>(entity =>
            //{
            //    entity.ToTable("LeatherMeasurements_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<LeatherQualitySetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LeatherQuality_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LeatherSkinSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LeatherSkin_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LeatherSpecificationSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationSetupId).HasColumnName("FabricSpecificationSetupID");

            //    entity.Property(e => e.LeatherQualityId).HasColumnName("LeatherQualityID");

            //    entity.Property(e => e.LeatherSkinId).HasColumnName("LeatherSkinID");

            //    entity.Property(e => e.LeatherTypeId).HasColumnName("LeatherTypeID");

            //    entity.Property(e => e.MaterialThickness)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MaterialTypeId).HasColumnName("MaterialTypeID");

            //    entity.Property(e => e.RexeneSupplierCodeId).HasColumnName("RexeneSupplierCodeID");
            //});

            //modelBuilder.Entity<LeatherThicknessSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LeatherThickness_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<LeatherTrimSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.LeatherQualityId).HasColumnName("LeatherQualityID");

            //    entity.Property(e => e.LeatherSkinId).HasColumnName("LeatherSkinID");

            //    entity.Property(e => e.LeatherTypeId).HasColumnName("LeatherTypeID");

            //    entity.Property(e => e.MaterialThickness)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MaterialTypeId).HasColumnName("MaterialTypeID");

            //    entity.Property(e => e.RexeneSupplierCodeId).HasColumnName("RexeneSupplierCodeID");
            //});

            //modelBuilder.Entity<LeatherTrimSpecificationSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.LeatherFinishTypeId).HasColumnName("LeatherFinishTypeID");

            //    entity.Property(e => e.LeatherSkinId).HasColumnName("LeatherSkinID");

            //    entity.Property(e => e.LeatherThicknessId).HasColumnName("LeatherThicknessID");

            //    entity.Property(e => e.LeatherTypeId).HasColumnName("LeatherTypeID");

            //    entity.Property(e => e.ThicknessMeasurementId).HasColumnName("ThicknessMeasurementID");
            //});

            //modelBuilder.Entity<LeatherTypesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LeatherTypes_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<Lotxml>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("LOTXML");

            //    entity.Property(e => e.LotXml1)
            //        .IsRequired()
            //        .HasColumnName("LotXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<MaCategory>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MA_Category");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<MaElement>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MA_Element");

            //    entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DescriptiveId).HasColumnName("DescriptiveID");

            //    entity.Property(e => e.Htmlcode)
            //        .HasColumnName("HTMLCode")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Location)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Material)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PicturePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Size)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StatusId).HasColumnName("StatusID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TargetDate)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ThreadCount)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VariantId).HasColumnName("VariantID");
            //});

            //modelBuilder.Entity<MaReceiving>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MA_Receiving");

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MasubmissionId).HasColumnName("MASubmissionID");

            //    entity.Property(e => e.ReceivingDate).HasColumnType("datetime");

            //    entity.Property(e => e.StatusId).HasColumnName("StatusID");
            //});

            //modelBuilder.Entity<MaRecivingStatus>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MA_Reciving_Status");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<MaSubmission>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MA_Submission");

            //    entity.Property(e => e.CourierId).HasColumnName("CourierID");

            //    entity.Property(e => e.CourierNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FinalApprovalDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MaelementId).HasColumnName("MAElementID");

            //    entity.Property(e => e.SubmissionDate)
            //        .IsRequired()
            //        .HasMaxLength(15)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MachineDiameterSetup>(entity =>
            //{
            //    entity.ToTable("MachineDiameter_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MarkerMakingDispatch>(entity =>
            //{
            //    entity.ToTable("MarkerMaking_Dispatch");

            //    entity.HasIndex(e => new { e.StyleId, e.Status })
            //        .HasName("IX_MarkerMaking_Dispatch_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.FsRequirementSheetFabricsId).HasColumnName("FS_RequirementSheet_FabricsID");

            //    entity.Property(e => e.Isroll)
            //        .HasColumnName("ISRoll")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.LotNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StockId).HasColumnName("StockID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<MarkerMakingDispatchDetail>(entity =>
            //{
            //    entity.ToTable("MarkerMaking_Dispatch_Detail");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.ShellColorSetId).HasColumnName("ShellColorSetID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.Dispatch)
            //        .WithMany(p => p.MarkerMakingDispatchDetail)
            //        .HasForeignKey(d => d.DispatchId)
            //        .HasConstraintName("FK_MarkerMaking_Dispatch_Detail_MarkerMaking_Dispatch");
            //});

            //modelBuilder.Entity<MarkerMakingInvmark>(entity =>
            //{
            //    entity.HasKey(e => e.MarkerId)
            //        .HasName("PK__MarkerMaking_INV__419432CA");

            //    entity.ToTable("MarkerMaking_INVMARK");

            //    entity.HasIndex(e => e.MarkerName)
            //        .HasName("IX_MarkerMaking_INVMARK_NC");

            //    entity.Property(e => e.MarkerId)
            //        .HasColumnName("MarkerID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.CreationUser)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Efficiency).HasColumnType("decimal(18, 0)");

            //    entity.Property(e => e.FabricLmtr)
            //        .HasColumnName("FabricLMtr")
            //        .HasColumnType("decimal(18, 0)");

            //    entity.Property(e => e.FabricType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricWmtr)
            //        .HasColumnName("FabricWMtr")
            //        .HasColumnType("decimal(18, 0)");

            //    entity.Property(e => e.MarkerLmtr)
            //        .HasColumnName("MarkerLMtr")
            //        .HasColumnType("decimal(18, 0)");

            //    entity.Property(e => e.MarkerName)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MarkerStatus)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MarkerType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

            //    entity.Property(e => e.ModifiedUser)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Season)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Section)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShrinkageL).HasColumnType("decimal(18, 0)");

            //    entity.Property(e => e.ShrinkageW).HasColumnType("decimal(18, 0)");

            //    entity.Property(e => e.SpreadingType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MarkerMakingInvmarkDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MarkerMaking_INVMARK_Detail");

            //    entity.HasIndex(e => e.MarkerId)
            //        .HasName("IX_MarkerMaking_InvMark_Detail")
            //        .IsClustered();

            //    entity.Property(e => e.MarkerId).HasColumnName("MarkerID");

            //    entity.Property(e => e.SizeName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Marker)
            //        .WithMany(p => p.MarkerMakingInvmarkDetail)
            //        .HasForeignKey(d => d.MarkerId)
            //        .HasConstraintName("FK_MarkerMaking_INVMARK_Detail_MarkerMaking_INVMARK");
            //});

            //modelBuilder.Entity<MarkerMakingMarker>(entity =>
            //{
            //    entity.ToTable("MarkerMaking_Marker");

            //    entity.HasIndex(e => new { e.DispatchId, e.VersionNo })
            //        .HasName("IX_MarkerMaking_Marker_NC");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DispatchId).HasColumnName("DispatchID");

            //    entity.Property(e => e.ImageName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.InvMarkerId).HasColumnName("Inv_MarkerID");

            //    entity.Property(e => e.MachineDia).HasColumnName("MachineDIA");

            //    entity.Property(e => e.Spreading)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MarkerMakingMarkerRange>(entity =>
            //{
            //    entity.HasKey(e => e.RangeId);

            //    entity.ToTable("MarkerMaking_Marker_Range");

            //    entity.HasIndex(e => e.MarkerId)
            //        .HasName("IX_MarkerMaking_Marker_Range_NC");

            //    entity.Property(e => e.RangeId).HasColumnName("RangeID");

            //    entity.Property(e => e.MarkerId).HasColumnName("MarkerID");

            //    entity.HasOne(d => d.Marker)
            //        .WithMany(p => p.MarkerMakingMarkerRange)
            //        .HasForeignKey(d => d.MarkerId)
            //        .HasConstraintName("FK_MarkerMaking_Marker_Range_MarkerMaking_Marker");
            //});

            //modelBuilder.Entity<MarkerMakingRangeSetup>(entity =>
            //{
            //    entity.ToTable("MarkerMaking_Range_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricQtyId).HasColumnName("FabricQtyID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");
            //});

            //modelBuilder.Entity<MarkerMakingRatio>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MarkerMaking_Ratio");

            //    entity.HasIndex(e => new { e.RangeId, e.Quantity })
            //        .HasName("IX_MarkerMaking_Ratio")
            //        .IsClustered();

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.RangeId).HasColumnName("RangeID");

            //    entity.Property(e => e.ShellColorSetId).HasColumnName("ShellColorSetID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.HasOne(d => d.Range)
            //        .WithMany(p => p.MarkerMakingRatio)
            //        .HasForeignKey(d => d.RangeId)
            //        .HasConstraintName("FK_MarkerMaking_Ratio_MarkerMaking_Marker_Range");
            //});

            //modelBuilder.Entity<MaterialAdjustmentMaster>(entity =>
            //{
            //    entity.HasKey(e => e.MadjustmentMid);

            //    entity.Property(e => e.MadjustmentMid).HasColumnName("MAdjustmentMID");

            //    entity.Property(e => e.AdjustmentDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MaterialInspectionMaster>(entity =>
            //{
            //    entity.HasKey(e => e.MinspectionMid);

            //    entity.Property(e => e.MinspectionMid).HasColumnName("MInspectionMID");

            //    entity.Property(e => e.InspectionDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MaterialIssueMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Mimid);

            //    entity.Property(e => e.Mimid).HasColumnName("MIMID");

            //    entity.Property(e => e.GatePassNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IssueDate).HasColumnType("datetime");

            //    entity.Property(e => e.ReceivingPerson)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Remarks)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MaterialManagementJobItems>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.JobId).HasColumnName("JobID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.StoreId).HasColumnName("StoreID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Job)
            //        .WithMany(p => p.MaterialManagementJobItems)
            //        .HasForeignKey(d => d.JobId)
            //        .HasConstraintName("FK_MaterialManagementJobItems_SampleMIRMaterialManagement");
            //});

            //modelBuilder.Entity<MaterialOperationSetup>(entity =>
            //{
            //    entity.ToTable("MaterialOperation_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MaterialOperationVendor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MaterialOperation_Vendor");

            //    entity.Property(e => e.MaterialOperationId).HasColumnName("MaterialOperationID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.MaterialOperation)
            //        .WithMany(p => p.MaterialOperationVendor)
            //        .HasForeignKey(d => d.MaterialOperationId)
            //        .HasConstraintName("FK_MaterialOperation_Vendor_MaterialOperation_Setup");

            //    entity.HasOne(d => d.Vendor)
            //        .WithMany(p => p.MaterialOperationVendor)
            //        .HasForeignKey(d => d.VendorId)
            //        .HasConstraintName("FK_MaterialOperation_Vendor_Vendor_setup");
            //});

            //modelBuilder.Entity<MaterialPodetail>(entity =>
            //{
            //    entity.HasKey(e => e.Mpdid);

            //    entity.ToTable("MaterialPODetail");

            //    entity.Property(e => e.Mpdid).HasColumnName("MPDID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.Gst).HasColumnName("GST");

            //    entity.Property(e => e.Mpmid).HasColumnName("MPMID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SuperBomid).HasColumnName("SuperBOMID");
            //});

            //modelBuilder.Entity<MaterialPomaster>(entity =>
            //{
            //    entity.HasKey(e => e.Mpmid);

            //    entity.ToTable("MaterialPOMaster");

            //    entity.Property(e => e.Mpmid).HasColumnName("MPMID");

            //    entity.Property(e => e.BrokerId).HasColumnName("BrokerID");

            //    entity.Property(e => e.CancelDate).HasColumnType("datetime");

            //    entity.Property(e => e.CartageId).HasColumnName("CartageID");

            //    entity.Property(e => e.DestinationId).HasColumnName("DestinationID");

            //    entity.Property(e => e.ModeOfPaymentId).HasColumnName("ModeOfPaymentID");

            //    entity.Property(e => e.Podate)
            //        .HasColumnName("PODate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.Pono)
            //        .IsRequired()
            //        .HasColumnName("PONo")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RequisitionNo)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.TermsOfPaymentId).HasColumnName("TermsOfPaymentID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.ModeOfPayment)
            //        .WithMany(p => p.MaterialPomaster)
            //        .HasForeignKey(d => d.ModeOfPaymentId)
            //        .HasConstraintName("FK_MaterialPOMaster_ModeOfPayment_Setup");

            //    entity.HasOne(d => d.TermsOfPayment)
            //        .WithMany(p => p.MaterialPomaster)
            //        .HasForeignKey(d => d.TermsOfPaymentId)
            //        .HasConstraintName("FK_MaterialPOMaster_TermOfPayment_Setup");
            //});

            //modelBuilder.Entity<MaterialReceiptDetail>(entity =>
            //{
            //    entity.HasKey(e => e.Mrdid)
            //        .HasName("PK_MaterialReceipt");

            //    entity.Property(e => e.Mrdid)
            //        .HasColumnName("MRDID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Mrmid).HasColumnName("MRMID");

            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");
            //});

            //modelBuilder.Entity<MaterialReceiptMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Mrmid);

            //    entity.Property(e => e.Mrmid).HasColumnName("MRMID");

            //    entity.Property(e => e.DeliverPerson)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DeliveryChallan)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

            //    entity.Property(e => e.DriverName)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.InvoiceNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Mpmid).HasColumnName("MPMID");

            //    entity.Property(e => e.Pono)
            //        .HasColumnName("PONo")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReceiptDate).HasColumnType("datetime");

            //    entity.Property(e => e.VehicleNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Mpm)
            //        .WithMany(p => p.MaterialReceiptMaster)
            //        .HasForeignKey(d => d.Mpmid)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_MaterialReceiptMaster_MaterialPOMaster");
            //});

            //modelBuilder.Entity<MaterialReturnMaster>(entity =>
            //{
            //    entity.HasKey(e => e.MreturnMid);

            //    entity.Property(e => e.MreturnMid).HasColumnName("MReturnMID");

            //    entity.Property(e => e.Mrmid).HasColumnName("MRMID");

            //    entity.Property(e => e.OutGatePass)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Remarks)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReturnDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MaterialStatus>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Material_Status");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<MaterialStockOpeningMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Msomid)
            //        .HasName("PK_MaterialStockOpening");

            //    entity.Property(e => e.Msomid).HasColumnName("MSOMID");

            //    entity.Property(e => e.Msodate)
            //        .HasColumnName("MSODate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.ReferenceNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Remarks)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MaterialTransferMaster>(entity =>
            //{
            //    entity.HasKey(e => e.MtransferMid);

            //    entity.Property(e => e.MtransferMid).HasColumnName("MTransferMID");

            //    entity.Property(e => e.TransferDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MaterialTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MaterialType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<MeasurementScaleSetup>(entity =>
            //{
            //    entity.ToTable("MeasurementScale_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MirallocatedAtHand>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MIRAllocatedAtHand");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.DayId).HasColumnName("DayID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.HasOne(d => d.AttributeInstance)
            //        .WithMany(p => p.MirallocatedAtHand)
            //        .HasForeignKey(d => d.AttributeInstanceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_MaterialAllocatedAtHand_AttributeInstance");
            //});

            //modelBuilder.Entity<MiratHand>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MIRAtHand");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.DayId).HasColumnName("DayID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.HasOne(d => d.AttributeInstance)
            //        .WithMany(p => p.MiratHand)
            //        .HasForeignKey(d => d.AttributeInstanceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_MaterialAtHand_AttributeInstance");
            //});

            //modelBuilder.Entity<MirgrossNet>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MIRGrossNet");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.DayId).HasColumnName("DayID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.PodayId).HasColumnName("PODayID");

            //    entity.Property(e => e.SuperBomid).HasColumnName("SuperBOMID");

            //    entity.HasOne(d => d.AttributeInstance)
            //        .WithMany(p => p.MirgrossNet)
            //        .HasForeignKey(d => d.AttributeInstanceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_MIRMaterial_AttributeInstance");
            //});

            //modelBuilder.Entity<MirscheduleReceipt>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MIRScheduleReceipt");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.DayId).HasColumnName("DayID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.HasOne(d => d.AttributeInstance)
            //        .WithMany(p => p.MirscheduleReceipt)
            //        .HasForeignKey(d => d.AttributeInstanceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_MaterialScheduleReceipt_AttributeInstance");
            //});

            //modelBuilder.Entity<MmdestinationSetup>(entity =>
            //{
            //    entity.HasKey(e => e.DestinationId)
            //        .HasName("PK_MMShipment");

            //    entity.ToTable("MMDestination_Setup");

            //    entity.Property(e => e.DestinationId).HasColumnName("DestinationID");

            //    entity.Property(e => e.DestinationDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MmnoOfPackagesSetup>(entity =>
            //{
            //    entity.HasKey(e => e.NoOfPackagesId);

            //    entity.ToTable("MMNoOfPackagesSetup");

            //    entity.Property(e => e.NoOfPackagesId).HasColumnName("NoOfPackagesID");

            //    entity.Property(e => e.NoOfPackagesDesc)
            //        .IsRequired()
            //        .HasMaxLength(5)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MmpackagingSetup>(entity =>
            //{
            //    entity.HasKey(e => e.PackagingId);

            //    entity.ToTable("MMPackagingSetup");

            //    entity.Property(e => e.PackagingId).HasColumnName("PackagingID");

            //    entity.Property(e => e.PackagingDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ModeOfPaymentSetup>(entity =>
            //{
            //    entity.HasKey(e => e.Mopid);

            //    entity.ToTable("ModeOfPayment_Setup");

            //    entity.Property(e => e.Mopid).HasColumnName("MOPID");

            //    entity.Property(e => e.Mopdesc)
            //        .IsRequired()
            //        .HasColumnName("MOPDesc")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ModelAppPrintConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AppPrintImageId).HasColumnName("AppPrintImageID");

            //    entity.Property(e => e.AppPrintSpecsXml)
            //        .HasColumnName("AppPrintSpecsXML")
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelApprovedCost>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CurrencyId).HasColumnName("CurrencyID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<ModelClassificationSetup>(entity =>
            //{
            //    entity.ToTable("ModelClassification_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ModelConsumptionSelectedElement>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ElementId).HasColumnName("ElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelCostAllowances>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AllowanceId).HasColumnName("AllowanceID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelCostAllowances)
            //        .HasForeignKey(d => d.VersionId)
            //        .HasConstraintName("FK_ModelCostAllowances_ModelCosting");
            //});

            //modelBuilder.Entity<ModelCostPercentage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<ModelCosting>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(256)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Cspcriteria).HasColumnName("CSPCriteria");

            //    entity.Property(e => e.CurrencyId)
            //        .HasColumnName("CurrencyID")
            //        .HasDefaultValueSql("(2)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VariationColorId).HasColumnName("VariationColorID");

            //    entity.Property(e => e.VariationSizeId).HasColumnName("VariationSizeID");
            //});

            //modelBuilder.Entity<ModelCostingVersions>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<ModelEmbroConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.EmbroImageId).HasColumnName("EmbroImageID");

            //    entity.Property(e => e.EmbroSpecsXml)
            //        .HasColumnName("EmbroSpecsXML")
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelEmbroCost>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.IsHandEmbro).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelEmbroCost)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelEmbroCost_ModelCosting");
            //});

            //modelBuilder.Entity<ModelFinishFabricConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabircUnitId).HasColumnName("FabircUnitID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FinishFabricSpecsXml)
            //        .HasColumnName("FinishFabricSpecsXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.Mgfcid).HasColumnName("MGFCID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelFinishFabricCost>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CompositionId).HasColumnName("CompositionID");

            //    entity.Property(e => e.ConstructionId).HasColumnName("ConstructionID");

            //    entity.Property(e => e.DenimBuyerCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimBuyerId).HasColumnName("DenimBuyerID");

            //    entity.Property(e => e.DenimWeightId).HasColumnName("DenimWeightID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FabricColorId).HasColumnName("FabricColorID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintingCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.RotaryImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.Unit)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelFinishFabricCost)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelFinishFabricCost_ModelCosting");
            //});

            //modelBuilder.Entity<ModelGreigeFabricCosting>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.FabricCompositionId).HasColumnName("FabricCompositionID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelGreigeFabricCosting)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelGreigeFabricCosting_ModelCosting");
            //});

            //modelBuilder.Entity<ModelGriegeFabricYarnsCosting>(entity =>
            //{
            //    entity.ToTable("ModelGriegeFabric_YarnsCosting");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GreigeFabricId).HasColumnName("GreigeFabricID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");

            //    entity.HasOne(d => d.GreigeFabric)
            //        .WithMany(p => p.ModelGriegeFabricYarnsCosting)
            //        .HasForeignKey(d => d.GreigeFabricId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelGriegeFabric_YarnsCosting_ModelGreigeFabricCosting");
            //});

            //modelBuilder.Entity<ModelInterlinningCosting>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.ConstructionId).HasColumnName("ConstructionID");

            //    entity.Property(e => e.InterlinningTypeId).HasColumnName("InterlinningTypeID");

            //    entity.Property(e => e.RollWidthId).HasColumnName("RollWidthID");

            //    entity.Property(e => e.SolubleTypeId).HasColumnName("SolubleTypeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<ModelOtherFabricCosting>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCodeId).HasColumnName("FabricCodeID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.VendorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelOtherFabricCosting)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelOtherFabricCosting_ModelCosting");
            //});

            //modelBuilder.Entity<ModelOtherFabricTrimConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.MaterialSpecsXml)
            //        .HasColumnName("MaterialSpecsXML")
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelPackingAcc>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.PackingTypeId).HasColumnName("PackingTypeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelPackingAcc)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelPackingAcc_ModelCosting");
            //});

            //modelBuilder.Entity<ModelPackingAccessories>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.PackingXml).HasColumnType("ntext");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelPrintConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.PrintSpecsXml)
            //        .HasColumnName("PrintSpecsXML")
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<ModelPrintingCost>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.ImageCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelPrintingCost)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelPrintingCost_ModelCosting");
            //});

            //modelBuilder.Entity<ModelSmvcosting>(entity =>
            //{
            //    entity.ToTable("ModelSMVCosting");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CostPerMinute).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.RateTypeId).HasColumnName("RateTypeID");

            //    entity.Property(e => e.Smvrate)
            //        .HasColumnName("SMVRate")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<ModelThreadConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.ThreadSpecsXml)
            //        .HasColumnName("ThreadSpecsXML")
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ModelTrimConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimImageId).HasColumnName("TrimImageID");

            //    entity.Property(e => e.TrimSpecsXml)
            //        .HasColumnName("TrimSpecsXML")
            //        .HasColumnType("ntext");
            //});

            //modelBuilder.Entity<ModelTrimCost>(entity =>
            //{
            //    entity.HasIndex(e => new { e.StyleId, e.TrimId })
            //        .HasName("INX_StyleNTrim");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CountId).HasColumnName("CountID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageCodeId).HasColumnName("ImageCodeID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.VendorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelTrimCost)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelTrimCost_ModelCosting");
            //});

            //modelBuilder.Entity<ModelWashingDetail>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.Property(e => e.WashingCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.WashingCodeId).HasColumnName("WashingCodeID");

            //    entity.Property(e => e.WashingTypeId).HasColumnName("WashingTypeID");

            //    entity.Property(e => e.WetProcessingCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.WetProcessingCodeId).HasColumnName("WetProcessingCodeID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelWashingDetail)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelWashingDetail_ModelCosting");
            //});

            //modelBuilder.Entity<ModelYarnConsumption>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorType)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");
            //});

            //modelBuilder.Entity<ModelYarnCosting>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.ColorType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.FabricYarnVendorId).HasColumnName("FabricYarnVendorID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.SupplierId).HasColumnName("SupplierID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.Property(e => e.YarnId).HasColumnName("YarnID");

            //    entity.Property(e => e.YarnQualityId).HasColumnName("YarnQualityID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.ModelYarnCosting)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ModelYarnCosting_ModelCosting");
            //});

            //modelBuilder.Entity<Modelcostingfabric>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Consumption).HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<Mrpitem>(entity =>
            //{
            //    entity.HasKey(e => e.MrpitemCode)
            //        .HasName("PK_Material");

            //    entity.ToTable("MRPItem");

            //    entity.Property(e => e.MrpitemCode)
            //        .HasColumnName("MRPItemCode")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.IssueUnit)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Mname)
            //        .IsRequired()
            //        .HasColumnName("MName")
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PurchaseUnit)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Sku).HasColumnName("SKU");

            //    entity.HasOne(d => d.SkuNavigation)
            //        .WithMany(p => p.Mrpitem)
            //        .HasForeignKey(d => d.Sku)
            //        .HasConstraintName("FK_MRPItem_MRPUnits");
            //});

            //modelBuilder.Entity<MrpitemAttributeInstance>(entity =>
            //{
            //    entity.HasKey(e => e.AttributeInstanceId)
            //        .HasName("PK_AttributeInstance");

            //    entity.ToTable("MRPItemAttributeInstance");

            //    entity.Property(e => e.AttributeInstanceId)
            //        .HasColumnName("AttributeInstanceID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Adesc)
            //        .HasColumnName("ADesc")
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<MrpitemAttributeSet>(entity =>
            //{
            //    entity.HasKey(e => e.MattributeId)
            //        .HasName("PK_MaterialAttribute");

            //    entity.ToTable("MRPItemAttributeSet");

            //    entity.Property(e => e.MattributeId).HasColumnName("MAttributeID");

            //    entity.Property(e => e.AttributeId).HasColumnName("AttributeID");

            //    entity.Property(e => e.DefaultValue)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.HasOne(d => d.Attribute)
            //        .WithMany(p => p.MrpitemAttributeSet)
            //        .HasForeignKey(d => d.AttributeId)
            //        .HasConstraintName("FK_MaterialAttribute_Attribute");
            //});

            //modelBuilder.Entity<MrpitemAttributeSetValues>(entity =>
            //{
            //    entity.HasKey(e => e.Mavid)
            //        .HasName("PK_MaterialAttributeValues");

            //    entity.ToTable("MRPItemAttributeSetValues");

            //    entity.Property(e => e.Mavid).HasColumnName("MAVID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.MattributeId).HasColumnName("MAttributeID");

            //    entity.Property(e => e.MavalueDescription)
            //        .HasColumnName("MAValueDescription")
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MavalueId)
            //        .IsRequired()
            //        .HasColumnName("MAValueID")
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.AttributeInstance)
            //        .WithMany(p => p.MrpitemAttributeSetValues)
            //        .HasForeignKey(d => d.AttributeInstanceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_MaterialAttributeValues_AttributeInstance");

            //    entity.HasOne(d => d.Mattribute)
            //        .WithMany(p => p.MrpitemAttributeSetValues)
            //        .HasForeignKey(d => d.MattributeId)
            //        .HasConstraintName("FK_MaterialAttributeValues_MaterialAttribute");
            //});

            //modelBuilder.Entity<MrpitemMasterAttribute>(entity =>
            //{
            //    entity.HasKey(e => e.AttributeId)
            //        .HasName("PK_Attribute");

            //    entity.ToTable("MRPItemMasterAttribute");

            //    entity.Property(e => e.AttributeId).HasColumnName("AttributeID");

            //    entity.Property(e => e.Aname)
            //        .IsRequired()
            //        .HasColumnName("AName")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MrpitemMovingAverage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MRPItemMovingAverage");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.HasOne(d => d.AttributeInstance)
            //        .WithMany(p => p.MrpitemMovingAverage)
            //        .HasForeignKey(d => d.AttributeInstanceId)
            //        .HasConstraintName("FK_MRPItemMovingAverage_MRPItemAttributeInstance");
            //});

            //modelBuilder.Entity<MrpitemUnits>(entity =>
            //{
            //    entity.HasKey(e => e.MrpitemUnitId);

            //    entity.ToTable("MRPItemUnits");

            //    entity.Property(e => e.MrpitemUnitId).HasColumnName("MRPItemUnitID");

            //    entity.Property(e => e.ConversiontoSku).HasColumnName("ConversiontoSKU");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.MrpunitsId).HasColumnName("MRPUnitsID");
            //});

            //modelBuilder.Entity<Mrpunits>(entity =>
            //{
            //    entity.ToTable("MRPUnits");

            //    entity.Property(e => e.MrpunitsId).HasColumnName("MRPUnitsID");

            //    entity.Property(e => e.UnitDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Mrpxml>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MRPXML");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.Mrpxml1)
            //        .IsRequired()
            //        .HasColumnName("MRPXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.Status).HasColumnName("status");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<Mss>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MSS");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<MssVersions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MSS_Versions");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DecisionStatus).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IosId).HasColumnName("IOS_ID");

            //    entity.Property(e => e.IosXml)
            //        .IsRequired()
            //        .HasColumnName("IOS_XML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<MuMenu>(entity =>
            //{
            //    entity.HasKey(e => e.MenuId);

            //    entity.ToTable("MU_Menu");

            //    entity.Property(e => e.MenuId).HasColumnName("MenuID");

            //    entity.Property(e => e.MenuName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MuMenu2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_Menu2");

            //    entity.Property(e => e.MenuId).HasColumnName("MenuID");
            //});

            //modelBuilder.Entity<MuMenuItem>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_MenuItem");

            //    entity.Property(e => e.LevelId).HasColumnName("LevelID");

            //    entity.Property(e => e.MenuId).HasColumnName("MenuID");

            //    entity.Property(e => e.MenuItemId)
            //        .HasColumnName("MenuItemID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MenuItemName)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PageId).HasColumnName("PageID");

            //    entity.Property(e => e.ParentMenuItemId).HasColumnName("ParentMenuItemID");
            //});

            //modelBuilder.Entity<MuMenuItem3>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_MenuItem3");

            //    entity.Property(e => e.LevelId).HasColumnName("LevelID");

            //    entity.Property(e => e.MenuId).HasColumnName("MenuID");

            //    entity.Property(e => e.MenuItemId).HasColumnName("MenuItemID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PageId).HasColumnName("PageID");

            //    entity.Property(e => e.ParentMenuItemId).HasColumnName("ParentMenuItemID");
            //});

            //modelBuilder.Entity<MuModule>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_Module");

            //    entity.Property(e => e.ModuleId)
            //        .HasColumnName("ModuleID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ModuleLink)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ModuleName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");
            //});

            //modelBuilder.Entity<MuModule2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_Module2");

            //    entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");
            //});

            //modelBuilder.Entity<MuPage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_Page");

            //    entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

            //    entity.Property(e => e.PageId)
            //        .HasColumnName("PageID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PageLink)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PageName)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PageTypeId).HasColumnName("PageTypeID");
            //});

            //modelBuilder.Entity<MuPage2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_Page2");

            //    entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

            //    entity.Property(e => e.PageId).HasColumnName("PageID");

            //    entity.Property(e => e.PageTypeId).HasColumnName("PageTypeID");
            //});

            //modelBuilder.Entity<MuPageNew>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_Page_New");

            //    entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

            //    entity.Property(e => e.PageId).HasColumnName("PageID");

            //    entity.Property(e => e.PageTypeId).HasColumnName("PageTypeID");
            //});

            //modelBuilder.Entity<MuPageType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_PageType");

            //    entity.Property(e => e.PageTypeId).HasColumnName("PageTypeID");

            //    entity.Property(e => e.PageTypeName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MuPageType2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_PageType2");

            //    entity.Property(e => e.PageTypeId).HasColumnName("PageTypeID");
            //});

            //modelBuilder.Entity<MuUser>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_User");

            //    entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

            //    entity.Property(e => e.LoginId)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PinCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserGroupId).HasColumnName("UserGroupID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.UserName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MuUserGroup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_UserGroup");

            //    entity.Property(e => e.UserGroupId).HasColumnName("UserGroupID");

            //    entity.Property(e => e.UserGroupName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MuUserGroup2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_UserGroup2");

            //    entity.Property(e => e.UserGroupId).HasColumnName("UserGroupID");
            //});

            //modelBuilder.Entity<MuUserPages>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("MU_UserPages");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MenuId).HasColumnName("MenuID");

            //    entity.Property(e => e.PageId).HasColumnName("PageID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<NetMeshColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.NetMeshColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_NetMeshColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.NetMeshColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_NetMeshColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.NetMeshColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_NetMeshColor_NetMeshSpecification");
            //});

            //modelBuilder.Entity<NetMeshDyeingSetup>(entity =>
            //{
            //    entity.ToTable("NetMeshDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<NetMeshImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<NetMeshImageSetup>(entity =>
            //{
            //    entity.ToTable("NetMeshImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.NetMeshImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_NetMeshImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<NetMeshPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.NetMeshPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_NetMeshPlacementInstruction_NetMeshSpecification");
            //});

            //modelBuilder.Entity<NetMeshSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");

            //    entity.HasOne(d => d.Dyed)
            //        .WithMany(p => p.NetMeshSpecification)
            //        .HasForeignKey(d => d.DyedId)
            //        .HasConstraintName("FK_NetMeshSpecification_NetMeshDyeing_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.NetMeshSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_NetMeshSpecification_NetMeshImage_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.NetMeshSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_NetMeshSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.NetMeshSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_NetMeshSpecification_SelectedTrim");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.NetMeshSpecification)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_NetMeshSpecification_NetMeshType_Setup");

            //    entity.HasOne(d => d.Width)
            //        .WithMany(p => p.NetMeshSpecification)
            //        .HasForeignKey(d => d.WidthId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_NetMeshSpecification_NetMeshWidth_Setup");
            //});

            //modelBuilder.Entity<NetMeshTypeSetup>(entity =>
            //{
            //    entity.ToTable("NetMeshType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<NetMeshWidthSetup>(entity =>
            //{
            //    entity.ToTable("NetMeshWidth_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<NewPackAssortment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PackAssortId).HasColumnName("PackAssortID");

            //    entity.Property(e => e.SizeRangeId).HasColumnName("SizeRangeID");
            //});

            //modelBuilder.Entity<OperationVendorsSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("OperationVendors_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");
            //});

            //modelBuilder.Entity<OrderAirLine>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Order_AirLine");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderAirPort>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Order_AirPort");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderAssortment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.LabelCode)
            //        .HasMaxLength(15)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShippmentPackingStyleId).HasColumnName("ShippmentPackingStyleID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.HasOne(d => d.ShippmentPackingStyle)
            //        .WithMany(p => p.OrderAssortment)
            //        .HasForeignKey(d => d.ShippmentPackingStyleId)
            //        .HasConstraintName("FK_OrderAssortment_OrderShippmentPackingStyle");
            //});

            //modelBuilder.Entity<OrderAssortmentRatio>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.SetId).HasColumnName("SetID");

            //    entity.Property(e => e.ShippmentPackingId).HasColumnName("ShippmentPackingID");

            //    entity.Property(e => e.ShippmentPackingStyleId).HasColumnName("ShippmentPackingStyleID");

            //    entity.HasOne(d => d.ShippmentPacking)
            //        .WithMany(p => p.OrderAssortmentRatio)
            //        .HasForeignKey(d => d.ShippmentPackingId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_OrderAssortmentRatio_OrderShippmentPacking");
            //});

            //modelBuilder.Entity<OrderCartonCode>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CartonCode)
            //        .IsRequired()
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CartonCodeSpecificationId).HasColumnName("CartonCodeSpecificationID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");
            //});

            //modelBuilder.Entity<OrderCartonCodeSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IsAgainstShippmentPackingStyleId).HasColumnName("IsAgainstShippmentPackingStyleID");

            //    entity.Property(e => e.ShippmentPackingStyleId).HasColumnName("ShippmentPackingStyleID");
            //});

            //modelBuilder.Entity<OrderCartonDimension>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<OrderCartonPackingAssortment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.ModelId).HasColumnName("ModelID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TotalCartonsDispatched).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.Model)
            //        .WithMany(p => p.OrderCartonPackingAssortment)
            //        .HasForeignKey(d => d.ModelId)
            //        .HasConstraintName("FK_OrderCartonPackingAssortment_OrderSelectedStyle");
            //});

            //modelBuilder.Entity<OrderCartonPrintingFace>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderCartonSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CartonPrintingFaceId).HasColumnName("CartonPrintingFaceID");

            //    entity.Property(e => e.CartonTypeId).HasColumnName("CartonTypeID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConstraintId).HasColumnName("ConstraintID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.SamplingDate).HasColumnType("datetime");

            //    entity.Property(e => e.ShipmentPackingId).HasColumnName("ShipmentPackingID");

            //    entity.Property(e => e.VersionNo).HasDefaultValueSql("(1)");
            //});

            //modelBuilder.Entity<OrderCartonType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderClosure>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Date)
            //        .HasColumnType("datetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.DomainId).HasColumnName("DomainID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<OrderClosureLog>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Date)
            //        .HasColumnType("datetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.IsDrollTransferred)
            //        .IsRequired()
            //        .HasColumnName("IsDRollTransferred")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsGrollTransferred)
            //        .IsRequired()
            //        .HasColumnName("IsGRollTransferred")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsTrimTransferred)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<OrderCollections>(entity =>
            //{
            //    entity.HasKey(e => e.OrderCollectionId);

            //    entity.Property(e => e.OrderCollectionId).HasColumnName("OrderCollectionID");

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<OrderColorRange>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ModelId).HasColumnName("ModelID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Model)
            //        .WithMany(p => p.OrderColorRange)
            //        .HasForeignKey(d => d.ModelId)
            //        .HasConstraintName("FK_OrderColorRange_OrderSelectedStyle");
            //});

            //modelBuilder.Entity<OrderDeletedAssortment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.DeletedOn).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PackingAssortmentCombinationId).HasColumnName("PackingAssortmentCombinationID");

            //    entity.Property(e => e.ShippmentId).HasColumnName("ShippmentID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<OrderDispatch>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.ModelId).HasColumnName("ModelID");
            //});

            //modelBuilder.Entity<OrderElements>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<OrderFabricDescription>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricDescription)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<OrderGarmentAssortmentOrder>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.HasIndex(e => new { e.OrderStyleId, e.ColorSetId, e.SizeSetId })
            //        .HasName("IX_OrderGarmentAssortmentOrder")
            //        .IsClustered();

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.GrossStatus).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderStyleId).HasColumnName("OrderStyleID");

            //    entity.Property(e => e.PackingTypeId).HasColumnName("PackingTypeID");

            //    entity.Property(e => e.ShippmentId).HasColumnName("ShippmentID");

            //    entity.Property(e => e.ShippmentPackingStyleId).HasColumnName("ShippmentPackingStyleID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.SuperBomid).HasColumnName("SuperBOMID");

            //    entity.Property(e => e.Value).HasColumnName("value");

            //    entity.Property(e => e.VariationColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderGarmentAssortmentOrderCountry>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("OrderGarmentAssortmentOrder_Country");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.CountryId).HasColumnName("CountryID");

            //    entity.Property(e => e.CreationDate)
            //        .HasColumnType("smalldatetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Isedited)
            //        .HasColumnName("ISEdited")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.NumberofGarments).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VariationColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Version).HasDefaultValueSql("((1))");
            //});

            //modelBuilder.Entity<OrderGarmentAssortmentOrderCountryDelLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("OrderGarmentAssortmentOrder_Country_Del_Log");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.CountryId).HasColumnName("CountryID");

            //    entity.Property(e => e.CreationDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Isedited).HasColumnName("ISEdited");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VariationColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderGarmentAssortmentOrderCountryDeletedVersion>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("OrderGarmentAssortmentOrder_Country_DeletedVersion");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.CountryId).HasColumnName("CountryID");

            //    entity.Property(e => e.CreationDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Isedited).HasColumnName("ISEdited");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VariationColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderInspectionAgency>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderInspectionAgencySetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("OrderInspectionAgency_Setup");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<OrderMasterAssortment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.ModelId).HasColumnName("ModelID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.HasOne(d => d.Model)
            //        .WithMany(p => p.OrderMasterAssortment)
            //        .HasForeignKey(d => d.ModelId)
            //        .HasConstraintName("FK_OrderMasterAssortment_OrderSelectedStyle");
            //});

            //modelBuilder.Entity<OrderPackingAssortmentCombination>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CombinationName)
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Option)
            //        .HasMaxLength(1)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PackingAssortmentInfoTypeId).HasColumnName("PackingAssortmentInfoTypeID");

            //    entity.Property(e => e.PackingTypeId).HasColumnName("PackingTypeID");
            //});

            //modelBuilder.Entity<OrderPackingAssortmentInfoType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Label)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(3)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderPackingAssortmentType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<OrderPackingType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<OrderPolyBag>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AssortmentId).HasColumnName("AssortmentID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.InquiryId).HasColumnName("InquiryID");

            //    entity.Property(e => e.VersionNo).HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<OrderPolyBagAdhesiveType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderPolyBagCode>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PolyBagCodeTypeId).HasColumnName("PolyBagCodeTypeID");

            //    entity.Property(e => e.PolyBagSpecsId).HasColumnName("PolyBagSpecsID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<OrderPolyBagCodeTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("OrderPolyBagCodeType_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(35)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderPolyBagFlapType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderPolyBagHistory>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ChangedOn).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PolyBagId).HasColumnName("PolyBagID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<OrderPolyBagImages>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderPolyBagMaterial>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderPolyBagPrintingType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(35)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderPolyBagQuantityInOrder>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PolyBagSpecsId).HasColumnName("PolyBagSpecsID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<OrderPolyBagSpecificationInOrder>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AdhesiveId).HasColumnName("AdhesiveID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FlapId).HasColumnName("FlapID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.PolyBagId).HasColumnName("PolyBagID");

            //    entity.Property(e => e.PolyBagImageId).HasColumnName("PolyBagImageID");

            //    entity.Property(e => e.PrintingId).HasColumnName("PrintingID");

            //    entity.Property(e => e.SamplingDate).HasColumnType("datetime");

            //    entity.Property(e => e.Thickness)
            //        .IsRequired()
            //        .HasMaxLength(2)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderPolyBagVendor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FlapTypeId).HasColumnName("FlapTypeID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.PrintingId).HasColumnName("PrintingID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<OrderPrice>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Lctype).HasColumnName("LCType");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<OrderPriceColorSizeWise>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderPriceId).HasColumnName("OrderPriceID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");
            //});

            //modelBuilder.Entity<OrderSelectedStyle>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CurrencyId).HasColumnName("CurrencyID");

            //    entity.Property(e => e.GarmentAssortmentCaptured).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ModelClassificationId).HasColumnName("ModelClassificationID");

            //    entity.Property(e => e.ModelNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PackingAssortmentCaptured).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.Currency)
            //        .WithMany(p => p.OrderSelectedStyle)
            //        .HasForeignKey(d => d.CurrencyId)
            //        .HasConstraintName("FK_OrderSelectedStyle_Currency_Setup");

            //    entity.HasOne(d => d.ModelClassification)
            //        .WithMany(p => p.OrderSelectedStyle)
            //        .HasForeignKey(d => d.ModelClassificationId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_OrderSelectedStyle_ModelClassification_Setup");
            //});

            //modelBuilder.Entity<OrderSelectedStyles>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<OrderShipmentMode>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<OrderShippingCity>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderShippingCountry>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderShippingLine>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderShippingPort>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<OrderShippingStateProvince>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CountryId).HasColumnName("CountryID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<OrderShippment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AgencyId).HasColumnName("AgencyID");

            //    entity.Property(e => e.AirLineId).HasColumnName("AirLineID");

            //    entity.Property(e => e.AirPortId).HasColumnName("AirPortID");

            //    entity.Property(e => e.BuyerAqlId).HasColumnName("BuyerAQlID");

            //    entity.Property(e => e.CityId).HasColumnName("CityID");

            //    entity.Property(e => e.CountryId).HasColumnName("CountryID");

            //    entity.Property(e => e.InquiryId).HasColumnName("InquiryID");

            //    entity.Property(e => e.InspectionDate).HasColumnType("datetime");

            //    entity.Property(e => e.InspectionLevel).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.Poid).HasColumnName("POID");

            //    entity.Property(e => e.ShipmentDate).HasColumnType("datetime");

            //    entity.Property(e => e.ShipmentMode).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.ShipmentTerm).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.ShippingLineId).HasColumnName("ShippingLineID");

            //    entity.Property(e => e.ShippingPortId).HasColumnName("ShippingPortID");

            //    entity.Property(e => e.VersionNo).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.WareHouseId).HasColumnName("WareHouseID");

            //    entity.HasOne(d => d.ShipmentModeNavigation)
            //        .WithMany(p => p.OrderShippment)
            //        .HasForeignKey(d => d.ShipmentMode)
            //        .HasConstraintName("FK_OrderShippment_OrderShipmentMode");

            //    entity.HasOne(d => d.ShipmentTermNavigation)
            //        .WithMany(p => p.OrderShippment)
            //        .HasForeignKey(d => d.ShipmentTerm)
            //        .HasConstraintName("FK_OrderShippment_OrderShippmentTerm_setup");
            //});

            //modelBuilder.Entity<OrderShippmentPacking>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Lcallowance).HasColumnName("LCAllowance");

            //    entity.Property(e => e.PackingAssortmentCombinationId).HasColumnName("PackingAssortmentCombinationID");

            //    entity.Property(e => e.ShippmentId).HasColumnName("ShippmentID");

            //    entity.Property(e => e.VersionNo).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.Shippment)
            //        .WithMany(p => p.OrderShippmentPacking)
            //        .HasForeignKey(d => d.ShippmentId)
            //        .HasConstraintName("FK_OrderShippmentPacking_OrderShippment");
            //});

            //modelBuilder.Entity<OrderShippmentPackingStyle>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderStyleId).HasColumnName("OrderStyleID");

            //    entity.Property(e => e.ShippmentPackingId).HasColumnName("ShippmentPackingID");

            //    entity.HasOne(d => d.ShippmentPacking)
            //        .WithMany(p => p.OrderShippmentPackingStyle)
            //        .HasForeignKey(d => d.ShippmentPackingId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_OrderShippmentPackingStyle_OrderShippmentPacking");
            //});

            //modelBuilder.Entity<OrderShippmentTermSetup>(entity =>
            //{
            //    entity.ToTable("OrderShippmentTerm_setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderSizeRange>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ModelId).HasColumnName("ModelID");

            //    entity.Property(e => e.SizeDescription)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Model)
            //        .WithMany(p => p.OrderSizeRange)
            //        .HasForeignKey(d => d.ModelId)
            //        .HasConstraintName("FK_OrderSizeRange_OrderSelectedStyle");
            //});

            //modelBuilder.Entity<OrderStats>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderStats1).HasColumnName("OrderStats");
            //});

            //modelBuilder.Entity<OrderStatusIndex>(entity =>
            //{
            //    entity.HasKey(e => e.StatusId);

            //    entity.Property(e => e.StatusId)
            //        .HasColumnName("StatusID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Color)
            //        .HasMaxLength(6)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StatusDesc)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<OrderStyleElementSetup>(entity =>
            //{
            //    entity.ToTable("OrderStyleElement_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Url)
            //        .HasColumnName("URL")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PackAccessoriesPerAssortment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<PackingAccessoriesAppearenceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesAppearence_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesAttachementMethodSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesAttachementMethod_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesColorSetup>(entity =>
            //{
            //    entity.ToTable("PackingAccessoriesColor_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PackingAccessoriesHeadPinFinishSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesHeadPinFinish_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesItemSourceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesItemSource_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesMeasurementUnitsSetup>(entity =>
            //{
            //    entity.ToTable("PackingAccessoriesMeasurementUnits_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PackingAccessoriesPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesPlacement_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesSelected>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PackingAccessoryId).HasColumnName("PackingAccessoryID");

            //    entity.Property(e => e.PackingTypeId).HasColumnName("PackingTypeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<PackingAccessoriesSetup>(entity =>
            //{
            //    entity.ToTable("PackingAccessories_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DisplayPage)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.HomePage)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsDisplay).HasColumnName("isDisplay");
            //});

            //modelBuilder.Entity<PackingAccessoriesSizeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesSize_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesStopperFinishSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesStopperFinish_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesStopperMaterialSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesStopperMaterial_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesStringMaterialSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PackingAccessoriesStringMaterial_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PackingAccessoriesTypesSetup>(entity =>
            //{
            //    entity.ToTable("PackingAccessoriesTypes_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(40)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PackingAccessoryId).HasColumnName("PackingAccessoryID");

            //    entity.HasOne(d => d.PackingAccessory)
            //        .WithMany(p => p.PackingAccessoriesTypesSetup)
            //        .HasForeignKey(d => d.PackingAccessoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PackingAccessoriesUnit_Setup_PackingAccessories_Setup");
            //});

            //modelBuilder.Entity<PackingAccessoryComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<PackingType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PalleteBuyerAssociationSetup>(entity =>
            //{
            //    entity.ToTable("PalleteBuyerAssociation_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.PalleteId).HasColumnName("PalleteID");
            //});

            //modelBuilder.Entity<Pantone>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorItalCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Htmlcode)
            //        .HasColumnName("HTMLCode")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.PalleteId).HasColumnName("PalleteID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PicturePath).HasMaxLength(255);

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(2)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<Pantone1>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorItalCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Htmlcode)
            //        .HasColumnName("HTMLCode")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PalleteId).HasColumnName("PalleteID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PicturePath).HasMaxLength(255);

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(2)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<PantoneBkMar292017>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Pantone_bkMar292017");

            //    entity.Property(e => e.ColorItalCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Htmlcode)
            //        .HasColumnName("HTMLCode")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PalleteId).HasColumnName("PalleteID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PicturePath).HasMaxLength(255);

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(2)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<PatternPieceGarmentTypeId>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PatternPieceGarmentTypeID");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PatternPieceSetupId).HasColumnName("PatternPieceSetupID");
            //});

            //modelBuilder.Entity<PatternPieceGroup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Pattern_Piece_Group");

            //    entity.Property(e => e.GroupId).ValueGeneratedOnAdd();

            //    entity.Property(e => e.GroupName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PatternPieceGroupPattern>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Pattern_Piece_Group_Pattern");

            //    entity.Property(e => e.Id).ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PatternPieceSetup>(entity =>
            //{
            //    entity.ToTable("PatternPiece_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.BodyPart)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PatternPiece)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<PatternPieceSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.PatternPieceId).HasColumnName("PatternPieceID");

            //    entity.HasOne(d => d.FabricSpecification)
            //        .WithMany(p => p.PatternPieceSpecification)
            //        .HasForeignKey(d => d.FabricSpecificationId)
            //        .HasConstraintName("FK_PatternPieceSpecification_FabricSpecification");
            //});

            //modelBuilder.Entity<Patternpiece>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("patternpiece");

            //    entity.Property(e => e.ColorParentId).HasColumnName("ColorParentID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimBuyerCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimBuyerId).HasColumnName("DenimBuyerID");

            //    entity.Property(e => e.DenimWeightId).HasColumnName("DenimWeightID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricParentId).HasColumnName("FabricParentID");

            //    entity.Property(e => e.FabricSpecificationSetupId).HasColumnName("FabricSpecificationSetupID");

            //    entity.Property(e => e.FabricTrimSelectedId).HasColumnName("FabricTrimSelectedID");

            //    entity.Property(e => e.FastnessStandardId).HasColumnName("FastnessStandardID");

            //    entity.Property(e => e.GaugeId).HasColumnName("GaugeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalleteTypeId).HasColumnName("PalleteTypeID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.Property(e => e.SizeRangeComments)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.WovenCompositionId).HasColumnName("WovenCompositionID");

            //    entity.Property(e => e.WovenConstructionId).HasColumnName("WovenConstructionID");
            //});

            //modelBuilder.Entity<PaymentModeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PaymentMode_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<PercentageMapping>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Percentage_Mapping");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<PlacementPointSequence>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.PlacementPoint)
            //        .WithMany(p => p.PlacementPointSequence)
            //        .HasForeignKey(d => d.PlacementPointId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PlacementPointSequence_PlacementPoint_Setup");

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.PlacementPointSequence)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .HasConstraintName("FK_PlacementPointSequence_SelectedElement");
            //});

            //modelBuilder.Entity<PlacementPointSequenceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PlacementPointSequence_Setup");

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.SizeChartId).HasColumnName("SizeChartID");
            //});

            //modelBuilder.Entity<PlacementPointSetup>(entity =>
            //{
            //    entity.ToTable("PlacementPoint_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.GarmentCategoryId).HasColumnName("GarmentCategoryID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(5)");
            //});

            //modelBuilder.Entity<PlacketTypeSetup>(entity =>
            //{
            //    entity.ToTable("PlacketType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PolyBag>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AssortmentId).HasColumnName("AssortmentID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.InquiryId).HasColumnName("InquiryID");

            //    entity.Property(e => e.VersionNo).HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<PolyBagAdhesiveTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagAdhesiveType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PolyBagCode>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PolyBagCodeTypeId).HasColumnName("PolyBagCodeTypeID");

            //    entity.Property(e => e.PolyBagSpecsId).HasColumnName("PolyBagSpecsID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<PolyBagCodeTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagCodeType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PolyBagFlapTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagFlapType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<PolyBagGussetSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagGusset_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PolyBagImageSetup>(entity =>
            //{
            //    entity.ToTable("PolyBagImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AdhesiveTypeId).HasColumnName("AdhesiveTypeID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.FlapTypeId).HasColumnName("FlapTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.GussetId).HasColumnName("GussetID");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.PrintingTypeId).HasColumnName("PrintingTypeID");

            //    entity.Property(e => e.ThicknessId).HasColumnName("ThicknessID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<PolyBagMaterialSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagMaterial_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PolyBagPrintLocationSetup>(entity =>
            //{
            //    entity.ToTable("PolyBagPrintLocation_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PolyBagPrintingTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagPrintingType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<PolyBagQuantityInOrder>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PolyBagSpecsId).HasColumnName("PolyBagSpecsID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<PolyBagSize>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");
            //});

            //modelBuilder.Entity<PolyBagSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AdhesiveTypeId).HasColumnName("AdhesiveTypeID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FlapTypeId).HasColumnName("FlapTypeID");

            //    entity.Property(e => e.GussetId).HasColumnName("GussetID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.PrintingTypeId).HasColumnName("PrintingTypeID");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.ThicknessId).HasColumnName("ThicknessID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VarianceTypeId).HasColumnName("VarianceTypeID");
            //});

            //modelBuilder.Entity<PolyBagSpecificationInOrder>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AdhesiveId).HasColumnName("AdhesiveID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FlapId).HasColumnName("FlapID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.PolyBagId).HasColumnName("PolyBagID");

            //    entity.Property(e => e.PolyBagImageId).HasColumnName("PolyBagImageID");

            //    entity.Property(e => e.PrintingId).HasColumnName("PrintingID");

            //    entity.Property(e => e.Thickness)
            //        .IsRequired()
            //        .HasMaxLength(2)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PolyBagThicknessSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PolyBagThickness_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<PriceTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PriceType_Setup");

            //    entity.Property(e => e.Description).HasMaxLength(50);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PrintColorTypeSetup>(entity =>
            //{
            //    entity.ToTable("PrintColorType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PrintEmbroImageCategorySetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PrintEmbroImageCategory_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PrintEmbroImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.PrintLayerId).HasColumnName("PrintLayerID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");
            //});

            //modelBuilder.Entity<PrintEmbroImageSetup>(entity =>
            //{
            //    entity.ToTable("PrintEmbroImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.EmbroCode)
            //        .HasMaxLength(15)
            //        .IsUnicode(false);

            //    entity.Property(e => e.EmbroGarmentImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.EmbroImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.EmbroTypeId).HasColumnName("EmbroTypeID");

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.OrderStyleElementId).HasColumnName("OrderStyleElementID");

            //    entity.Property(e => e.Price).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.PrintCode)
            //        .HasMaxLength(15)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintEmbroImageCategoryId).HasColumnName("PrintEmbroImageCategoryID");

            //    entity.Property(e => e.PrintEmbroImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintMethodId).HasColumnName("PrintMethodID");

            //    entity.Property(e => e.PrintStatus).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.PrintTypeId).HasColumnName("PrintTypeID");

            //    entity.HasOne(d => d.EmbroType)
            //        .WithMany(p => p.PrintEmbroImageSetup)
            //        .HasForeignKey(d => d.EmbroTypeId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_PrintEmbroImage_Setup_EmbroType_Setup");

            //    entity.HasOne(d => d.OrderStyleElement)
            //        .WithMany(p => p.PrintEmbroImageSetup)
            //        .HasForeignKey(d => d.OrderStyleElementId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PrintEmbroImage_Setup_OrderStyleElement_Setup");

            //    entity.HasOne(d => d.PrintMethod)
            //        .WithMany(p => p.PrintEmbroImageSetup)
            //        .HasForeignKey(d => d.PrintMethodId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_PrintEmbroImage_Setup_PrintMethod_Setup");

            //    entity.HasOne(d => d.PrintType)
            //        .WithMany(p => p.PrintEmbroImageSetup)
            //        .HasForeignKey(d => d.PrintTypeId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_PrintEmbroImage_Setup_PrintingType_Setup");
            //});

            //modelBuilder.Entity<PrintEmbroSpecifications>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.EmbroId).HasColumnName("EmbroID");

            //    entity.Property(e => e.PrintEmbroImageId).HasColumnName("PrintEmbroImageID");

            //    entity.Property(e => e.PrintId).HasColumnName("PrintID");

            //    entity.HasOne(d => d.PrintEmbroImage)
            //        .WithMany(p => p.PrintEmbroSpecifications)
            //        .HasForeignKey(d => d.PrintEmbroImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PrintEmbroSpecifications_PrintEmbroImage_Setup");

            //    entity.HasOne(d => d.Print)
            //        .WithMany(p => p.PrintEmbroSpecifications)
            //        .HasForeignKey(d => d.PrintId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PrintEmbroSpecifications_PrintingSpecification");
            //});

            //modelBuilder.Entity<PrintImageColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<PrintImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PrintImageColorId).HasColumnName("PrintImageColorID");
            //});

            //modelBuilder.Entity<PrintImageLayersSetup>(entity =>
            //{
            //    entity.ToTable("PrintImageLayers_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasDefaultValueSql("('')");

            //    entity.Property(e => e.PrintImageSetupId).HasColumnName("PrintImageSetupID");

            //    entity.HasOne(d => d.PrintImageSetup)
            //        .WithMany(p => p.PrintImageLayersSetup)
            //        .HasForeignKey(d => d.PrintImageSetupId)
            //        .HasConstraintName("FK_PrintImageLayers_Setup_PrintEmbroImage_Setup");
            //});

            //modelBuilder.Entity<PrintMaterialSizeSetup>(entity =>
            //{
            //    entity.ToTable("PrintMaterialSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PrintMethodSetup>(entity =>
            //{
            //    entity.ToTable("PrintMethod_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PrintPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.DistFmLeft).HasColumnName("Dist_fm_Left");

            //    entity.Property(e => e.DistFmRight).HasColumnName("Dist_fm_Right");

            //    entity.Property(e => e.DistFmTop).HasColumnName("Dist_fm_Top");

            //    entity.Property(e => e.IsCentered).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.PrintPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_PrintPlacementInstruction_PrintingSpecification");
            //});

            //modelBuilder.Entity<PrintSizes>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.PrintSizes)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_PrintSizes_PrintingSpecification");
            //});

            //modelBuilder.Entity<PrintedFabricColors>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DyeingProcessId).HasColumnName("DyeingProcessID");

            //    entity.Property(e => e.MatchingSourceId).HasColumnName("MatchingSourceID");

            //    entity.Property(e => e.PalletTypeId).HasColumnName("PalletTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PrintedFabricImageCategorySetup>(entity =>
            //{
            //    entity.HasKey(e => e.CategoryId);

            //    entity.ToTable("PrintedFabricImageCategory_Setup");

            //    entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PrintedFabricImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCategoryId).HasColumnName("ImageCategoryID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.PicturePath)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<PrintedFabricImagesSetup>(entity =>
            //{
            //    entity.HasKey(e => e.ImageId);

            //    entity.ToTable("PrintedFabricImages_Setup");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.CategoryId).HasColumnName("CategoryID");

            //    entity.Property(e => e.FileName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false)
            //        .HasDefaultValueSql("('../../../web_images/PrintedFabricImages/')");

            //    entity.HasOne(d => d.Category)
            //        .WithMany(p => p.PrintedFabricImagesSetup)
            //        .HasForeignKey(d => d.CategoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PrintedFabricImages_Setup_PrintedFabricImageCategory_Setup");
            //});

            //modelBuilder.Entity<PrintingColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.PrintingColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_PrintingColor_PrintingSpecification");
            //});

            //modelBuilder.Entity<PrintingLayerColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PrintingLayer_Color");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<PrintingLayers>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FlockMaterialId).HasColumnName("FlockMaterialID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.Material)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.PalletTypeId).HasColumnName("PalletTypeID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintColorTypeId).HasColumnName("PrintColorTypeID");

            //    entity.Property(e => e.PrintImageColorId).HasColumnName("PrintImageColorID");

            //    entity.Property(e => e.PrintMaterialSizeId).HasColumnName("PrintMaterialSizeID");

            //    entity.Property(e => e.PrintTypeId).HasColumnName("PrintTypeID");

            //    entity.HasOne(d => d.FlockMaterial)
            //        .WithMany(p => p.PrintingLayers)
            //        .HasForeignKey(d => d.FlockMaterialId)
            //        .HasConstraintName("FK_PrintingLayers_FlockMaterial_Setup");

            //    entity.HasOne(d => d.PrintColorType)
            //        .WithMany(p => p.PrintingLayers)
            //        .HasForeignKey(d => d.PrintColorTypeId)
            //        .HasConstraintName("FK_PrintingLayers_PrintColorType_Setup");

            //    entity.HasOne(d => d.PrintMaterialSize)
            //        .WithMany(p => p.PrintingLayers)
            //        .HasForeignKey(d => d.PrintMaterialSizeId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_PrintingLayers_PrintMaterialSize_Setup");

            //    entity.HasOne(d => d.PrintType)
            //        .WithMany(p => p.PrintingLayers)
            //        .HasForeignKey(d => d.PrintTypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_PrintingLayers_PrintingType_Setup");
            //});

            //modelBuilder.Entity<PrintingPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.PrintingPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_PrintingPlacementInstruction_PrintingSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.PrintingPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .HasConstraintName("FK_PrintingPlacementInstruction_ElementPlacementInstructions_Setup");
            //});

            //modelBuilder.Entity<PrintingSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Printing_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<PrintingSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FlockMaterialId).HasColumnName("FlockMaterialID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.Length)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VariantId).HasColumnName("VariantID");

            //    entity.Property(e => e.Width)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.FlockMaterial)
            //        .WithMany(p => p.PrintingSpecification)
            //        .HasForeignKey(d => d.FlockMaterialId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_PrintingSpecification_FlockMaterial_Setup");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.PrintingSpecification)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .HasConstraintName("FK_PrintingSpecification_StyleElementMeasurementScale");

            //    entity.HasOne(d => d.Variant)
            //        .WithMany(p => p.PrintingSpecification)
            //        .HasForeignKey(d => d.VariantId)
            //        .HasConstraintName("FK_PrintingSpecification_PrintingVariant_Setup");
            //});

            //modelBuilder.Entity<PrintingToBeDoneSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PrintingToBeDone_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");
            //});

            //modelBuilder.Entity<PrintingTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Ipaddress)
            //        .HasColumnName("IPAddress")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsGeredefinition)
            //        .HasColumnName("IsGERedefinition")
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<PrintingTypeSetup>(entity =>
            //{
            //    entity.ToTable("PrintingType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsDisplay)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");
            //});

            //modelBuilder.Entity<PrintingVariantSetup>(entity =>
            //{
            //    entity.ToTable("PrintingVariant_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ProcessSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Currency)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GeId).HasColumnName("GE_ID");

            //    entity.Property(e => e.ProcessId).HasColumnName("Process_ID");

            //    entity.Property(e => e.ProcessName)
            //        .IsRequired()
            //        .HasColumnName("Process_Name")
            //        .HasMaxLength(800)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ProcurementSourceSetup>(entity =>
            //{
            //    entity.ToTable("ProcurementSource_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ProcurementStatusSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("ProcurementStatus_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<ProfitPercentageSetup>(entity =>
            //{
            //    entity.ToTable("ProfitPercentage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Prt>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("PRT");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OperationLocationId).HasColumnName("OperationLocationID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<PullerImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<QrmActivationSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_Activation_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<QrmBuyerCostingAllowance>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_BuyerCostingAllowance");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.CostingAllowanceId).HasColumnName("CostingAllowanceID");

            //    entity.Property(e => e.ParentAllowanceId).HasColumnName("ParentAllowanceID");
            //});

            //modelBuilder.Entity<QrmBuyerTrimAssociation>(entity =>
            //{
            //    entity.ToTable("QRM_BuyerTrimAssociation");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.ItemSetupId).HasColumnName("ItemSetupID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<QrmConsolidatedFabric>(entity =>
            //{
            //    entity.ToTable("QRM_ConsolidatedFabric");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ConsolidatedFabricXml)
            //        .HasColumnName("ConsolidatedFabricXML")
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<QrmCostingAllowancesSetup>(entity =>
            //{
            //    entity.HasKey(e => e.CostingAllowanceId);

            //    entity.ToTable("QRM_CostingAllowancesSetup");

            //    entity.Property(e => e.CostingAllowanceId)
            //        .HasColumnName("CostingAllowanceID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.CostingAllowance)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmFabricDimensionVariantWise>(entity =>
            //{
            //    entity.ToTable("QRM_FabricDimensionVariantWise");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FinishLength).HasColumnType("numeric(18, 2)");

            //    entity.Property(e => e.FinishWidth).HasColumnType("numeric(18, 2)");

            //    entity.Property(e => e.LengthUnitId).HasColumnName("LengthUnitID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.WidthUnitId).HasColumnName("WidthUnitID");
            //});

            //modelBuilder.Entity<QrmFrsconsumptionCriteriaSetup>(entity =>
            //{
            //    entity.ToTable("QRM_FRSConsumptionCriteria_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SelectedFrsconsumption).HasColumnName("SelectedFRSConsumption");
            //});

            //modelBuilder.Entity<QrmFrsextraCutSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_FRSExtraCut_Setup");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<QrmFrsfabricWastageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_FRSFabricWastage_Setup");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.CreationDate1).HasColumnType("datetime");

            //    entity.Property(e => e.DyeingTypeId).HasColumnName("DyeingTypeID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PrintCodeId).HasColumnName("PrintCodeID");

            //    entity.Property(e => e.ProcessingId).HasColumnName("ProcessingID");
            //});

            //modelBuilder.Entity<QrmFrswastageDefaultSetup>(entity =>
            //{
            //    entity.ToTable("QRM_FRSWastageDefault_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FrswastageSetupId).HasColumnName("FRSWastageSetupID");
            //});

            //modelBuilder.Entity<QrmFrswastageItemSetup>(entity =>
            //{
            //    entity.ToTable("QRM_FRSWastageItem_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasColumnName("description")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmGriegeWastageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_GriegeWastageSetup");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.GwsFrom).HasColumnName("GWS_FROM");

            //    entity.Property(e => e.GwsId)
            //        .HasColumnName("GWS_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.GwsName)
            //        .HasColumnName("GWS_Name")
            //        .IsUnicode(false);

            //    entity.Property(e => e.GwsPercentage)
            //        .HasColumnName("GWS_PERCENTAGE")
            //        .HasColumnType("numeric(4, 2)");

            //    entity.Property(e => e.GwsTo).HasColumnName("GWS_TO");
            //});

            //modelBuilder.Entity<QrmLcorderAssociation>(entity =>
            //{
            //    entity.ToTable("QRM_LCOrderAssociation");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Flag).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.LcmasterId).HasColumnName("LCMasterID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");
            //});

            //modelBuilder.Entity<QrmMmUnitMapping>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_MM_UnitMapping");

            //    entity.Property(e => e.MrpitemUnitId).HasColumnName("MRPItemUnitID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");
            //});

            //modelBuilder.Entity<QrmOrderSheet>(entity =>
            //{
            //    entity.ToTable("QRM_OrderSheet");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.SheetNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmOrderSheetActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheet_Actual");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.SheetNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmOrderSheetEmbroideryActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetEmbroidery_Actual");

            //    entity.Property(e => e.Acamount).HasColumnName("ACAmount");

            //    entity.Property(e => e.Acqty).HasColumnName("ACQty");

            //    entity.Property(e => e.Acrate).HasColumnName("ACRate");

            //    entity.Property(e => e.Acvariance).HasColumnName("ACVariance");

            //    entity.Property(e => e.EmbroImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderSheetFabrics>(entity =>
            //{
            //    entity.ToTable("QRM_OrderSheetFabrics");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.FinishedWidth).HasColumnType("numeric(18, 2)");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.SizeDescription)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Skucost).HasColumnName("SKUCost");

            //    entity.Property(e => e.Unit)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.QrmOrderSheetFabrics)
            //        .HasForeignKey(d => d.VersionId)
            //        .HasConstraintName("FK_QRM_OrderSheetFabrics_QRM_OrderSheetVersions");
            //});

            //modelBuilder.Entity<QrmOrderSheetFabricsActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetFabrics_Actual");

            //    entity.Property(e => e.Acamount).HasColumnName("ACAmount");

            //    entity.Property(e => e.Acqty).HasColumnName("ACQty");

            //    entity.Property(e => e.Acrate).HasColumnName("ACRate");

            //    entity.Property(e => e.Acvariance).HasColumnName("ACVariance");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.SizeDescription)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Skucost).HasColumnName("SKUCost");

            //    entity.Property(e => e.Unit)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderSheetInterlinning>(entity =>
            //{
            //    entity.ToTable("QRM_OrderSheetInterlinning");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Construction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConstructionId).HasColumnName("ConstructionID");

            //    entity.Property(e => e.RollWidth)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RollWidthId).HasColumnName("RollWidthID");

            //    entity.Property(e => e.SolubleType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SolubleTypeId).HasColumnName("SolubleTypeID");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.QrmOrderSheetInterlinning)
            //        .HasForeignKey(d => d.VersionId)
            //        .HasConstraintName("FK_QRM_OrderSheetInterlinning_QRM_OrderSheetVersions");
            //});

            //modelBuilder.Entity<QrmOrderSheetInterlinningActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetInterlinning_Actual");

            //    entity.Property(e => e.Acamount).HasColumnName("ACAmount");

            //    entity.Property(e => e.Acqty).HasColumnName("ACQty");

            //    entity.Property(e => e.Acrate).HasColumnName("ACRate");

            //    entity.Property(e => e.Acvariance).HasColumnName("ACVariance");

            //    entity.Property(e => e.Construction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ConstructionId).HasColumnName("ConstructionID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.RollWidth)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RollWidthId).HasColumnName("RollWidthID");

            //    entity.Property(e => e.SolubleType)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SolubleTypeId).HasColumnName("SolubleTypeID");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderSheetPrintingActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetPrinting_Actual");

            //    entity.Property(e => e.Acamount).HasColumnName("ACAmount");

            //    entity.Property(e => e.Acqty).HasColumnName("ACQty");

            //    entity.Property(e => e.Acrate).HasColumnName("ACRate");

            //    entity.Property(e => e.Acvariance).HasColumnName("ACVariance");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.PrintImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderSheetStyle>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetStyle");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.QrmOrderSheetStyle)
            //        .HasForeignKey(d => d.VersionId)
            //        .HasConstraintName("FK_QRM_OrderSheetStyle_QRM_OrderSheetVersions");
            //});

            //modelBuilder.Entity<QrmOrderSheetStyleActual>(entity =>
            //{
            //    entity.ToTable("QRM_OrderSheetStyle_Actual");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderSheetTrims>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetTrims");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.ColorCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.GrossUnitId).HasColumnName("GrossUnitID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageCodeId).HasColumnName("ImageCodeID");

            //    entity.Property(e => e.ImageName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.TrimConsumptionUnitId).HasColumnName("TrimConsumptionUnitID");

            //    entity.Property(e => e.TrimDescription)
            //        .HasMaxLength(80)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.QrmOrderSheetTrims)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_QRM_OrderSheetTrims_QRM_OrderSheetVersions");
            //});

            //modelBuilder.Entity<QrmOrderSheetTrimsActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetTrims_Actual");

            //    entity.Property(e => e.Acamount).HasColumnName("ACAmount");

            //    entity.Property(e => e.Acqty).HasColumnName("ACQty");

            //    entity.Property(e => e.Acrate).HasColumnName("ACRate");

            //    entity.Property(e => e.Acvariance).HasColumnName("ACVariance");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.GrossUnitId).HasColumnName("GrossUnitID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageCodeId).HasColumnName("ImageCodeID");

            //    entity.Property(e => e.ImageName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.TrimConsumptionUnitId).HasColumnName("TrimConsumptionUnitID");

            //    entity.Property(e => e.TrimDescription)
            //        .HasMaxLength(80)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderSheetVersionStatusSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetVersionStatus_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<QrmOrderSheetVersions>(entity =>
            //{
            //    entity.ToTable("QRM_OrderSheetVersions");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CostingInfoXml)
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.OrderSheetId).HasColumnName("OrderSheetID");

            //    entity.Property(e => e.VersionNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.OrderSheet)
            //        .WithMany(p => p.QrmOrderSheetVersions)
            //        .HasForeignKey(d => d.OrderSheetId)
            //        .HasConstraintName("FK_QRM_OrderSheetVersions_QRM_OrderSheet");
            //});

            //modelBuilder.Entity<QrmOrderSheetVersionsActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetVersions_Actual");

            //    entity.Property(e => e.CostingInfoXml)
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderSheetId).HasColumnName("OrderSheetID");

            //    entity.Property(e => e.VersionNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmOrderSheetVersionsCostBreakUp>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetVersions_CostBreakUp");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Name)
            //        .HasColumnName("NAME")
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmOrderSheetWashingActual>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_OrderSheetWashing_Actual");

            //    entity.Property(e => e.Acamount).HasColumnName("ACAmount");

            //    entity.Property(e => e.Acqty).HasColumnName("ACQty");

            //    entity.Property(e => e.Acrate).HasColumnName("ACRate");

            //    entity.Property(e => e.Acvariance).HasColumnName("ACVariance");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");
            //});

            //modelBuilder.Entity<QrmOrderreporttemp>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("qrm_orderreporttemp");

            //    entity.Property(e => e.BeadTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.ButtonTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.CollectionName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DenimRequirementDate).HasColumnType("datetime");

            //    entity.Property(e => e.ElasticTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.EmbroTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.EyeletTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.FabricCategory)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.GatransactionDate)
            //        .HasColumnName("GATransactionDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.HangtagTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.KnitsRequirementDate).HasColumnType("datetime");

            //    entity.Property(e => e.LabelTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.LaceTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.OrderDate).HasColumnType("datetime");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PrintTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.PullerTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.ShipmentDate).HasColumnType("datetime");

            //    entity.Property(e => e.SizeRangeTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.StudsTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.StyleName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TwillTapeTransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.WovenRequirementDate).HasColumnType("datetime");

            //    entity.Property(e => e.ZipperTransactionDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<QrmReqFabicRnDassociation>(entity =>
            //{
            //    entity.ToTable("QRM_ReqFabicRnDAssociation");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Fid).HasColumnName("FID");

            //    entity.Property(e => e.RnDid).HasColumnName("RnDID");
            //});

            //modelBuilder.Entity<QrmUpcspecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_UPCSpecification");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.Upc)
            //        .HasColumnName("UPC")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<QrmWeaveTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_WeaveType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<QrmXwastageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_XWastageSetup");

            //    entity.Property(e => e.XwsCompName)
            //        .HasColumnName("XWS_CompName")
            //        .IsUnicode(false);

            //    entity.Property(e => e.XwsDescr)
            //        .HasColumnName("XWS_DESCR")
            //        .IsUnicode(false);

            //    entity.Property(e => e.XwsFrom).HasColumnName("XWS_FROM");

            //    entity.Property(e => e.XwsId)
            //        .HasColumnName("XWS_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.XwsPercentage)
            //        .HasColumnName("XWS_PERCENTAGE")
            //        .HasColumnType("numeric(4, 2)");

            //    entity.Property(e => e.XwsTo).HasColumnName("XWS_TO");
            //});

            //modelBuilder.Entity<QrmYarnWastageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QRM_YarnWastageSetup");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.YcId).HasColumnName("YC_ID");

            //    entity.Property(e => e.YwsFrom).HasColumnName("YWS_FROM");

            //    entity.Property(e => e.YwsId)
            //        .HasColumnName("YWS_ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.YwsPercentage)
            //        .HasColumnName("YWS_PERCENTAGE")
            //        .HasColumnType("numeric(4, 2)");

            //    entity.Property(e => e.YwsTo).HasColumnName("YWS_TO");
            //});

            //modelBuilder.Entity<QuotaCategorySetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("QuotaCategory_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<ReactiveDyeingPickListStatus>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.LotNo)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Reason>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ReasonDesc)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ReasonSetup>(entity =>
            //{
            //    entity.HasKey(e => e.ReasonId);

            //    entity.ToTable("Reason_Setup");

            //    entity.Property(e => e.ReasonId).HasColumnName("ReasonID");

            //    entity.Property(e => e.ReasonDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Type)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ReleaseForGe>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("ReleaseForGE");

            //    entity.Property(e => e.ReleaseDate).HasColumnType("datetime");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<Results>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ImageId)
            //        .HasColumnName("ImageID")
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.MaterialCode).HasMaxLength(255);

            //    entity.Property(e => e.Vender).HasMaxLength(255);

            //    entity.Property(e => e.VenderCode).HasMaxLength(255);

            //    entity.Property(e => e.VenderType).HasMaxLength(255);

            //    entity.Property(e => e.YarnColor).HasMaxLength(255);
            //});

            //modelBuilder.Entity<RexeneSupplierCodeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("RexeneSupplierCode_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<RivetColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.RivetColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_RivetColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.RivetColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_RivetColor_RivetSpecification");
            //});

            //modelBuilder.Entity<RivetImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<RivetImageSetup>(entity =>
            //{
            //    entity.ToTable("RivetImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate).HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.MetalFinishTypeId).HasColumnName("MetalFinishTypeID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.RivetImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_RivetImage_Setup_TrimUnit_Setup");

            //    entity.HasOne(d => d.Type)
            //        .WithMany(p => p.RivetImageSetup)
            //        .HasForeignKey(d => d.TypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_RivetImage_Setup_RivetType_Setup");
            //});

            //modelBuilder.Entity<RivetPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.RivetPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_RivetPlacementInstruction_RivetSpecification");
            //});

            //modelBuilder.Entity<RivetSizeSetup>(entity =>
            //{
            //    entity.ToTable("RivetSize_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<RivetSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.RivetSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_RivetSpecification_RivetImage_Setup");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.RivetSpecification)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .HasConstraintName("FK_RivetSpecification_TrimMeasurementScale_Setup");

            //    entity.HasOne(d => d.SelectedTrim)
            //        .WithMany(p => p.RivetSpecification)
            //        .HasForeignKey(d => d.SelectedTrimId)
            //        .HasConstraintName("FK_RivetSpecification_SelectedTrim");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.RivetSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_RivetSpecification_RivetSize_Setup");
            //});

            //modelBuilder.Entity<RivetTypeSetup>(entity =>
            //{
            //    entity.ToTable("RivetType_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<RupeeConversion>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<SampleAssortment>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.Style)
            //        .WithMany(p => p.SampleAssortment)
            //        .HasForeignKey(d => d.StyleId)
            //        .HasConstraintName("FK_SampleAssortment_Style");
            //});

            //modelBuilder.Entity<SampleAssortmentCounterQuantities>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AssortmentId).HasColumnName("AssortmentID");

            //    entity.Property(e => e.CounterId).HasColumnName("CounterID");

            //    entity.Property(e => e.FabricSpecificationColorId).HasColumnName("FabricSpecificationColorID");

            //    entity.HasOne(d => d.Assortment)
            //        .WithMany(p => p.SampleAssortmentCounterQuantities)
            //        .HasForeignKey(d => d.AssortmentId)
            //        .HasConstraintName("FK_SampleAssortmentCounter_SampleAssortment");

            //    entity.HasOne(d => d.Counter)
            //        .WithMany(p => p.SampleAssortmentCounterQuantities)
            //        .HasForeignKey(d => d.CounterId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SampleAssortmentCounter_SampleAssortmentCounter_setup");
            //});

            //modelBuilder.Entity<SampleAssortmentCounterSetup>(entity =>
            //{
            //    entity.ToTable("SampleAssortmentCounter_setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SampleBom>(entity =>
            //{
            //    entity.ToTable("SampleBOM");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.SampleSuperBom)
            //        .WithMany(p => p.SampleBom)
            //        .HasForeignKey(d => d.SampleSuperBomid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SampleBOM_SampleSuperBOM");

            //    entity.HasOne(d => d.Style)
            //        .WithMany(p => p.SampleBom)
            //        .HasForeignKey(d => d.StyleId)
            //        .HasConstraintName("FK_SampleBOM_Style");
            //});

            //modelBuilder.Entity<SampleDestination>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CityId).HasColumnName("CityID");

            //    entity.Property(e => e.InspectionDate).HasColumnType("datetime");

            //    entity.Property(e => e.SampleId).HasColumnName("SampleID");

            //    entity.Property(e => e.ShipmentDate).HasColumnType("datetime");

            //    entity.HasOne(d => d.City)
            //        .WithMany(p => p.SampleDestination)
            //        .HasForeignKey(d => d.CityId)
            //        .HasConstraintName("FK_SampleDestination_City_Setup");

            //    entity.HasOne(d => d.Sample)
            //        .WithMany(p => p.SampleDestination)
            //        .HasForeignKey(d => d.SampleId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SampleDestination_Style");
            //});

            //modelBuilder.Entity<SampleDestinationAssortment>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricSpecificationColorId).HasColumnName("FabricSpecificationColorID");

            //    entity.Property(e => e.SampleDestinationId).HasColumnName("SampleDestinationID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.SampleDestination)
            //        .WithMany(p => p.SampleDestinationAssortment)
            //        .HasForeignKey(d => d.SampleDestinationId)
            //        .HasConstraintName("FK_SampleDestinationAssortment_SampleDestination");
            //});

            //modelBuilder.Entity<SampleMirchecking>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMIRChecking");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.EndDate).HasColumnType("datetime");

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.StartDate).HasColumnType("datetime");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SampleMircheckingRecord>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMIRCheckingRecord");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Sr).HasColumnName("SR");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SampleMirdyedFabric>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMIRDyedFabric");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.DyeingProcessId).HasColumnName("DyeingProcessID");

            //    entity.Property(e => e.DyeingTypeId).HasColumnName("DyeingTypeID");

            //    entity.Property(e => e.FabricComposition)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.GaugeId).HasColumnName("GaugeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.Property(e => e.Sr).HasColumnName("SR");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<SampleMirfinishedFabric>(entity =>
            //{
            //    entity.ToTable("SampleMIRFinishedFabric");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.DyeingProcessId).HasColumnName("DyeingProcessID");

            //    entity.Property(e => e.DyeingTypeId).HasColumnName("DyeingTypeID");

            //    entity.Property(e => e.FabricComposition)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.GaugeId).HasColumnName("GaugeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.Property(e => e.Sr).HasColumnName("SR");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<SampleMirgreigeFabric>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMIRGreigeFabric");

            //    entity.Property(e => e.DyeingTypeId).HasColumnName("DyeingTypeID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GaugeId).HasColumnName("GaugeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.QualityId).HasColumnName("QualityID");

            //    entity.Property(e => e.Sr).HasColumnName("SR");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<SampleMirmaterialManagement>(entity =>
            //{
            //    entity.HasKey(e => e.JobId);

            //    entity.ToTable("SampleMIRMaterialManagement");

            //    entity.Property(e => e.JobId).HasColumnName("JobID");

            //    entity.Property(e => e.EndDate).HasColumnType("datetime");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.StartDate).HasColumnType("datetime");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SampleMirstitchingRecord>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMIRStitchingRecord");

            //    entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.Sr).HasColumnName("SR");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SampleMrpleadTime>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMRPLeadTime");

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.VarId).HasColumnName("VarID");
            //});

            //modelBuilder.Entity<SampleMrptrimLeadTime>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SampleMRPTrimLeadTime");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SampleSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Sample_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<SampleSuperBom>(entity =>
            //{
            //    entity.ToTable("SampleSuperBOM");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");
            //});

            //modelBuilder.Entity<SchedulerTestTable>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<SeasonSetup>(entity =>
            //{
            //    entity.ToTable("Season_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SeasonCode)
            //        .HasMaxLength(2)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SelectedElement>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.IsOrder)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.OrderStyleElementId).HasColumnName("OrderStyleElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.OrderStyleElement)
            //        .WithMany(p => p.SelectedElement)
            //        .HasForeignKey(d => d.OrderStyleElementId)
            //        .HasConstraintName("FK_SelectedElement_OrderStyleElement_Setup");
            //});

            //modelBuilder.Entity<SelectedElementTransactions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SelectedElement_Transactions");

            //    entity.Property(e => e.Datetime).HasColumnType("datetime");

            //    entity.Property(e => e.OrderStyleElementId).HasColumnName("OrderStyleElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionTypeId).HasColumnName("TransactionTypeID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<SelectedGarmentSizeRange>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GarmentSizeRangeId).HasColumnName("GarmentSizeRangeID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.HasOne(d => d.GarmentSizeRange)
            //        .WithMany(p => p.SelectedGarmentSizeRange)
            //        .HasForeignKey(d => d.GarmentSizeRangeId)
            //        .HasConstraintName("FK_SelectedGarmentSizeRange_GarmentSizeRange_Setup");

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.SelectedGarmentSizeRange)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .HasConstraintName("FK_SelectedGarmentSizeRange_SelectedElement");
            //});

            //modelBuilder.Entity<SelectedPackingAccessories>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PackingAccessoriesId).HasColumnName("PackingAccessoriesID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");
            //});

            //modelBuilder.Entity<SelectedSizeRangeTransactions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SelectedSizeRange_transactions");

            //    entity.Property(e => e.DateTime).HasColumnType("datetime");

            //    entity.Property(e => e.SelectedGarmentSizeSrangeId).HasColumnName("SelectedGarmentSizeSRangeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionTypeId).HasColumnName("TransactionTypeID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<SelectedTechnicalInstructions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.InsertionDate).HasColumnType("datetime");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.TechCommentId).HasColumnName("TechCommentID");

            //    entity.Property(e => e.TechComments)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<SelectedThreadPurpose>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PurposeId).HasColumnName("PurposeID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.Purpose)
            //        .WithMany(p => p.SelectedThreadPurpose)
            //        .HasForeignKey(d => d.PurposeId)
            //        .HasConstraintName("FK_SelectedThreadPurpose_ThreadPurpose_Setup");
            //});

            //modelBuilder.Entity<SelectedTrim>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.SelectedTrim)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .HasConstraintName("FK_SelectedTrim_SelectedElement");

            //    entity.HasOne(d => d.Trim)
            //        .WithMany(p => p.SelectedTrim)
            //        .HasForeignKey(d => d.TrimId)
            //        .HasConstraintName("FK_SelectedTrim_Trim_Setup");
            //});

            //modelBuilder.Entity<SelectedTrimSampling>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");
            //});

            //modelBuilder.Entity<SequenceImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<SequenceImageSetup>(entity =>
            //{
            //    entity.ToTable("SequenceImage_setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.FabricSequenceId).HasColumnName("FabricSequenceID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.SequenceImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .HasConstraintName("FK_SequenceImage_setup_SequenceMaterial_setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.SequenceImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_SequenceImage_setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<SequenceMaterial>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.SequenceId).HasColumnName("SequenceID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.SequenceMaterial)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SequenceMaterial_SequenceMaterial_setup");
            //});

            //modelBuilder.Entity<SequenceMaterialSetup>(entity =>
            //{
            //    entity.ToTable("SequenceMaterial_setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SequencePlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.SequencePlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_SequencePlacementInstruction_SequenceSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.SequencePlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SequencePlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<SequenceSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.FabricSequenceId).HasColumnName("FabricSequenceID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.FabricSequence)
            //        .WithMany(p => p.SequenceSpecification)
            //        .HasForeignKey(d => d.FabricSequenceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SequenceSpecification_FabricSequence_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.SequenceSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .HasConstraintName("FK_SequenceSpecification_SequenceImage_setup");
            //});

            //modelBuilder.Entity<Series>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.BasisId).HasColumnName("BasisID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.HasOne(d => d.Basis)
            //        .WithMany(p => p.Series)
            //        .HasForeignKey(d => d.BasisId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_Series_SeriesBasis_setup");

            //    entity.HasOne(d => d.GarmentType)
            //        .WithMany(p => p.Series)
            //        .HasForeignKey(d => d.GarmentTypeId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_Series_GarmentType_Setup");
            //});

            //modelBuilder.Entity<SeriesBasisSetup>(entity =>
            //{
            //    entity.ToTable("SeriesBasis_setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SeriesColors>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BuyerColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorPalleteTypeId).HasColumnName("ColorPalleteTypeID");

            //    entity.Property(e => e.FabricColorMatchingSourceId).HasColumnName("FabricColorMatchingSourceID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SeriesId).HasColumnName("SeriesID");

            //    entity.HasOne(d => d.ColorPalleteType)
            //        .WithMany(p => p.SeriesColors)
            //        .HasForeignKey(d => d.ColorPalleteTypeId)
            //        .HasConstraintName("FK_SeriesColors_ColorPalleteType_Setup");

            //    entity.HasOne(d => d.FabricColorMatchingSource)
            //        .WithMany(p => p.SeriesColors)
            //        .HasForeignKey(d => d.FabricColorMatchingSourceId)
            //        .HasConstraintName("FK_SeriesColors_FabricColorMatchingSource_Setup");

            //    entity.HasOne(d => d.Series)
            //        .WithMany(p => p.SeriesColors)
            //        .HasForeignKey(d => d.SeriesId)
            //        .HasConstraintName("FK_SeriesColors_Series");
            //});

            //modelBuilder.Entity<SetupDetail>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");

            //    entity.Property(e => e.RedirectPageName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TableName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SetupMaping>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FieldLength)
            //        .HasMaxLength(3)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PageFieldName)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.SetupDetailId).HasColumnName("SetupDetailID");

            //    entity.Property(e => e.TableFieldName)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.SetupDetail)
            //        .WithMany(p => p.SetupMaping)
            //        .HasForeignKey(d => d.SetupDetailId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SetupMaping_SetupDetail");
            //});

            //modelBuilder.Entity<SetupUrlAssigned>(entity =>
            //{
            //    entity.ToTable("SetupURL_Assigned");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AssignDate)
            //        .HasColumnName("Assign_Date")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.AssignedBy).HasColumnName("Assigned_By");

            //    entity.Property(e => e.SetupUrlId).HasColumnName("SetupURL_ID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.HasOne(d => d.SetupUrl)
            //        .WithMany(p => p.SetupUrlAssigned)
            //        .HasForeignKey(d => d.SetupUrlId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_SetupURL_Assigned_SetupURL_Setup");
            //});

            //modelBuilder.Entity<SetupUrlSetup>(entity =>
            //{
            //    entity.ToTable("SetupURL_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Url)
            //        .HasColumnName("URL")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeChartAttachments>(entity =>
            //{
            //    entity.ToTable("SizeChart_Attachments");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FileName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");
            //});

            //modelBuilder.Entity<SizeChartCapturingStatus>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");
            //});

            //modelBuilder.Entity<SizeChartCommentsSetup>(entity =>
            //{
            //    entity.ToTable("SizeChartComments_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.HasOne(d => d.PlacementPoint)
            //        .WithMany(p => p.SizeChartCommentsSetup)
            //        .HasForeignKey(d => d.PlacementPointId)
            //        .HasConstraintName("FK_SizeChartComments_Setup_PlacementPoint_Setup");
            //});

            //modelBuilder.Entity<SizeChartJustification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.JustificationId).HasColumnName("JustificationID");

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.Justification)
            //        .WithMany(p => p.SizeChartJustification)
            //        .HasForeignKey(d => d.JustificationId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeChartJustification_SizeChartJustification_Setup");
            //});

            //modelBuilder.Entity<SizeChartJustificationSetup>(entity =>
            //{
            //    entity.ToTable("SizeChartJustification_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeChartMainSetup>(entity =>
            //{
            //    entity.ToTable("SizeChartMain_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.SizeRangeRegionId).HasColumnName("SizeRangeRegionID");

            //    entity.Property(e => e.UserName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeChartPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SizeChartPlacement_Setup");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.HasOne(d => d.GarmentType)
            //        .WithMany(p => p.SizeChartPlacementSetup)
            //        .HasForeignKey(d => d.GarmentTypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeChartPlacement_Setup_GarmentType_Setup");

            //    entity.HasOne(d => d.Gender)
            //        .WithMany(p => p.SizeChartPlacementSetup)
            //        .HasForeignKey(d => d.GenderId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeChartPlacement_Setup_Gender_Setup");

            //    entity.HasOne(d => d.PlacementPoint)
            //        .WithMany(p => p.SizeChartPlacementSetup)
            //        .HasForeignKey(d => d.PlacementPointId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeChartPlacement_Setup_PlacementPoint_Setup");
            //});

            //modelBuilder.Entity<SizeChartScannedImage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeChartSelectedElementId).HasColumnName("SizeChartSelectedElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SizeChartSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.DimensionId).HasColumnName("DimensionID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.Property(e => e.VersionId)
            //        .HasColumnName("VersionID")
            //        .HasDefaultValueSql("(1)");

            //    entity.HasOne(d => d.PlacementPoint)
            //        .WithMany(p => p.SizeChartSpecification)
            //        .HasForeignKey(d => d.PlacementPointId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeChartSpecification_PlacementPoint_Setup");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.SizeChartSpecification)
            //        .HasForeignKey(d => d.VersionId)
            //        .HasConstraintName("FK_SizeChartSpecification_SizeChartVersions");
            //});

            //modelBuilder.Entity<SizeChartSpecificationSetup>(entity =>
            //{
            //    entity.ToTable("SizeChartSpecification_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.SizeChartId).HasColumnName("SizeChartID");

            //    entity.Property(e => e.SizeRangeId).HasColumnName("SizeRangeID");

            //    entity.HasOne(d => d.SizeChart)
            //        .WithMany(p => p.SizeChartSpecificationSetup)
            //        .HasForeignKey(d => d.SizeChartId)
            //        .HasConstraintName("FK_SizeChartSpecification_Setup_SizeChartMain_Setup");
            //});

            //modelBuilder.Entity<SizeChartToleranceComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Other)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.PointToMeasure)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SizeChartCommentsId).HasColumnName("SizeChartCommentsID");

            //    entity.Property(e => e.SizeChartImage)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VersionId).HasColumnName("VersionID");

            //    entity.HasOne(d => d.PlacementPoint)
            //        .WithMany(p => p.SizeChartToleranceComments)
            //        .HasForeignKey(d => d.PlacementPointId)
            //        .HasConstraintName("FK_SizeChartToleranceComments_PlacementPoint_Setup");

            //    entity.HasOne(d => d.SizeChartComments)
            //        .WithMany(p => p.SizeChartToleranceComments)
            //        .HasForeignKey(d => d.SizeChartCommentsId)
            //        .HasConstraintName("FK_SizeChartToleranceComments_SizeChartComments_Setup");

            //    entity.HasOne(d => d.Version)
            //        .WithMany(p => p.SizeChartToleranceComments)
            //        .HasForeignKey(d => d.VersionId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_SizeChartToleranceComments_SizeChartVersions");
            //});

            //modelBuilder.Entity<SizeChartToleranceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SizeChartTolerance_Setup");

            //    entity.Property(e => e.Other)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");

            //    entity.Property(e => e.SizeChartId).HasColumnName("SizeChartID");

            //    entity.Property(e => e.SizeChartImage)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeChartVersions>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.UserName)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.SelectedElement)
            //        .WithMany(p => p.SizeChartVersions)
            //        .HasForeignKey(d => d.SelectedElementId)
            //        .HasConstraintName("FK_SizeChartVersions_SelectedElement");
            //});

            //modelBuilder.Entity<SizeRangeRegionSetup>(entity =>
            //{
            //    entity.ToTable("SizeRangeRegion_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeRangeTypeSetup>(entity =>
            //{
            //    entity.ToTable("SizeRangeType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeRingCodeSetup>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.InsertionDate).HasColumnType("datetime");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<SizeRingColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.Property(e => e.TextColor)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.SizeRingColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_SizeRingColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.SizeRingColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_SizeRingColor_SizeRingSpecification");
            //});

            //modelBuilder.Entity<SizeRingDesignSetup>(entity =>
            //{
            //    entity.ToTable("SizeRingDesign_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SizeRingImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<SizeRingImageSetup>(entity =>
            //{
            //    entity.ToTable("SizeRingImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignId).HasColumnName("DesignID");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Design)
            //        .WithMany(p => p.SizeRingImageSetup)
            //        .HasForeignKey(d => d.DesignId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeRingImage_Setup_SizeRingDesign_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.SizeRingImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_SizeRingImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<SizeRingSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(14)");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.SizeRingSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_SizeRingSpecification_SizeRingImage_Setup");
            //});

            //modelBuilder.Entity<SizesSetup>(entity =>
            //{
            //    entity.HasKey(e => e.SizeId);

            //    entity.ToTable("Sizes_Setup");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.SizeDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SketchFabricImageComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Htmlcode)
            //        .HasColumnName("HTMLCode")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageCategoryId).HasColumnName("ImageCategoryID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.PicturePath)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SmCollectionWiseSetupValueRetrievalStatus>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SM_CollectionWiseSetupValueRetrievalStatus");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.SetupTypeId).HasColumnName("SetupTypeID");
            //});

            //modelBuilder.Entity<SmSetupValue>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SM_SetupValue");

            //    entity.Property(e => e.SetupTypeDescription)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SetupTypeId)
            //        .HasColumnName("SetupTypeID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<SmvmodelCostSetup>(entity =>
            //{
            //    entity.ToTable("SMVModelCost_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.IsFromGe).HasColumnName("IsFromGE");

            //    entity.Property(e => e.RateTypeId).HasColumnName("RateTypeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<SmvprocessSetup>(entity =>
            //{
            //    entity.ToTable("SMVProcess_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SmvrateSetup>(entity =>
            //{
            //    entity.ToTable("SMVRate_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.IsRateInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.RatePerMin).HasColumnName("Rate_Per_Min");

            //    entity.Property(e => e.SmvprocessSetupId).HasColumnName("SMVProcessSetupID");
            //});

            //modelBuilder.Entity<SolubleTypesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SolubleTypes_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<Sticker>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ItemSourceId).HasColumnName("ItemSourceID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");

            //    entity.Property(e => e.StickerTypeId).HasColumnName("StickerTypeID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<StickerBarCodeImageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StickerBarCodeImage_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<StickerCodeImageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StickerCodeImage_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<StickerImageSetup>(entity =>
            //{
            //    entity.ToTable("StickerImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StickerTypeId).HasColumnName("StickerTypeID");
            //});

            //modelBuilder.Entity<StickerMaterialSetup>(entity =>
            //{
            //    entity.ToTable("StickerMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StickerTypeId).HasColumnName("StickerTypeID");
            //});

            //modelBuilder.Entity<StickerPlacementPoints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Sticker_PlacementPoints");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");

            //    entity.Property(e => e.Position).HasMaxLength(50);

            //    entity.Property(e => e.SideUnitId).HasColumnName("SideUnitID");

            //    entity.Property(e => e.StickerId).HasColumnName("StickerID");

            //    entity.Property(e => e.TopBottomUnitId).HasColumnName("TopBottomUnitID");
            //});

            //modelBuilder.Entity<StickerPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StickerPlacement_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<StickerPrintImageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StickerPrintImage_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StickerTypeId)
            //        .HasColumnName("StickerTypeID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<StickerTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StickerType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<StickerWarningImageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StickerWarningImage_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Stopper>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AppearenceId).HasColumnName("AppearenceID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FinishId).HasColumnName("FinishID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ItemSourceId).HasColumnName("ItemSourceID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StringId).HasColumnName("StringID");
            //});

            //modelBuilder.Entity<StopperImagesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StopperImages_setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<StoreLocationSetup>(entity =>
            //{
            //    entity.HasKey(e => e.StoreLocationId)
            //        .HasName("PK_SLOC");

            //    entity.ToTable("StoreLocation_Setup");

            //    entity.Property(e => e.StoreLocationId).HasColumnName("StoreLocationID");

            //    entity.Property(e => e.StoreId).HasColumnName("StoreID");

            //    entity.Property(e => e.StoreLocationDesc)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StoreLocationType).HasDefaultValueSql("(0)");

            //    entity.HasOne(d => d.Store)
            //        .WithMany(p => p.StoreLocationSetup)
            //        .HasForeignKey(d => d.StoreId)
            //        .HasConstraintName("FK_SLOC_Store");
            //});

            //modelBuilder.Entity<StoreLocationType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.TypeDescritpion)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TypeId).HasColumnName("TypeID");
            //});

            //modelBuilder.Entity<StoreSetup>(entity =>
            //{
            //    entity.HasKey(e => e.StoreId)
            //        .HasName("PK_Store");

            //    entity.ToTable("Store_Setup");

            //    entity.Property(e => e.StoreId).HasColumnName("StoreID");

            //    entity.Property(e => e.StoreDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});



            //modelBuilder.Entity<StringAndSopperItemSourceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StringAndSopperItemSource_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<StringAndStopperPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StringAndStopperPlacement_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<StringPlacementPoints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.StringId).HasColumnName("StringID");
            //});

            //modelBuilder.Entity<StripeColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Color)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorsetId).HasColumnName("ColorsetID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.StripeId).HasColumnName("StripeID");
            //});

            //modelBuilder.Entity<StudImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<Style>(entity =>
            //{
            //    entity.HasIndex(e => new { e.Id, e.OrderNo })
            //        .HasName("_dta_index_Style_8_536089396__K1_K12");

            //    entity.HasIndex(e => new { e.ParentId, e.Id })
            //        .HasName("INd_style");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BackImage).HasColumnType("image");

            //    entity.Property(e => e.CapturingStatus).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.EstimatedDate).HasColumnType("datetime");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FrontImage).HasColumnType("image");

            //    entity.Property(e => e.GarmentId).HasColumnName("GarmentID");

            //    entity.Property(e => e.GrossStatus)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsDummy).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsLocked).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");

            //    entity.Property(e => e.ParentStyleId).HasColumnName("ParentStyleID");

            //    entity.Property(e => e.ProcurementStatus).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ReferenceNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SamplingDate).HasColumnType("datetime");

            //    entity.Property(e => e.SeriesId)
            //        .HasColumnName("SeriesID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<StyleBk13thOct2016>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("style_bk_13thOct2016");

            //    entity.Property(e => e.BackImage).HasColumnType("image");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.EstimatedDate).HasColumnType("datetime");

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.FrontImage).HasColumnType("image");

            //    entity.Property(e => e.GarmentId).HasColumnName("GarmentID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");

            //    entity.Property(e => e.ParentStyleId).HasColumnName("ParentStyleID");

            //    entity.Property(e => e.ReferenceNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SamplingDate).HasColumnType("datetime");

            //    entity.Property(e => e.SeriesId).HasColumnName("SeriesID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<StyleComments>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasColumnType("ntext");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<StyleCurrency>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CurrencyId)
            //        .HasColumnName("CurrencyID")
            //        .HasDefaultValueSql("(2)");

            //    entity.Property(e => e.InputCurrencyId)
            //        .HasColumnName("InputCurrencyID")
            //        .HasDefaultValueSql("(7)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<StyleElementMeasurementScale>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.OrderStyleElementId).HasColumnName("OrderStyleElementID");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.StyleElementMeasurementScale)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_StyleElementMeasurementScale_MeasurementScale_Setup");

            //    entity.HasOne(d => d.OrderStyleElement)
            //        .WithMany(p => p.StyleElementMeasurementScale)
            //        .HasForeignKey(d => d.OrderStyleElementId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_StyleElementMeasurementScale_OrderStyleElement_Setup");
            //});

            //modelBuilder.Entity<StyleGwsetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Style_GWSetup");

            //    entity.Property(e => e.GwsId).HasColumnName("GWS_ID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<StyleImage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ImageTypeId).HasColumnName("ImageTypeID");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.HasOne(d => d.ImageType)
            //        .WithMany(p => p.StyleImage)
            //        .HasForeignKey(d => d.ImageTypeId)
            //        .HasConstraintName("FK_StyleImage_ImageType_Setup");

            //    entity.HasOne(d => d.Style)
            //        .WithMany(p => p.StyleImage)
            //        .HasForeignKey(d => d.StyleId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_StyleImage_Style");
            //});

            //modelBuilder.Entity<StyleJobDetail>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BodyPart)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.StyleJobId).HasColumnName("StyleJobID");
            //});

            //modelBuilder.Entity<StyleJobs>(entity =>
            //{
            //    entity.HasKey(e => e.JobId);

            //    entity.Property(e => e.JobId).HasColumnName("JobID");

            //    entity.Property(e => e.FabricComposition)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.MachineTypeId).HasColumnName("MachineTypeID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.Version).HasDefaultValueSql("(1)");
            //});

            //modelBuilder.Entity<StyleMovingTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StyleMovingTransaction_Log");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<StylePackingAssortment>(entity =>
            //{
            //    entity.HasKey(e => e.PackAssortmentId);

            //    entity.ToTable("Style_PackingAssortment");

            //    entity.Property(e => e.PackAssortmentId).HasColumnName("PackAssortmentID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.Status)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<StyleSampling>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.SampleNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<StyleStatusSetup>(entity =>
            //{
            //    entity.ToTable("StyleStatus_setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<StyleStatusUrl>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("StyleStatusURL");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleStatusId).HasColumnName("StyleStatusID");

            //    entity.Property(e => e.Url)
            //        .IsRequired()
            //        .HasColumnName("URL")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.StyleStatus)
            //        .WithMany(p => p.StyleStatusUrl)
            //        .HasForeignKey(d => d.StyleStatusId)
            //        .HasConstraintName("FK_StyleStatusURL_StyleStatus_setup");
            //});

            //modelBuilder.Entity<StyleSwatch>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.SwatchNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<StyleTransactions>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Style_Transactions");

            //    entity.Property(e => e.Datetime).HasColumnType("datetime");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionTypeId).HasColumnName("TransactionTypeID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.HasOne(d => d.TransactionType)
            //        .WithMany(p => p.StyleTransactions)
            //        .HasForeignKey(d => d.TransactionTypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_Style_Transactions_Tansaction_Setup");
            //});

            //modelBuilder.Entity<SubDomain>(entity =>
            //{
            //    entity.Property(e => e.SubDomainId)
            //        .HasColumnName("SubDomainID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.DomainId).HasColumnName("DomainID");

            //    entity.Property(e => e.SubDomainDescription)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SubDomainLinks>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SubDomain_Links");

            //    entity.HasIndex(e => e.SequenceNo)
            //        .HasName("IX_SubDomain_Links");

            //    entity.Property(e => e.DomainId).HasColumnName("DomainID");

            //    entity.Property(e => e.LinkDescription)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SubDomainId).HasColumnName("SubDomainID");

            //    entity.Property(e => e.Url)
            //        .IsRequired()
            //        .HasColumnName("URL")
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<SubDomainLinks2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("SubDomain_Links2");

            //    entity.Property(e => e.LinkDescription).HasMaxLength(255);

            //    entity.Property(e => e.SubDomainId).HasColumnName("SubDomainID");

            //    entity.Property(e => e.Url)
            //        .HasColumnName("URL")
            //        .HasMaxLength(255);
            //});

            //modelBuilder.Entity<SwatchSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SwatchCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SwatchName)
            //        .IsRequired()
            //        .HasMaxLength(250)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Tabletest>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Abc)
            //        .IsRequired()
            //        .HasColumnName("ABC")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TagPin>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.AppearenceId).HasColumnName("AppearenceID");

            //    entity.Property(e => e.AttachmentMethodId).HasColumnName("AttachmentMethodID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ItemSourceId).HasColumnName("ItemSourceID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");
            //});

            //modelBuilder.Entity<TagPinItemSourceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TagPinItemSource_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TagPinPlacementPoints>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");

            //    entity.Property(e => e.TagPinId).HasColumnName("TagPinID");
            //});

            //modelBuilder.Entity<TagPinPlacementSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TagPinPlacement_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TansactionSetup>(entity =>
            //{
            //    entity.ToTable("Tansaction_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<TargetDomainMessage>(entity =>
            //{
            //    entity.ToTable("TargetDomain_Message");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GeneratedMessageId).HasColumnName("GeneratedMessageID");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.TargetDomainId).HasColumnName("TargetDomainID");

            //    entity.Property(e => e.ViewingDate).HasColumnType("datetime");

            //    entity.HasOne(d => d.TargetDomain)
            //        .WithMany(p => p.TargetDomainMessage)
            //        .HasForeignKey(d => d.TargetDomainId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TargetDomain_Message_TargetDomain_Setup");
            //});

            //modelBuilder.Entity<TargetDomainSetup>(entity =>
            //{
            //    entity.ToTable("TargetDomain_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.MessageId).HasColumnName("MessageID");

            //    entity.Property(e => e.TargetDomainId).HasColumnName("TargetDomainID");

            //    entity.Property(e => e.TargetUserId).HasColumnName("TargetUserID");

            //    entity.HasOne(d => d.Message)
            //        .WithMany(p => p.TargetDomainSetup)
            //        .HasForeignKey(d => d.MessageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TargetDomain_Setup_ExceptionMessages_Setup");
            //});

            //modelBuilder.Entity<TblCategory>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_Category");

            //    entity.Property(e => e.Category)
            //        .HasColumnName("category")
            //        .HasMaxLength(255);

            //    entity.Property(e => e.CategoryId)
            //        .HasColumnName("Category_ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TblCostingVariable>(entity =>
            //{
            //    entity.HasKey(e => e.CostingVariableId);

            //    entity.ToTable("Tbl_CostingVariable");

            //    entity.Property(e => e.CostingVariableId)
            //        .HasColumnName("Costing_VariableID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.CostingVariableDesc)
            //        .HasColumnName("Costing_VariableDesc")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TblCostingVariableValues>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_CostingVariableValues");

            //    entity.Property(e => e.CostingCompanyId).HasColumnName("Costing_CompanyId");

            //    entity.Property(e => e.CostingMonth).HasColumnName("Costing_Month");

            //    entity.Property(e => e.CostingProfitCenter).HasColumnName("Costing_ProfitCenter");

            //    entity.Property(e => e.CostingValue)
            //        .HasColumnName("Costing_Value")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.CostingVariableId).HasColumnName("Costing_VariableID");

            //    entity.Property(e => e.CostingYear).HasColumnName("Costing_Year");
            //});

            //modelBuilder.Entity<TblFabricCostingCache>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TBL_FabricCosting_Cache");

            //    entity.HasIndex(e => new { e.StyleId, e.VersionId })
            //        .HasName("IND_TBL_FabricCosting_Cache_1");

            //    entity.Property(e => e.FinishFabricCost).HasColumnType("decimal(16, 4)");

            //    entity.Property(e => e.GreigeFabricCost).HasColumnType("decimal(16, 4)");

            //    entity.Property(e => e.KnittingRate).HasColumnType("decimal(16, 4)");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TotalYarnRate).HasColumnType("decimal(16, 4)");

            //    entity.Property(e => e.VersionId).HasColumnName("versionID");
            //});

            //modelBuilder.Entity<TblFabricOrderSheet>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_FabricOrderSheet");

            //    entity.Property(e => e.Aopdate)
            //        .HasColumnName("AOPDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.DeliveryClosed).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricConsumption).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.FabricConsumptionGroup).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.FabricDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricSpecTypeDesc)
            //        .IsRequired()
            //        .HasMaxLength(190)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricTrim)
            //        .IsRequired()
            //        .HasMaxLength(125)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Fquality)
            //        .IsRequired()
            //        .HasColumnName("FQuality")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ftype)
            //        .IsRequired()
            //        .HasColumnName("FType")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.KnittingDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ShellId).HasColumnName("ShellID");

            //    entity.Property(e => e.StyleDescription)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<TblFabricOrderSheet123>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_FabricOrderSheet123");

            //    entity.Property(e => e.Aopdate)
            //        .HasColumnName("AOPDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricSpecTypeDesc)
            //        .IsRequired()
            //        .HasMaxLength(190)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricTrim)
            //        .IsRequired()
            //        .HasMaxLength(125)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Fquality)
            //        .IsRequired()
            //        .HasColumnName("FQuality")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ftype)
            //        .IsRequired()
            //        .HasColumnName("FType")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.KnittingDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ShellId).HasColumnName("ShellID");

            //    entity.Property(e => e.StyleDescription)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<TblFabricOrderSheetBk15thMay2016>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_FabricOrderSheet_Bk15thMay2016");

            //    entity.Property(e => e.Aopdate)
            //        .HasColumnName("AOPDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.DeliveryDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricComposition)
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.FabricSpecTypeDesc)
            //        .IsRequired()
            //        .HasMaxLength(190)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricTrim)
            //        .IsRequired()
            //        .HasMaxLength(125)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Fquality)
            //        .IsRequired()
            //        .HasColumnName("FQuality")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ftype)
            //        .IsRequired()
            //        .HasColumnName("FType")
            //        .HasMaxLength(150)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.KnittingDate).HasColumnType("smalldatetime");

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ShellId).HasColumnName("ShellID");

            //    entity.Property(e => e.StyleDescription)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<TblGreigeWastage>(entity =>
            //{
            //    entity.ToTable("Tbl_greigeWastage");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricComposition)
            //        .HasColumnName("Fabric Composition")
            //        .HasMaxLength(250)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TblLcCache>(entity =>
            //{
            //    entity.HasKey(e => e.Lcmainid);

            //    entity.ToTable("Tbl_LC_Cache");

            //    entity.Property(e => e.Lcmainid).HasColumnName("LCMAINID");

            //    entity.Property(e => e.BankName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Companyname)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Currencysymbol)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.LcaldAmount).HasColumnName("LCALD_Amount");

            //    entity.Property(e => e.LcaldBankId).HasColumnName("LCALD_BankID");

            //    entity.Property(e => e.LcaldBtblcno)
            //        .HasColumnName("LCALD_BTBLCNo")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LcaldCompanyId).HasColumnName("LCALD_CompanyID");

            //    entity.Property(e => e.LcaldCurrencyId).HasColumnName("LCALD_CurrencyID");

            //    entity.Property(e => e.LcaldCurrencyRate).HasColumnName("LCALD_CurrencyRate");

            //    entity.Property(e => e.LcaldDescription)
            //        .IsRequired()
            //        .HasColumnName("LCALD_Description")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldLcdate)
            //        .HasColumnName("LCALD_LCDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldLctype)
            //        .IsRequired()
            //        .HasColumnName("LCALD_LCType")
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldMasterLcSalesContract).HasColumnName("LCALD_MasterLC_SalesContract");

            //    entity.Property(e => e.LcaldVendorId).HasColumnName("LCALD_VendorID");

            //    entity.Property(e => e.Lctype).HasColumnName("LCTYPE");

            //    entity.Property(e => e.LmcBankLcdate)
            //        .HasColumnName("LMC_BankLCDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LmcCode)
            //        .HasColumnName("LMC_CODE")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcDateofexpiry)
            //        .HasColumnName("LMC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcVendorpivalue)
            //        .HasColumnName("LMC_VENDORPIVALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pivalue)
            //        .HasColumnName("PIValue")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.Suppliername)
            //        .HasColumnName("suppliername")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TblMapping>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_Mapping");

            //    entity.Property(e => e.BarCode1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BarCode2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BuildingId).HasColumnName("BuildingID");

            //    entity.Property(e => e.DeviceId).HasColumnName("DeviceID");

            //    entity.Property(e => e.FloorId).HasColumnName("FloorID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LineId).HasColumnName("LineID");

            //    entity.Property(e => e.PullTime)
            //        .HasColumnType("smalldatetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.ScanDatetime).HasColumnType("smalldatetime");
            //});

            //modelBuilder.Entity<TblMappingMachine>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_Mapping_Machine");

            //    entity.Property(e => e.BarCode1)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BarCode2)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BuildingId).HasColumnName("BuildingID");

            //    entity.Property(e => e.DeviceId).HasColumnName("DeviceID");

            //    entity.Property(e => e.FloorId).HasColumnName("FloorID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.LineId).HasColumnName("LineID");

            //    entity.Property(e => e.Locationid).HasColumnName("LOCATIONID");

            //    entity.Property(e => e.PullTime).HasColumnType("smalldatetime");

            //    entity.Property(e => e.ScanDatetime).HasColumnType("smalldatetime");

            //    entity.Property(e => e.SectionId).HasColumnName("SectionID");
            //});

            //modelBuilder.Entity<TblOrderPono>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("tbl_order_pono");

            //    entity.Property(e => e.Creationdate)
            //        .HasColumnName("creationdate")
            //        .HasColumnType("smalldatetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Orderid).HasColumnName("orderid");

            //    entity.Property(e => e.Pono)
            //        .HasColumnName("pono")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Styleid).HasColumnName("styleid");
            //});

            //modelBuilder.Entity<TblProfitCenters>(entity =>
            //{
            //    entity.HasKey(e => e.ProfitId);

            //    entity.ToTable("Tbl_ProfitCenters");

            //    entity.Property(e => e.ProfitId).HasColumnName("Profit_ID");

            //    entity.Property(e => e.ProfitCenter)
            //        .HasColumnName("Profit_Center")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProfitCompanyId).HasColumnName("Profit_CompanyID");
            //});

            //modelBuilder.Entity<TblSampleType>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_sample_type");

            //    entity.Property(e => e.SampleType)
            //        .HasColumnName("Sample_type")
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Sampletypeid).ValueGeneratedOnAdd();

            //    entity.Property(e => e.Status).HasColumnName("status");
            //});

            //modelBuilder.Entity<TblTempForChecking>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("tbl_tempForChecking");

            //    entity.Property(e => e.Xmlstring)
            //        .HasColumnName("XMLString")
            //        .HasColumnType("xml");
            //});

            //modelBuilder.Entity<TblTexting>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Tbl_Texting");

            //    entity.Property(e => e.ContractDate).HasColumnType("datetime");

            //    entity.Property(e => e.ContractName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabComposition)
            //        .IsRequired()
            //        .HasColumnName("FAB_COMPOSITION")
            //        .HasMaxLength(80)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fabid).HasColumnName("FABID");

            //    entity.Property(e => e.FabricQuality)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FaricType)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Gsm).HasColumnName("GSM");

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Qualityid).HasColumnName("QUALITYID");

            //    entity.Property(e => e.RatePerKg).HasColumnName("RatePerKG");

            //    entity.Property(e => e.Typeid).HasColumnName("TYPEID");

            //    entity.Property(e => e.YarnKncontractId).HasColumnName("YarnKNContractID");
            //});

            //modelBuilder.Entity<TechnicalCommentsImagesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TechnicalComments_Images_Setup");

            //    entity.Property(e => e.ImageId)
            //        .HasColumnName("ImageID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(250)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TechCommentId).HasColumnName("TechCommentID");
            //});

            //modelBuilder.Entity<TechnicalInstructionsCommentsSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TechnicalInstructionsComments_Setup");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.TechCommentId).HasColumnName("TechCommentID");

            //    entity.Property(e => e.TechComments)
            //        .IsRequired()
            //        .HasMaxLength(500)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TechInstructionId).HasColumnName("TechInstructionID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<TechnicalInstructionsMainSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TechnicalInstructionsMain_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TempDcCache>(entity =>
            //{
            //    entity.HasKey(e => e.Intx);

            //    entity.ToTable("Temp_DC_Cache");

            //    entity.Property(e => e.FabAttributeInstanceId).HasColumnName("FabAttributeInstanceID");

            //    entity.Property(e => e.Kg)
            //        .HasColumnName("KG")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .IsUnicode(false);

            //    entity.Property(e => e.SessionId)
            //        .IsRequired()
            //        .HasColumnName("SessionID")
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<TempMarkers>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Temp_Markers");

            //    entity.Property(e => e.MarkerId).HasColumnName("MarkerID");
            //});

            //modelBuilder.Entity<TempMarkers2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Temp_Markers2");

            //    entity.Property(e => e.MarkerId).HasColumnName("MarkerID");
            //});

            //modelBuilder.Entity<TempTable>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");
            //});

            //modelBuilder.Entity<TempTable1>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.GarmentTypeId).HasColumnName("GarmentTypeID");

            //    entity.Property(e => e.GenderId).HasColumnName("GenderID");

            //    entity.Property(e => e.PlacementPointId).HasColumnName("PlacementPointID");
            //});

            //modelBuilder.Entity<TempTable2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.MavalueDescription)
            //        .HasColumnName("MAValueDescription")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MavalueId).HasColumnName("MAValueID");

            //    entity.Property(e => e.Mname)
            //        .HasColumnName("MName")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.Msodate)
            //        .HasColumnName("MSODate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.Msomid).HasColumnName("MSOMID");

            //    entity.Property(e => e.Picture).HasMaxLength(1);

            //    entity.Property(e => e.ReceiptDate).HasColumnType("datetime");

            //    entity.Property(e => e.ReferenceNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Remarks)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimInventoryId).HasColumnName("TrimInventoryID");
            //});

            //modelBuilder.Entity<TempTable3>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Picture).HasMaxLength(1);
            //});

            //modelBuilder.Entity<TempVariationColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("tempVariationColor");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ModelNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pantone)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RubraColor)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<TempXmlstorage>(entity =>
            //{
            //    entity.ToTable("TempXMLStorage");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.AccessTime)
            //        .HasColumnType("datetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Xmldata)
            //        .IsRequired()
            //        .HasColumnName("XMLData")
            //        .HasColumnType("ntext");
            //});

            //modelBuilder.Entity<Tempfarhan>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("tempfarhan");

            //    entity.Property(e => e.A).HasColumnName("a");

            //    entity.Property(e => e.B).HasColumnName("b");

            //    entity.Property(e => e.C).HasColumnName("c");

            //    entity.Property(e => e.D).HasColumnName("d");

            //    entity.Property(e => e.E).HasColumnName("e");

            //    entity.Property(e => e.F).HasColumnName("f");

            //    entity.Property(e => e.H)
            //        .HasColumnName("h")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("id");
            //});

            //modelBuilder.Entity<Temtable>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<TermOfPaymentSetup>(entity =>
            //{
            //    entity.HasKey(e => e.Topid);

            //    entity.ToTable("TermOfPayment_Setup");

            //    entity.Property(e => e.Topid).HasColumnName("TOPID");

            //    entity.Property(e => e.Topdesc)
            //        .IsRequired()
            //        .HasColumnName("TOPDesc")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TestSchedule>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Abc).HasColumnName("abc");

            //    entity.Property(e => e.Ert).HasColumnName("ert");

            //    entity.Property(e => e.Farhan).HasColumnName("farhan");

            //    entity.Property(e => e.ReferenceNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status).HasColumnName("status");

            //    entity.Property(e => e.Time).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<ThreadColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.ThreadColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_ThreadColor_FabricSpecificationColor1");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ThreadColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ThreadColor_ThreadSpecification1");
            //});

            //modelBuilder.Entity<ThreadColor2>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.ThreadColor2)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_ThreadColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.ThreadColor2)
            //        .HasForeignKey(d => d.MatchId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ThreadColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ThreadColor2)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ThreadColor_ThreadSpecification");
            //});

            //modelBuilder.Entity<ThreadCostSetup>(entity =>
            //{
            //    entity.ToTable("ThreadCost_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.ThreadCountId).HasColumnName("ThreadCountID");

            //    entity.Property(e => e.ThreadMaterialId).HasColumnName("ThreadMaterialID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<ThreadCountSetup>(entity =>
            //{
            //    entity.ToTable("ThreadCount_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ThreadMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ThreadMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ThreadPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.DirectionId).HasColumnName("DirectionID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Direction)
            //        .WithMany(p => p.ThreadPlacementInstruction)
            //        .HasForeignKey(d => d.DirectionId)
            //        .HasConstraintName("FK_ThreadPlacementInstruction_KajjingDirection_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ThreadPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ThreadPlacementInstruction_ThreadSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.ThreadPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .HasConstraintName("FK_ThreadPlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<ThreadPurposeSetup>(entity =>
            //{
            //    entity.ToTable("ThreadPurpose_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(60)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ThreadSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CountId).HasColumnName("CountID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.Property(e => e.ProcurementUnitId).HasColumnName("ProcurementUnitID");

            //    entity.Property(e => e.SelectedPurposeId).HasColumnName("SelectedPurposeID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");
            //});

            //modelBuilder.Entity<TieDyedSpotDyedSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.DyeingTypeId).HasColumnName("DyeingTypeID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProcessLocation)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TippingXml>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TippingXML");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.TippingXml1)
            //        .HasColumnName("TippingXML")
            //        .HasColumnType("ntext");
            //});

            //modelBuilder.Entity<TissuePaper>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ItemSourceId).HasColumnName("ItemSourceID");

            //    entity.Property(e => e.OrderId).HasColumnName("OrderID");

            //    entity.Property(e => e.PrintImageId).HasColumnName("PrintImageID");

            //    entity.Property(e => e.SelectedPackingAccessoriesId).HasColumnName("SelectedPackingAccessoriesID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<TissuePaperItemSourceSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TissuePaperItemSource_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TissuePaperPlacement>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PlacementId).HasColumnName("PlacementID");

            //    entity.Property(e => e.TissuePaperId).HasColumnName("TissuePaperID");
            //});

            //modelBuilder.Entity<TissuePaperPlacementSetup>(entity =>
            //{
            //    entity.ToTable("TissuePaperPlacement_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Placement)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TissuePaperPrintingSetup>(entity =>
            //{
            //    entity.ToTable("TissuePaperPrinting_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TissuePrintImagesSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TissuePrintImages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.PicturePath)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TransactionLogSetup>(entity =>
            //{
            //    entity.ToTable("TransactionLog_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TrimAdjustmentDetail>(entity =>
            //{
            //    entity.HasKey(e => e.TadjustmentDid);

            //    entity.Property(e => e.TadjustmentDid).HasColumnName("TAdjustmentDID");

            //    entity.Property(e => e.MadjustmentMid).HasColumnName("MAdjustmentMID");

            //    entity.Property(e => e.MadjustmentReasonId).HasColumnName("MAdjustmentReasonID");

            //    entity.Property(e => e.TrimIqid).HasColumnName("TrimIQID");

            //    entity.HasOne(d => d.TrimIq)
            //        .WithMany(p => p.TrimAdjustmentDetail)
            //        .HasForeignKey(d => d.TrimIqid)
            //        .HasConstraintName("FK_TrimAdjustmentDetail_TrimInventoryQuantity");
            //});

            //modelBuilder.Entity<TrimCategorySetup>(entity =>
            //{
            //    entity.ToTable("TrimCategory_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TrimCodeSetup>(entity =>
            //{
            //    entity.HasKey(e => e.TrimCodeId);

            //    entity.HasIndex(e => e.TrimCode)
            //        .HasName("IX_TrimCodeSetup_1")
            //        .IsUnique();

            //    entity.Property(e => e.TrimCodeId).HasColumnName("TrimCodeID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Price).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.TrimCode)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimCodeFragment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.Trim)
            //        .WithMany(p => p.TrimCodeSetup)
            //        .HasForeignKey(d => d.TrimId)
            //        .HasConstraintName("FK_TrimCodeSetup_Trim_Setup");
            //});

            //modelBuilder.Entity<TrimInsertionSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TrimInsertion_Setup");

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.Insertion)
            //        .WithMany(p => p.TrimInsertionSetup)
            //        .HasForeignKey(d => d.InsertionId)
            //        .HasConstraintName("FK_TrimInsertion_Setup_Insertion_Setup");

            //    entity.HasOne(d => d.Trim)
            //        .WithMany(p => p.TrimInsertionSetup)
            //        .HasForeignKey(d => d.TrimId)
            //        .HasConstraintName("FK_TrimInsertion_Setup_Trim_Setup");
            //});

            //modelBuilder.Entity<TrimInspectionDetail>(entity =>
            //{
            //    entity.HasKey(e => e.TrimInspectionDid);

            //    entity.Property(e => e.TrimInspectionDid).HasColumnName("TrimInspectionDID");

            //    entity.Property(e => e.MinspectionMid).HasColumnName("MInspectionMID");

            //    entity.Property(e => e.ReasonId).HasColumnName("ReasonID");

            //    entity.Property(e => e.ShipmentId).HasColumnName("ShipmentID");

            //    entity.Property(e => e.StoreLocationId).HasColumnName("StoreLocationID");

            //    entity.Property(e => e.TrimInspectionResultId).HasColumnName("TrimInspectionResultID");

            //    entity.Property(e => e.TrimIqid).HasColumnName("TrimIQID");

            //    entity.HasOne(d => d.Reason)
            //        .WithMany(p => p.TrimInspectionDetail)
            //        .HasForeignKey(d => d.ReasonId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimInspectionDetail_Reason_Setup");

            //    entity.HasOne(d => d.StoreLocation)
            //        .WithMany(p => p.TrimInspectionDetail)
            //        .HasForeignKey(d => d.StoreLocationId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimInspectionDetail_StoreLocation_Setup");

            //    entity.HasOne(d => d.TrimInspectionResult)
            //        .WithMany(p => p.TrimInspectionDetail)
            //        .HasForeignKey(d => d.TrimInspectionResultId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimInspectionDetail_TrimInspectionResult_Setup");

            //    entity.HasOne(d => d.TrimIq)
            //        .WithMany(p => p.TrimInspectionDetail)
            //        .HasForeignKey(d => d.TrimIqid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimInspectionDetail_TrimInventoryQuantity");
            //});

            //modelBuilder.Entity<TrimInspectionResultSetup>(entity =>
            //{
            //    entity.HasKey(e => e.TrimInspectionResultId);

            //    entity.ToTable("TrimInspectionResult_Setup");

            //    entity.Property(e => e.TrimInspectionResultId).HasColumnName("TrimInspectionResultID");

            //    entity.Property(e => e.InspectionResultDesc)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TrimInventory>(entity =>
            //{
            //    entity.Property(e => e.TrimInventoryId).HasColumnName("TrimInventoryID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.ReceiptDate).HasColumnType("datetime");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<TrimInventoryQuantity>(entity =>
            //{
            //    entity.HasKey(e => e.TrimIqid);

            //    entity.Property(e => e.TrimIqid).HasColumnName("TrimIQID");

            //    entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Sdrno)
            //        .HasColumnName("SDRNo")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.StoreLocationId).HasColumnName("StoreLocationID");

            //    entity.Property(e => e.TrimInventoryId).HasColumnName("TrimInventoryID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.HasOne(d => d.StoreLocation)
            //        .WithMany(p => p.TrimInventoryQuantity)
            //        .HasForeignKey(d => d.StoreLocationId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_TrimInventoryQuantity_StoreLocation_Setup");

            //    entity.HasOne(d => d.TrimInventory)
            //        .WithMany(p => p.TrimInventoryQuantity)
            //        .HasForeignKey(d => d.TrimInventoryId)
            //        .HasConstraintName("FK_TrimInventoryQuantity_TrimInventory");

            //    entity.HasOne(d => d.Unit)
            //        .WithMany(p => p.TrimInventoryQuantity)
            //        .HasForeignKey(d => d.UnitId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimInventoryQuantity_MRPItemUnits");
            //});

            //modelBuilder.Entity<TrimIssueDetail>(entity =>
            //{
            //    entity.HasKey(e => e.TrimIssueDid);

            //    entity.Property(e => e.TrimIssueDid).HasColumnName("TrimIssueDID");

            //    entity.Property(e => e.TrimIqid).HasColumnName("TrimIQID");

            //    entity.Property(e => e.TrimIssueMid).HasColumnName("TrimIssueMID");

            //    entity.HasOne(d => d.TrimIq)
            //        .WithMany(p => p.TrimIssueDetail)
            //        .HasForeignKey(d => d.TrimIqid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimIssueDetail_TrimInventoryQuantity");

            //    entity.HasOne(d => d.TrimIssueM)
            //        .WithMany(p => p.TrimIssueDetail)
            //        .HasForeignKey(d => d.TrimIssueMid)
            //        .HasConstraintName("FK_TrimIssueDetail_TrimIssueMaster");
            //});

            //modelBuilder.Entity<TrimIssueMaster>(entity =>
            //{
            //    entity.HasKey(e => e.TrimIssueMid);

            //    entity.Property(e => e.TrimIssueMid).HasColumnName("TrimIssueMID");

            //    entity.Property(e => e.Destination)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IssueDate).HasColumnType("datetime");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.OutGatePass)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReasonId).HasColumnName("ReasonID");

            //    entity.Property(e => e.ReceivingPerson)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimIssuePurposeId).HasColumnName("TrimIssuePurposeID");

            //    entity.Property(e => e.UnitDeptId).HasColumnName("UnitDeptID");

            //    entity.Property(e => e.VehicleNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Reason)
            //        .WithMany(p => p.TrimIssueMaster)
            //        .HasForeignKey(d => d.ReasonId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_TrimIssueMaster_Reason_Setup");

            //    entity.HasOne(d => d.TrimIssuePurpose)
            //        .WithMany(p => p.TrimIssueMaster)
            //        .HasForeignKey(d => d.TrimIssuePurposeId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_TrimIssueMaster_TrimIssuePurpose_Setup");

            //    entity.HasOne(d => d.UnitDept)
            //        .WithMany(p => p.TrimIssueMaster)
            //        .HasForeignKey(d => d.UnitDeptId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_TrimIssueMaster_UnitDepartment_Setup");
            //});

            //modelBuilder.Entity<TrimIssuePurposeSetup>(entity =>
            //{
            //    entity.HasKey(e => e.PurposeId);

            //    entity.ToTable("TrimIssuePurpose_Setup");

            //    entity.Property(e => e.PurposeId).HasColumnName("PurposeID");

            //    entity.Property(e => e.PurposeDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TrimMeasurementScaleSetup>(entity =>
            //{
            //    entity.ToTable("TrimMeasurementScale_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.MeasurementScaleId).HasColumnName("MeasurementScaleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.MeasurementScale)
            //        .WithMany(p => p.TrimMeasurementScaleSetup)
            //        .HasForeignKey(d => d.MeasurementScaleId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimMeasurementScale_Setup_MeasurementScale_Setup");
            //});

            //modelBuilder.Entity<TrimPlacementInstructionSetup>(entity =>
            //{
            //    entity.ToTable("TrimPlacementInstruction_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.HasOne(d => d.Trim)
            //        .WithMany(p => p.TrimPlacementInstructionSetup)
            //        .HasForeignKey(d => d.TrimId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPlacementInstruction_Setup_Trim_Setup");
            //});

            //modelBuilder.Entity<TrimPodeliveries>(entity =>
            //{
            //    entity.HasKey(e => e.TpodeliveriesId);

            //    entity.ToTable("TrimPODeliveries");

            //    entity.Property(e => e.TpodeliveriesId)
            //        .HasColumnName("TPODeliveriesID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.DayId).HasColumnName("DayID");

            //    entity.Property(e => e.ReceivingStoreId).HasColumnName("ReceivingStoreID");

            //    entity.Property(e => e.Tpodid).HasColumnName("TPODID");

            //    entity.HasOne(d => d.ReceivingStore)
            //        .WithMany(p => p.TrimPodeliveries)
            //        .HasForeignKey(d => d.ReceivingStoreId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPODeliveries_Store_Setup");

            //    entity.HasOne(d => d.Tpod)
            //        .WithMany(p => p.TrimPodeliveries)
            //        .HasForeignKey(d => d.Tpodid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPODeliveries_TrimPODetail");
            //});

            //modelBuilder.Entity<TrimPodetail>(entity =>
            //{
            //    entity.HasKey(e => e.Tpodid);

            //    entity.ToTable("TrimPODetail");

            //    entity.Property(e => e.Tpodid)
            //        .HasColumnName("TPODID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Gst).HasColumnName("GST");

            //    entity.Property(e => e.Tpomid).HasColumnName("TPOMID");

            //    entity.Property(e => e.Trmdid).HasColumnName("TRMDID");

            //    entity.HasOne(d => d.Tpom)
            //        .WithMany(p => p.TrimPodetail)
            //        .HasForeignKey(d => d.Tpomid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPODetail_TrimPOMaster");

            //    entity.HasOne(d => d.Trmd)
            //        .WithMany(p => p.TrimPodetail)
            //        .HasForeignKey(d => d.Trmdid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPODetail_TrimRequisitionModelDetails");
            //});

            //modelBuilder.Entity<TrimPomaster>(entity =>
            //{
            //    entity.HasKey(e => e.Tpomid);

            //    entity.ToTable("TrimPOMaster");

            //    entity.Property(e => e.Tpomid)
            //        .HasColumnName("TPOMID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ModeOfPaymentId).HasColumnName("ModeOfPaymentID");

            //    entity.Property(e => e.Person)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Podate)
            //        .HasColumnName("PODate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.Pono)
            //        .IsRequired()
            //        .HasColumnName("PONo")
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Prreference)
            //        .HasColumnName("PRReference")
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.QuotationReference)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TermsOfPaymentId).HasColumnName("TermsOfPaymentID");

            //    entity.Property(e => e.VendorSetupId).HasColumnName("Vendor_setupID");

            //    entity.HasOne(d => d.ModeOfPayment)
            //        .WithMany(p => p.TrimPomaster)
            //        .HasForeignKey(d => d.ModeOfPaymentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPOMaster_ModeOfPayment_Setup");

            //    entity.HasOne(d => d.TermsOfPayment)
            //        .WithMany(p => p.TrimPomaster)
            //        .HasForeignKey(d => d.TermsOfPaymentId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPOMaster_TermOfPayment_Setup");

            //    entity.HasOne(d => d.VendorSetup)
            //        .WithMany(p => p.TrimPomaster)
            //        .HasForeignKey(d => d.VendorSetupId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimPOMaster_Vendor_setup");
            //});

            //modelBuilder.Entity<TrimReceiptDetail>(entity =>
            //{
            //    entity.Property(e => e.TrimReceiptDetailId).HasColumnName("TrimReceiptDetailID");

            //    entity.Property(e => e.Mrmid).HasColumnName("MRMID");

            //    entity.Property(e => e.TrimInventoryId).HasColumnName("TrimInventoryID");
            //});

            //modelBuilder.Entity<TrimRequisitionDetail>(entity =>
            //{
            //    entity.HasKey(e => e.Trdid);

            //    entity.Property(e => e.Trdid)
            //        .HasColumnName("TRDID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.Trmid).HasColumnName("TRMID");

            //    entity.HasOne(d => d.Trm)
            //        .WithMany(p => p.TrimRequisitionDetail)
            //        .HasForeignKey(d => d.Trmid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimRequisitionDetail_TrimRequisitionMaster");
            //});

            //modelBuilder.Entity<TrimRequisitionMaster>(entity =>
            //{
            //    entity.HasKey(e => e.Trmid);

            //    entity.Property(e => e.Trmid).HasColumnName("TRMID");

            //    entity.Property(e => e.OrderNo)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PreparedBy)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RequestFrom)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RequisitionDate).HasColumnType("datetime");

            //    entity.Property(e => e.Status).HasDefaultValueSql("(0)");
            //});

            //modelBuilder.Entity<TrimRequisitionModelDetails>(entity =>
            //{
            //    entity.HasKey(e => e.Trmdid);

            //    entity.Property(e => e.Trmdid)
            //        .HasColumnName("TRMDID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ModelNo)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.RequiredDayId).HasColumnName("RequiredDayID");

            //    entity.Property(e => e.Trdid).HasColumnName("TRDID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.HasOne(d => d.Trd)
            //        .WithMany(p => p.TrimRequisitionModelDetails)
            //        .HasForeignKey(d => d.Trdid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimRequisitionModelDetails_TrimRequisitionDetail");
            //});

            //modelBuilder.Entity<TrimReturnDetail>(entity =>
            //{
            //    entity.HasKey(e => e.TrimReturnDid)
            //        .HasName("PK_TrimRetrunDetail");

            //    entity.Property(e => e.TrimReturnDid).HasColumnName("TrimReturnDID");

            //    entity.Property(e => e.MreturnMid).HasColumnName("MReturnMID");

            //    entity.Property(e => e.TrimIqid).HasColumnName("TrimIQID");

            //    entity.HasOne(d => d.TrimIq)
            //        .WithMany(p => p.TrimReturnDetail)
            //        .HasForeignKey(d => d.TrimIqid)
            //        .HasConstraintName("FK_TrimRetrunDetail_TrimInventoryQuantity");
            //});

            //modelBuilder.Entity<TrimSetup>(entity =>
            //{
            //    entity.ToTable("Trim_Setup");

            //    entity.HasIndex(e => e.MrpitemCode)
            //        .HasName("IX_Trim_Setup")
            //        .IsUnique();

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Abbrievation)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DisplayPage)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.HomePage)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.IsDisplay)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MrpitemCode)
            //        .IsRequired()
            //        .HasColumnName("MRPItemCode");

            //    entity.Property(e => e.TrimCategoryId).HasColumnName("TrimCategoryID");

            //    entity.Property(e => e.TrimTypeId).HasColumnName("TrimTypeID");

            //    entity.HasOne(d => d.TrimCategory)
            //        .WithMany(p => p.TrimSetup)
            //        .HasForeignKey(d => d.TrimCategoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_Trim_Setup_TrimCategory_Setup");
            //});

            //modelBuilder.Entity<TrimSpecification>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.InsertionId).HasColumnName("InsertionID");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TrimObjectId).HasColumnName("TrimObjectID");
            //});

            //modelBuilder.Entity<TrimStatusSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TrimStatus_Setup");

            //    entity.Property(e => e.StatusDescription)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StatusId)
            //        .HasColumnName("StatusID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TrimStockOpeningDetail>(entity =>
            //{
            //    entity.HasKey(e => e.TrimSodid);

            //    entity.Property(e => e.TrimSodid).HasColumnName("TrimSODID");

            //    entity.Property(e => e.Msomid).HasColumnName("MSOMID");

            //    entity.Property(e => e.TrimInventoryId).HasColumnName("TrimInventoryID");

            //    entity.HasOne(d => d.TrimInventory)
            //        .WithMany(p => p.TrimStockOpeningDetail)
            //        .HasForeignKey(d => d.TrimInventoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TrimStockOpeningDetail_TrimInventory");
            //});

            //modelBuilder.Entity<TrimStoresSetup>(entity =>
            //{
            //    entity.ToTable("TrimStores_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<TrimTransactionLog>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Ipaddress)
            //        .HasColumnName("IPAddress")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TransactionDate)
            //        .HasColumnType("datetime")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.TransactionId).HasColumnName("TransactionID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<TrimTransferDetail>(entity =>
            //{
            //    entity.HasKey(e => e.TtransferDid);

            //    entity.Property(e => e.TtransferDid).HasColumnName("TTransferDID");

            //    entity.Property(e => e.DestinationLocationId).HasColumnName("DestinationLocationID");

            //    entity.Property(e => e.MtransferMid).HasColumnName("MTransferMID");

            //    entity.Property(e => e.SourceTrimIqid).HasColumnName("SourceTrimIQID");

            //    entity.HasOne(d => d.SourceTrimIq)
            //        .WithMany(p => p.TrimTransferDetail)
            //        .HasForeignKey(d => d.SourceTrimIqid)
            //        .HasConstraintName("FK_TrimTransferDetail_TrimInventoryQuantity");
            //});

            //modelBuilder.Entity<TrimTypeWiseWastageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TrimTypeWiseWastage_setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.TrimTypeId).HasColumnName("TrimTypeID");
            //});

            //modelBuilder.Entity<TrimUnitSetup>(entity =>
            //{
            //    entity.ToTable("TrimUnit_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TrimUnitSpecificationSetup>(entity =>
            //{
            //    entity.ToTable("TrimUnitSpecification_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<TrimVariationWiseUsage>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<TrimWastageSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TrimWastage_Setup");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.ProcurementSourceId).HasColumnName("ProcurementSourceID");

            //    entity.HasOne(d => d.MrpitemCodeNavigation)
            //        .WithMany(p => p.TrimWastageSetup)
            //        .HasPrincipalKey(p => p.MrpitemCode)
            //        .HasForeignKey(d => d.MrpitemCode)
            //        .HasConstraintName("FK_TrimWastage_Setup_Trim_Setup");
            //});

            //modelBuilder.Entity<TwillTapeColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.TwillTapeColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_TwillTapeColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.TwillTapeColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .HasConstraintName("FK_TwillTapeColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.TwillTapeColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_TwillTapeColor_TwillTapeSpecification");
            //});

            //modelBuilder.Entity<TwillTapeDyeingSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("TwillTapeDyeing_Setup");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TwillTapeImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<TwillTapeImageSetup>(entity =>
            //{
            //    entity.ToTable("TwillTapeImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WeaveId).HasColumnName("WeaveID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.TwillTapeImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TwillTapeImage_Setup_TwillTapeMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.TwillTapeImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_TwillTapeImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<TwillTapeMaterialSetup>(entity =>
            //{
            //    entity.ToTable("TwillTapeMaterial_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<TwillTapePlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.TwillTapePlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_TwillTapePlacementInstruction_TwillTapeSpecification");
            //});

            //modelBuilder.Entity<TwillTapeSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("((6))");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.WeaveId).HasColumnName("WeaveID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.TwillTapeSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .HasConstraintName("FK_TwillTapeSpecification_TwillTapeImage_Setup");

            //    entity.HasOne(d => d.Weave)
            //        .WithMany(p => p.TwillTapeSpecification)
            //        .HasForeignKey(d => d.WeaveId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TwillTapeSpecification_TwillTapeWeave_Setup");

            //    entity.HasOne(d => d.Width)
            //        .WithMany(p => p.TwillTapeSpecification)
            //        .HasForeignKey(d => d.WidthId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TwillTapeSpecification_TwillTapeWidth_Setup");
            //});

            //modelBuilder.Entity<TwillTapeStripes>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.TwillTapeId).HasColumnName("TwillTapeID");

            //    entity.Property(e => e.TwillTapeYarnId).HasColumnName("TwillTapeYarnID");

            //    entity.HasOne(d => d.TwillTape)
            //        .WithMany(p => p.TwillTapeStripes)
            //        .HasForeignKey(d => d.TwillTapeId)
            //        .HasConstraintName("FK_TwillTapeStripes_TwillTapeSpecification");
            //});

            //modelBuilder.Entity<TwillTapeUse>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.GarmentSizeRangeId).HasColumnName("GarmentSizeRangeID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.TwillTapeUse)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_TwillTapeUse_TwillTapeSpecification");
            //});

            //modelBuilder.Entity<TwillTapeWeaveSetup>(entity =>
            //{
            //    entity.ToTable("TwillTapeWeave_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TwillTapeWidthSetup>(entity =>
            //{
            //    entity.ToTable("TwillTapeWidth_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<TwillTapeYarnDyeingSetup>(entity =>
            //{
            //    entity.ToTable("TwillTapeYarnDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TwillTapeYarnSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.FabricYarnVendorColorId).HasColumnName("FabricYarnVendorColorID");

            //    entity.Property(e => e.TwillTapeId).HasColumnName("TwillTapeID");

            //    entity.Property(e => e.YarnCompositionId).HasColumnName("YarnCompositionID");

            //    entity.Property(e => e.YarnCountId).HasColumnName("YarnCountID");

            //    entity.Property(e => e.YarnDyeingId).HasColumnName("YarnDyeingID");

            //    entity.HasOne(d => d.FabricYarnVendorColor)
            //        .WithMany(p => p.TwillTapeYarnSpecification)
            //        .HasForeignKey(d => d.FabricYarnVendorColorId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_TwillTapeYarnSpecification_FabricYarnVendorColor_Setup");

            //    entity.HasOne(d => d.TwillTape)
            //        .WithMany(p => p.TwillTapeYarnSpecification)
            //        .HasForeignKey(d => d.TwillTapeId)
            //        .HasConstraintName("FK_TwillTapeYarnSpecification_TwillTapeSpecification");

            //    entity.HasOne(d => d.YarnComposition)
            //        .WithMany(p => p.TwillTapeYarnSpecification)
            //        .HasForeignKey(d => d.YarnCompositionId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_TwillTapeYarnSpecification_FabricYarnComposition_Setup");

            //    entity.HasOne(d => d.YarnCount)
            //        .WithMany(p => p.TwillTapeYarnSpecification)
            //        .HasForeignKey(d => d.YarnCountId)
            //        .HasConstraintName("FK_TwillTapeYarnSpecification_FabricYarnCount_Setup");

            //    entity.HasOne(d => d.YarnDyeing)
            //        .WithMany(p => p.TwillTapeYarnSpecification)
            //        .HasForeignKey(d => d.YarnDyeingId)
            //        .HasConstraintName("FK_TwillTapeYarnSpecification_TwillTapeYarnDyeing_Setup");
            //});

            //modelBuilder.Entity<TwillTapeYarnSpecificationColor>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.PantoneNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VendorColorId).HasColumnName("VendorColorID");

            //    entity.Property(e => e.YarnSpecificationId).HasColumnName("YarnSpecificationID");

            //    entity.HasOne(d => d.YarnSpecification)
            //        .WithMany(p => p.TwillTapeYarnSpecificationColor)
            //        .HasForeignKey(d => d.YarnSpecificationId)
            //        .HasConstraintName("FK_TwillTapeYarnSpecificationColor_TwillTapeYarnSpecification");
            //});

            //modelBuilder.Entity<Unit>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<UnitDepartmentSetup>(entity =>
            //{
            //    entity.HasKey(e => e.UnitDeptId);

            //    entity.ToTable("UnitDepartment_Setup");

            //    entity.Property(e => e.UnitDeptId).HasColumnName("UnitDeptID");

            //    entity.Property(e => e.UnitDeptDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UnitLocationId).HasColumnName("UnitLocationID");

            //    entity.HasOne(d => d.UnitLocation)
            //        .WithMany(p => p.UnitDepartmentSetup)
            //        .HasForeignKey(d => d.UnitLocationId)
            //        .HasConstraintName("FK_UnitDepartment_Setup_UnitLocation_Setup");
            //});

            //modelBuilder.Entity<UnitLocationSetup>(entity =>
            //{
            //    entity.HasKey(e => e.UnitLocationId);

            //    entity.ToTable("UnitLocation_Setup");

            //    entity.Property(e => e.UnitLocationId).HasColumnName("UnitLocationID");

            //    entity.Property(e => e.UnitLocationDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            modelBuilder.Entity<UserBuyer_Setup>(entity =>
            {
                entity.HasNoKey();

                //    entity.ToTable("UserBuyer_Setup");

                //entity.Property(e => e.BuyerId).HasColumnName("BuyerID");

                //entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            //modelBuilder.Entity<UserCss>(entity =>
            //{
            //    entity.ToTable("user_css");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status)
            //        .IsRequired()
            //        .HasDefaultValueSql("((1))");
            //});

            //modelBuilder.Entity<UserCssAssocaition>(entity =>
            //{
            //    entity.ToTable("user_css_assocaition");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.CssId).HasColumnName("CssID");

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<UserLinks>(entity =>
            //{
            //    entity.ToTable("User_Links");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Url)
            //        .IsRequired()
            //        .HasColumnName("URL")
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<UserSetup>(entity =>
            //{
            //    entity.ToTable("User_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.BusinessId).HasColumnName("BusinessID");

            //    entity.Property(e => e.CompanyId)
            //        .HasColumnName("CompanyID")
            //        .HasDefaultValueSql("(183)");

            //    entity.Property(e => e.CurrentIp)
            //        .HasColumnName("CurrentIP")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DomainId).HasColumnName("DomainID");

            //    entity.Property(e => e.FullName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LoggingStatus)
            //        .IsRequired()
            //        .HasDefaultValueSql("(0)");

            //    entity.Property(e => e.Password)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Status).HasDefaultValueSql("(5)");

            //    entity.Property(e => e.SubDomainId).HasColumnName("SubDomainID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(6)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserGroupId).HasColumnName("UserGroupID");

            //    entity.Property(e => e.UserLanguageId)
            //        .HasColumnName("UserLanguageID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.UserName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Domain)
            //        .WithMany(p => p.UserSetup)
            //        .HasForeignKey(d => d.DomainId)
            //        .HasConstraintName("FK_User_Setup_Domain_Setup");
            //});

            //modelBuilder.Entity<UserYearSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("UserYear_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.UserId).HasColumnName("UserID");
            //});

            //modelBuilder.Entity<VGw>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("v_GW");

            //    entity.Property(e => e.AssignedStyleNo)
            //        .HasMaxLength(60)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FinalSmv).HasColumnName("FinalSMV");

            //    entity.Property(e => e.GwchainId).HasColumnName("GWChainID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<VReqSheetTest>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("v_ReqSheet_Test");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.FabricId).HasColumnName("FabricID");

            //    entity.Property(e => e.Fid).HasColumnName("FID");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OrderNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ShellColorSetId).HasColumnName("ShellColorSetID");

            //    entity.Property(e => e.SizeSetId).HasColumnName("SizeSetID");

            //    entity.Property(e => e.StyleName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<VStyleColorSearch>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("v_StyleColorSearch");

            //    entity.Property(e => e.ColorId).HasColumnName("ColorID");

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.FabricTrimId).HasColumnName("FabricTrimID");
            //});

            //modelBuilder.Entity<VSummaryGwash>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("v_SummaryGWash");

            //    entity.Property(e => e.FinalSmv).HasColumnName("FinalSMV");

            //    entity.Property(e => e.GwchainId).HasColumnName("GWChainID");

            //    entity.Property(e => e.ManualSmv).HasColumnName("ManualSMV");

            //    entity.Property(e => e.Smv).HasColumnName("SMV");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");
            //});

            //modelBuilder.Entity<VTrackFabricPatternPiece>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("v_TrackFabricPatternPiece");

            //    entity.Property(e => e.BodyPart)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.PatternPiece)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PatternPieceId).HasColumnName("PatternPieceID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<ValuationClass>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ActivityId)
            //        .HasColumnName("ActivityID")
            //        .HasDefaultValueSql("(9)");

            //    entity.Property(e => e.BusinessId).HasColumnName("BusinessID");

            //    entity.Property(e => e.ClassName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CompanyId).HasColumnName("CompanyID");

            //    entity.Property(e => e.ContraClassId).HasColumnName("ContraClassID");

            //    entity.Property(e => e.CostCentreId)
            //        .HasColumnName("CostCentreID")
            //        .HasDefaultValueSql("(8)");

            //    entity.Property(e => e.LocationId).HasColumnName("LocationID");

            //    entity.Property(e => e.ParentId).HasColumnName("ParentID");
            //});

            //modelBuilder.Entity<VarianceSetup>(entity =>
            //{
            //    entity.HasKey(e => e.VarianceId);

            //    entity.ToTable("Variance_Setup");

            //    entity.Property(e => e.VarianceId).HasColumnName("VarianceID");

            //    entity.Property(e => e.VarianceDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<VariantSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Variant_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<VelcroColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.VelcroColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .HasConstraintName("FK_VelcroColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.VelcroColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_VelcroColor_VelcroSpecification");
            //});

            //modelBuilder.Entity<VelcroDyeingSetup>(entity =>
            //{
            //    entity.ToTable("VelcroDyeing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<VelcroImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<VelcroImageSetup>(entity =>
            //{
            //    entity.ToTable("VelcroImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.DyeingId).HasColumnName("DyeingID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.VelcroImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_VelcroImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<VelcroPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.VelcroPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_VelcroPlacementInstruction_VelcroSpecification");
            //});

            //modelBuilder.Entity<VelcroSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("designTypeID");

            //    entity.Property(e => e.DyedId).HasColumnName("DyedID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.Property(e => e.WidthId).HasColumnName("WidthID");

            //    entity.Property(e => e.WidthMeasurementScaleId).HasColumnName("WidthMeasurementScaleID");

            //    entity.HasOne(d => d.Dyed)
            //        .WithMany(p => p.VelcroSpecification)
            //        .HasForeignKey(d => d.DyedId)
            //        .HasConstraintName("FK_VelcroSpecification_VelcroDyeing_Setup");

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.VelcroSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_VelcroSpecification_VelcroImage_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.VelcroSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_VelcroSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.Width)
            //        .WithMany(p => p.VelcroSpecification)
            //        .HasForeignKey(d => d.WidthId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_VelcroSpecification_VelcroWidth_Setup");
            //});

            //modelBuilder.Entity<VelcroWidthSetup>(entity =>
            //{
            //    entity.ToTable("VelcroWidth_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.MeasurementScaleId)
            //        .HasColumnName("MeasurementScaleID")
            //        .HasDefaultValueSql("(1)");
            //});

            //modelBuilder.Entity<VendorSetup>(entity =>
            //{
            //    entity.ToTable("Vendor_setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SampleSuperBomid).HasColumnName("SampleSuperBOMID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");
            //});

            //modelBuilder.Entity<ViwLc>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("Viw_LC");

            //    entity.Property(e => e.BankName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Companyname)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Currencysymbol)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.LcaldAmount).HasColumnName("LCALD_Amount");

            //    entity.Property(e => e.LcaldBankId).HasColumnName("LCALD_BankID");

            //    entity.Property(e => e.LcaldBtblcno)
            //        .HasColumnName("LCALD_BTBLCNo")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LcaldCompanyId).HasColumnName("LCALD_CompanyID");

            //    entity.Property(e => e.LcaldCurrencyId).HasColumnName("LCALD_CurrencyID");

            //    entity.Property(e => e.LcaldCurrencyRate).HasColumnName("LCALD_CurrencyRate");

            //    entity.Property(e => e.LcaldDescription)
            //        .IsRequired()
            //        .HasColumnName("LCALD_Description")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldLcdate)
            //        .HasColumnName("LCALD_LCDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldLctype)
            //        .IsRequired()
            //        .HasColumnName("LCALD_LCType")
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldMasterLcSalesContract).HasColumnName("LCALD_MasterLC_SalesContract");

            //    entity.Property(e => e.LcaldVendorId).HasColumnName("LCALD_VendorID");

            //    entity.Property(e => e.Lcmainid)
            //        .HasColumnName("LCMAINID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Lctype).HasColumnName("LCTYPE");

            //    entity.Property(e => e.LmcBankLcdate)
            //        .HasColumnName("LMC_BankLCDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LmcCode)
            //        .HasColumnName("LMC_CODE")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcDateofexpiry)
            //        .HasColumnName("LMC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcVendorpivalue)
            //        .HasColumnName("LMC_VENDORPIVALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pivalue)
            //        .HasColumnName("PIValue")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.Suppliername)
            //        .HasColumnName("suppliername")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ViwLc1>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("Viw_LC_1");

            //    entity.Property(e => e.BankName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Companyname)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Currencysymbol)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.LcaldAmount).HasColumnName("LCALD_Amount");

            //    entity.Property(e => e.LcaldBankId).HasColumnName("LCALD_BankID");

            //    entity.Property(e => e.LcaldBtblcno)
            //        .HasColumnName("LCALD_BTBLCNo")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LcaldCompanyId).HasColumnName("LCALD_CompanyID");

            //    entity.Property(e => e.LcaldCurrencyId).HasColumnName("LCALD_CurrencyID");

            //    entity.Property(e => e.LcaldCurrencyRate).HasColumnName("LCALD_CurrencyRate");

            //    entity.Property(e => e.LcaldDescription)
            //        .IsRequired()
            //        .HasColumnName("LCALD_Description")
            //        .HasMaxLength(13)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldLcdate)
            //        .HasColumnName("LCALD_LCDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldLctype)
            //        .IsRequired()
            //        .HasColumnName("LCALD_LCType")
            //        .HasMaxLength(6)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldMasterLcSalesContract).HasColumnName("LCALD_MasterLC_SalesContract");

            //    entity.Property(e => e.LcaldVendorId).HasColumnName("LCALD_VendorID");

            //    entity.Property(e => e.Lctype).HasColumnName("LCTYPE");

            //    entity.Property(e => e.LmcBankLcdate)
            //        .HasColumnName("LMC_BankLCDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LmcCode)
            //        .HasColumnName("LMC_CODE")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcDateofexpiry)
            //        .HasColumnName("LMC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcVendorpivalue)
            //        .HasColumnName("LMC_VENDORPIVALUE")
            //        .HasColumnType("numeric(20, 6)");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pivalue)
            //        .HasColumnName("PIValue")
            //        .HasColumnType("numeric(20, 6)");

            //    entity.Property(e => e.Suppliername)
            //        .HasColumnName("suppliername")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ViwLcothers>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("Viw_LCOthers");

            //    entity.Property(e => e.BankName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Companyname)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Currencysymbol)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.LcaldAmount)
            //        .HasColumnName("LCALD_Amount")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcaldBankId).HasColumnName("LCALD_BankID");

            //    entity.Property(e => e.LcaldBtblcno)
            //        .HasColumnName("LCALD_BTBLCNo")
            //        .HasMaxLength(100);

            //    entity.Property(e => e.LcaldCompanyId).HasColumnName("LCALD_CompanyID");

            //    entity.Property(e => e.LcaldCurrencyId).HasColumnName("LCALD_CurrencyID");

            //    entity.Property(e => e.LcaldCurrencyRate)
            //        .HasColumnName("LCALD_CurrencyRate")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.LcaldDescription)
            //        .IsRequired()
            //        .HasColumnName("LCALD_Description")
            //        .HasMaxLength(11)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldLcdate)
            //        .HasColumnName("LCALD_LCDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldLctype)
            //        .IsRequired()
            //        .HasColumnName("LCALD_LCType")
            //        .HasMaxLength(6)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldMasterLcSalesContract).HasColumnName("LCALD_MasterLC_SalesContract");

            //    entity.Property(e => e.LcaldVendorId).HasColumnName("LCALD_VendorID");

            //    entity.Property(e => e.LcmBankLcdate).HasColumnName("LCM_BankLCDate");

            //    entity.Property(e => e.LcmCode)
            //        .HasColumnName("LCM_CODE")
            //        .HasMaxLength(20);

            //    entity.Property(e => e.LcmDateofexpiry).HasColumnName("LCM_DATEOFEXPIRY");

            //    entity.Property(e => e.LcmId).HasColumnName("LCM_ID");

            //    entity.Property(e => e.LcmPivalue)
            //        .HasColumnName("LCM_PIValue")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.Lctype).HasColumnName("LCTYPE");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Ratioamt)
            //        .HasColumnName("ratioamt")
            //        .HasColumnType("decimal(18, 4)");

            //    entity.Property(e => e.Suppliername)
            //        .HasColumnName("suppliername")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ViwLctrims>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToView("Viw_LCTrims");

            //    entity.Property(e => e.BankName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Companyname)
            //        .IsRequired()
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Currencysymbol)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.LcaldAmount).HasColumnName("LCALD_Amount");

            //    entity.Property(e => e.LcaldBankId).HasColumnName("LCALD_BankID");

            //    entity.Property(e => e.LcaldBtblcno)
            //        .HasColumnName("LCALD_BTBLCNo")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LcaldCompanyId).HasColumnName("LCALD_CompanyID");

            //    entity.Property(e => e.LcaldCurrencyId).HasColumnName("LCALD_CurrencyID");

            //    entity.Property(e => e.LcaldCurrencyRate).HasColumnName("LCALD_CurrencyRate");

            //    entity.Property(e => e.LcaldDescription)
            //        .IsRequired()
            //        .HasColumnName("LCALD_Description")
            //        .HasMaxLength(11)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldLcdate)
            //        .HasColumnName("LCALD_LCDate")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LcaldLctype)
            //        .IsRequired()
            //        .HasColumnName("LCALD_LCType")
            //        .HasMaxLength(6)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LcaldMasterLcSalesContract).HasColumnName("LCALD_MasterLC_SalesContract");

            //    entity.Property(e => e.LcaldVendorId).HasColumnName("LCALD_VendorID");

            //    entity.Property(e => e.Lctype).HasColumnName("LCTYPE");

            //    entity.Property(e => e.LmcBankLcdate)
            //        .HasColumnName("LMC_BankLCDate")
            //        .HasColumnType("smalldatetime");

            //    entity.Property(e => e.LmcCode)
            //        .HasColumnName("LMC_CODE")
            //        .HasMaxLength(500);

            //    entity.Property(e => e.LmcDateofexpiry)
            //        .HasColumnName("LMC_DATEOFEXPIRY")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.LmcId).HasColumnName("LMC_ID");

            //    entity.Property(e => e.LmcVendorpivalue)
            //        .HasColumnName("LMC_VENDORPIVALUE")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.LomCode)
            //        .IsRequired()
            //        .HasColumnName("LOM_CODE")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Pivalue)
            //        .HasColumnName("PIValue")
            //        .HasColumnType("numeric(18, 4)");

            //    entity.Property(e => e.Suppliername)
            //        .HasColumnName("suppliername")
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<WashingFinishingCodeRateSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("WashingFinishingCodeRate_Setup");

            //    entity.Property(e => e.CodeId)
            //        .IsRequired()
            //        .HasColumnName("CodeID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricQualityId).HasColumnName("FabricQualityID");

            //    entity.Property(e => e.FabricTypeId).HasColumnName("FabricTypeID");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<WashingFinishingCodeSetup>(entity =>
            //{
            //    entity.ToTable("WashingFinishingCode_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Code)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");

            //    entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

            //    entity.Property(e => e.ProcessTypeId)
            //        .HasColumnName("ProcessTypeID")
            //        .HasComment("1- Washing    2 - Finishing ");
            //});

            //modelBuilder.Entity<WashingFinishingCodeSetupMapping>(entity =>
            //{
            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ProcessId)
            //        .HasColumnName("ProcessID")
            //        .HasComment("Join By FabricWahingtype_setup for Washing and FabricFinishingProcess_setup for Finishing");

            //    entity.Property(e => e.WashingFinishingCodeSetupId).HasColumnName("WashingFinishingCode_SetupID");

            //    entity.HasOne(d => d.WashingFinishingCodeSetup)
            //        .WithMany(p => p.WashingFinishingCodeSetupMapping)
            //        .HasForeignKey(d => d.WashingFinishingCodeSetupId)
            //        .HasConstraintName("FK_WashingFinishingCodeSetupMapping_WashingFinishingCode_Setup");
            //});

            //modelBuilder.Entity<WashingMaterialSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ChemicalDescription)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");
            //});

            //modelBuilder.Entity<WashingTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.CurrencyId).HasColumnName("CurrencyID");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<WastageSetup>(entity =>
            //{
            //    entity.ToTable("Wastage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");
            //});

            //modelBuilder.Entity<WetProcessStagesSetup>(entity =>
            //{
            //    entity.ToTable("WetProcessStages_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<WetProcessTypeSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("WetProcessType_Setup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<WetProcessing>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.Property(e => e.StyleId).HasColumnName("StyleID");

            //    entity.Property(e => e.WetProcessingCodeId).HasColumnName("WetProcessingCodeID");
            //});

            //modelBuilder.Entity<WovenCompositionSetup>(entity =>
            //{
            //    entity.ToTable("WovenComposition_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<WovenConstructionSetup>(entity =>
            //{
            //    entity.ToTable("WovenConstruction_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricCategoryId).HasColumnName("FabricCategoryID");
            //});

            //modelBuilder.Entity<WovenFabricFinishing>(entity =>
            //{
            //    entity.ToTable("WovenFabric_Finishing");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.FinishingId).HasColumnName("FinishingID");

            //    entity.HasOne(d => d.Finishing)
            //        .WithMany(p => p.WovenFabricFinishing)
            //        .HasForeignKey(d => d.FinishingId)
            //        .HasConstraintName("FK_WovenFabric_Finishing_WovenFinishing_Setup");
            //});

            //modelBuilder.Entity<WovenFabricPreTreatment>(entity =>
            //{
            //    entity.ToTable("WovenFabric_PreTreatment");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.FabricSpecificationId).HasColumnName("FabricSpecificationID");

            //    entity.Property(e => e.PreTreatmentId).HasColumnName("PreTreatmentID");

            //    entity.HasOne(d => d.PreTreatment)
            //        .WithMany(p => p.WovenFabricPreTreatment)
            //        .HasForeignKey(d => d.PreTreatmentId)
            //        .HasConstraintName("FK_WovenFabric_PreTreatment_WovenPreTreatment_setup");
            //});

            //modelBuilder.Entity<WovenFinishingSetup>(entity =>
            //{
            //    entity.ToTable("WovenFinishing_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<WovenPreTreatmentSetup>(entity =>
            //{
            //    entity.ToTable("WovenPreTreatment_setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<WovenSelectedWetProcesses>(entity =>
            //{
            //    entity.ToTable("Woven_SelectedWetProcesses");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.ProcessStageId).HasColumnName("ProcessStageID");

            //    entity.Property(e => e.ProcessTypeId).HasColumnName("ProcessTypeID");

            //    entity.Property(e => e.SelectedElementId).HasColumnName("SelectedElementID");

            //    entity.HasOne(d => d.ProcessStage)
            //        .WithMany(p => p.WovenSelectedWetProcesses)
            //        .HasForeignKey(d => d.ProcessStageId)
            //        .HasConstraintName("FK_Woven_SelectedWetProcesses_WetProcessStages_Setup");
            //});

            //modelBuilder.Entity<WovenSprayColors>(entity =>
            //{
            //    entity.ToTable("Woven_SprayColors");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.SelectedProcessId).HasColumnName("SelectedProcessID");

            //    entity.HasOne(d => d.SelectedProcess)
            //        .WithMany(p => p.WovenSprayColors)
            //        .HasForeignKey(d => d.SelectedProcessId)
            //        .HasConstraintName("FK_Woven_SprayColors_Woven_SelectedWetProcesses");
            //});

            //modelBuilder.Entity<WovenStripeColors>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.ColorName)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.PantoneNo)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnAdjustmentDetail>(entity =>
            //{
            //    entity.HasKey(e => e.YadjustmentDid);

            //    entity.Property(e => e.YadjustmentDid).HasColumnName("YAdjustmentDID");

            //    entity.Property(e => e.MadjustmentMid).HasColumnName("MAdjustmentMID");

            //    entity.Property(e => e.MadjustmentReasonId).HasColumnName("MAdjustmentReasonID");

            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");

            //    entity.HasOne(d => d.MadjustmentReason)
            //        .WithMany(p => p.YarnAdjustmentDetail)
            //        .HasForeignKey(d => d.MadjustmentReasonId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnAdjustmentDetail_Reason_Setup");

            //    entity.HasOne(d => d.YarnInventory)
            //        .WithMany(p => p.YarnAdjustmentDetail)
            //        .HasForeignKey(d => d.YarnInventoryId)
            //        .HasConstraintName("FK_YarnAdjustmentDetail_YarnInventory");
            //});

            //modelBuilder.Entity<YarnBagsWeight>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.BagNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnBwid)
            //        .HasColumnName("YarnBWID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.YarnIqid).HasColumnName("YarnIQID");
            //});

            //modelBuilder.Entity<YarnBrokerSetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.Address)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.BrokerCode)
            //        .HasMaxLength(5)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.Name)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnBrokerId)
            //        .HasColumnName("YarnBrokerID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<YarnContaminationSetup>(entity =>
            //{
            //    entity.HasKey(e => e.YarnId);

            //    entity.ToTable("Yarn_Contamination_Setup");

            //    entity.Property(e => e.YarnId)
            //        .HasColumnName("Yarn_Id")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.YarnContType)
            //        .HasColumnName("Yarn_ContType")
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnFunctionalityDefaultCurrency>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Yarn_FunctionalityDefaultCurrency");

            //    entity.Property(e => e.DefaultCurrencyId).HasColumnName("DefaultCurrencyID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.YarnFunctionalityId).HasColumnName("YarnFunctionalityID");
            //});

            //modelBuilder.Entity<YarnFunctionalitySetup>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Yarn_FunctionalitySetup");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();
            //});

            //modelBuilder.Entity<YarnGrossDetail>(entity =>
            //{
            //    entity.ToTable("YarnGross_Detail");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.GrossId).HasColumnName("GrossID");

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");
            //});

            //modelBuilder.Entity<YarnGrossDetailVersion>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("YarnGross_Detail_Version");

            //    entity.Property(e => e.DetailId).HasColumnName("DetailID");

            //    entity.Property(e => e.GrossId).HasColumnName("GrossID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Krsid).HasColumnName("KRSID");
            //});

            //modelBuilder.Entity<YarnGrossMaster>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("YarnGross_Master");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.GenerationDate).HasColumnType("datetime");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.YarnGrossCode)
            //        .IsRequired()
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnGrossDetail)
            //        .IsRequired()
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnGrossMasterVersion>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("YarnGross_Master_Version");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.GenerationDate).HasColumnType("datetime");

            //    entity.Property(e => e.GrossId).HasColumnName("GrossID");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Remarks)
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnGrossCode)
            //        .IsRequired()
            //        .HasMaxLength(8000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnGrossDetail)
            //        .IsRequired()
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnInspectionDetail>(entity =>
            //{
            //    entity.HasKey(e => e.YinspectionDid);

            //    entity.Property(e => e.YinspectionDid)
            //        .HasColumnName("YInspectionDID")
            //        .ValueGeneratedNever();

            //    entity.Property(e => e.DestinationYarnIqid).HasColumnName("DestinationYarnIQID");

            //    entity.Property(e => e.InspectionYarnInventoryId).HasColumnName("InspectionYarnInventoryID");

            //    entity.Property(e => e.MinspectionMid).HasColumnName("MInspectionMID");

            //    entity.Property(e => e.ReasonId).HasColumnName("ReasonID");

            //    entity.Property(e => e.SourceYarnIqid).HasColumnName("SourceYarnIQID");
            //});

            //modelBuilder.Entity<YarnInventory>(entity =>
            //{
            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.BrandId).HasColumnName("BrandID");

            //    entity.Property(e => e.Gst)
            //        .HasColumnName("GST")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.MfgDate).HasColumnType("datetime");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.StoreLocationId).HasColumnName("StoreLocationID");

            //    entity.Property(e => e.SupplierId).HasColumnName("SupplierID");

            //    entity.Property(e => e.TransactionDate).HasColumnType("datetime");

            //    entity.HasOne(d => d.StoreLocation)
            //        .WithMany(p => p.YarnInventory)
            //        .HasForeignKey(d => d.StoreLocationId)
            //        .HasConstraintName("FK_YarnInventory_StoreLocation_Setup");
            //});

            //modelBuilder.Entity<YarnInventoryQuantity>(entity =>
            //{
            //    entity.HasKey(e => e.YarnIqid);

            //    entity.Property(e => e.YarnIqid).HasColumnName("YarnIQID");

            //    entity.Property(e => e.ConversiontoSku).HasColumnName("ConversiontoSKU");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");

            //    entity.HasOne(d => d.YarnInventory)
            //        .WithMany(p => p.YarnInventoryQuantity)
            //        .HasForeignKey(d => d.YarnInventoryId)
            //        .HasConstraintName("FK_YarnInventoryQuantity_YarnInventory");
            //});

            //modelBuilder.Entity<YarnIssueDetail>(entity =>
            //{
            //    entity.HasKey(e => e.YarnIssueDid);

            //    entity.Property(e => e.YarnIssueDid).HasColumnName("YarnIssueDID");

            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");

            //    entity.Property(e => e.YarnIssueMid).HasColumnName("YarnIssueMID");

            //    entity.HasOne(d => d.YarnInventory)
            //        .WithMany(p => p.YarnIssueDetail)
            //        .HasForeignKey(d => d.YarnInventoryId)
            //        .HasConstraintName("FK_YarnIssueDetail_YarnInventory");

            //    entity.HasOne(d => d.YarnIssueM)
            //        .WithMany(p => p.YarnIssueDetail)
            //        .HasForeignKey(d => d.YarnIssueMid)
            //        .HasConstraintName("FK_YarnIssueDetail_YarnIssueMaster");
            //});

            //modelBuilder.Entity<YarnIssueMaster>(entity =>
            //{
            //    entity.HasKey(e => e.YarnIssueMid);

            //    entity.Property(e => e.YarnIssueMid).HasColumnName("YarnIssueMID");

            //    entity.Property(e => e.DriverName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FabricInformation)
            //        .HasMaxLength(2000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.GatePassNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.InspectionLab)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IssueDate).HasColumnType("datetime");

            //    entity.Property(e => e.KnittingContractNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ProgramNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReasonId)
            //        .HasColumnName("ReasonID")
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ReceivingPerson)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Remarks)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Source)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.VehicleNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnKnittingContractFlatBed>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("Yarn_KnittingContractFlatBed");

            //    entity.Property(e => e.QuantityInKgs).HasColumnName("QuantityInKGs");

            //    entity.Property(e => e.SizeId)
            //        .HasColumnName("SizeID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.YarnKncontractId).HasColumnName("YarnKNContractID");
            //});

            //modelBuilder.Entity<YarnPackagesSetup>(entity =>
            //{
            //    entity.ToTable("Yarn_Packages_setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnPodeliveries>(entity =>
            //{
            //    entity.HasKey(e => e.Mpodid)
            //        .HasName("PK_MaterialPODeliveries");

            //    entity.ToTable("YarnPODeliveries");

            //    entity.Property(e => e.Mpodid).HasColumnName("MPODID");

            //    entity.Property(e => e.ConversiontoSku).HasColumnName("ConversiontoSKU");

            //    entity.Property(e => e.DayId).HasColumnName("DayID");

            //    entity.Property(e => e.UnitId).HasColumnName("UnitID");

            //    entity.Property(e => e.YarnPodid).HasColumnName("YarnPODID");

            //    entity.HasOne(d => d.Unit)
            //        .WithMany(p => p.YarnPodeliveries)
            //        .HasForeignKey(d => d.UnitId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_MaterialPODeliveries_MRPItemUnits");

            //    entity.HasOne(d => d.YarnPod)
            //        .WithMany(p => p.YarnPodeliveries)
            //        .HasForeignKey(d => d.YarnPodid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnPODeliveries_YarnPODetail");
            //});

            //modelBuilder.Entity<YarnPodetail>(entity =>
            //{
            //    entity.HasKey(e => e.YarnPodid);

            //    entity.ToTable("YarnPODetail");

            //    entity.Property(e => e.YarnPodid).HasColumnName("YarnPODID");

            //    entity.Property(e => e.AttributeInstanceId).HasColumnName("AttributeInstanceID");

            //    entity.Property(e => e.BrandId).HasColumnName("BrandID");

            //    entity.Property(e => e.Gst).HasColumnName("GST");

            //    entity.Property(e => e.Mpmid).HasColumnName("MPMID");

            //    entity.Property(e => e.MrpitemCode).HasColumnName("MRPItemCode");

            //    entity.Property(e => e.NoOfPackagesId).HasColumnName("NoOfPackagesID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.PackagingId).HasColumnName("PackagingID");

            //    entity.Property(e => e.SuperBomid).HasColumnName("SuperBOMID");

            //    entity.Property(e => e.SupplierId).HasColumnName("SupplierID");

            //    entity.Property(e => e.WeightId).HasColumnName("WeightID");
            //});

            //modelBuilder.Entity<YarnRateWeightSetup>(entity =>
            //{
            //    entity.HasKey(e => e.WeightId);

            //    entity.Property(e => e.WeightId).HasColumnName("WeightID");

            //    entity.Property(e => e.ConversionToSku).HasColumnName("ConversionToSKU");

            //    entity.Property(e => e.WeightDesc)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<YarnReceiptDetail>(entity =>
            //{
            //    entity.Property(e => e.YarnReceiptDetailId).HasColumnName("YarnReceiptDetailID");

            //    entity.Property(e => e.KnitterContractNo)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Mpodid).HasColumnName("MPODID");

            //    entity.Property(e => e.Mrmid).HasColumnName("MRMID");

            //    entity.Property(e => e.Source)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");

            //    entity.HasOne(d => d.Mpod)
            //        .WithMany(p => p.YarnReceiptDetail)
            //        .HasForeignKey(d => d.Mpodid)
            //        .HasConstraintName("FK_YarnReceiptDetail_YarnPODeliveries");

            //    entity.HasOne(d => d.YarnInventory)
            //        .WithMany(p => p.YarnReceiptDetail)
            //        .HasForeignKey(d => d.YarnInventoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnReceiptDetail_YarnInventory");
            //});

            //modelBuilder.Entity<YarnReturnDetail>(entity =>
            //{
            //    entity.HasKey(e => e.YreturnDid);

            //    entity.Property(e => e.YreturnDid).HasColumnName("YReturnDID");

            //    entity.Property(e => e.MreturnMid).HasColumnName("MReturnMID");

            //    entity.Property(e => e.ReasonId).HasColumnName("ReasonID");

            //    entity.Property(e => e.ReceiptYarnIqid).HasColumnName("ReceiptYarnIQID");

            //    entity.Property(e => e.ReturnYarnInventoryId).HasColumnName("ReturnYarnInventoryID");

            //    entity.HasOne(d => d.ReceiptYarnIq)
            //        .WithMany(p => p.YarnReturnDetail)
            //        .HasForeignKey(d => d.ReceiptYarnIqid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnReturnDetail_YarnInventoryQuantity");

            //    entity.HasOne(d => d.ReturnYarnInventory)
            //        .WithMany(p => p.YarnReturnDetail)
            //        .HasForeignKey(d => d.ReturnYarnInventoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnReturnDetail_YarnInventory");
            //});

            //modelBuilder.Entity<YarnStockOpeningDetail>(entity =>
            //{
            //    entity.HasKey(e => e.Ysodid);

            //    entity.Property(e => e.Ysodid).HasColumnName("YSODID");

            //    entity.Property(e => e.Msomid).HasColumnName("MSOMID");

            //    entity.Property(e => e.YarnInventoryId).HasColumnName("YarnInventoryID");

            //    entity.HasOne(d => d.YarnInventory)
            //        .WithMany(p => p.YarnStockOpeningDetail)
            //        .HasForeignKey(d => d.YarnInventoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnStockOpeningDetail_YarnInventory");
            //});

            //modelBuilder.Entity<YarnTransferDetail>(entity =>
            //{
            //    entity.HasKey(e => e.YtransferDid);

            //    entity.Property(e => e.YtransferDid).HasColumnName("YTransferDID");

            //    entity.Property(e => e.DestinationYarnInventoryId).HasColumnName("DestinationYarnInventoryID");

            //    entity.Property(e => e.MtransferMid).HasColumnName("MTransferMID");

            //    entity.Property(e => e.MtransferReasonId).HasColumnName("MTransferReasonID");

            //    entity.Property(e => e.SourceYarnInventoryId).HasColumnName("SourceYarnInventoryID");

            //    entity.HasOne(d => d.DestinationYarnInventory)
            //        .WithMany(p => p.YarnTransferDetailDestinationYarnInventory)
            //        .HasForeignKey(d => d.DestinationYarnInventoryId)
            //        .HasConstraintName("FK_YarnTransferDetail_YarnInventory1");

            //    entity.HasOne(d => d.MtransferReason)
            //        .WithMany(p => p.YarnTransferDetail)
            //        .HasForeignKey(d => d.MtransferReasonId)
            //        .HasConstraintName("FK_YarnTransferDetail_Reason_Setup");

            //    entity.HasOne(d => d.SourceYarnInventory)
            //        .WithMany(p => p.YarnTransferDetailSourceYarnInventory)
            //        .HasForeignKey(d => d.SourceYarnInventoryId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_YarnTransferDetail_YarnInventory");
            //});

            //modelBuilder.Entity<YarnsInTippings>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.FabricTippingId).HasColumnName("FabricTippingID");

            //    entity.Property(e => e.TwistLevelId).HasColumnName("TwistLevelID");
            //});

            //modelBuilder.Entity<YsMvMasterreportView>(entity =>
            //{
            //    entity.HasKey(e => e.YmvId);

            //    entity.ToTable("YS_MV_MASTERREPORT_VIEW");

            //    entity.Property(e => e.YmvId).HasColumnName("YMV_ID");

            //    entity.Property(e => e.YmvDate)
            //        .HasColumnName("YMV_DATE")
            //        .HasColumnType("datetime");

            //    entity.Property(e => e.YmvDescription)
            //        .HasColumnName("YMV_DESCRIPTION")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.YmvUser)
            //        .HasColumnName("YMV_USER")
            //        .HasMaxLength(50);

            //    entity.Property(e => e.YmvView)
            //        .HasColumnName("YMV_VIEW")
            //        .HasMaxLength(500);
            //});

            //modelBuilder.Entity<ZipColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.Property(e => e.ZipColorTypeId).HasColumnName("ZipColorTypeID");

            //    entity.HasOne(d => d.ColorSet)
            //        .WithMany(p => p.ZipColor)
            //        .HasForeignKey(d => d.ColorSetId)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ZipColor_FabricSpecificationColor");

            //    entity.HasOne(d => d.Match)
            //        .WithMany(p => p.ZipColor)
            //        .HasForeignKey(d => d.MatchId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipColor_ColorMatching_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipColor_ZipSpecification");

            //    entity.HasOne(d => d.ZipColorType)
            //        .WithMany(p => p.ZipColor)
            //        .HasForeignKey(d => d.ZipColorTypeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipColor_ZipColorType_Setup");
            //});

            //modelBuilder.Entity<ZipColorTypeSetup>(entity =>
            //{
            //    entity.ToTable("ZipColorType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<ZipImageComments>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comment)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CommentId)
            //        .IsRequired()
            //        .HasColumnName("CommentID")
            //        .HasMaxLength(10)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");
            //});

            //modelBuilder.Entity<ZipLength>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.SelectedSizeRangeId).HasColumnName("SelectedSizeRangeID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipLength)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipLength_ZipSpecification");
            //});

            //modelBuilder.Entity<ZipMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ZipMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ZipNumberSetup>(entity =>
            //{
            //    entity.HasKey(e => e.Number);

            //    entity.ToTable("ZipNumber_Setup");
            //});

            //modelBuilder.Entity<ZipOpenCloseSetup>(entity =>
            //{
            //    entity.ToTable("ZipOpenClose_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(40)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ZipPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipPlacementInstruction_ZipSpecification");

            //    entity.HasOne(d => d.PlacementInstruction)
            //        .WithMany(p => p.ZipPlacementInstruction)
            //        .HasForeignKey(d => d.PlacementInstructionId)
            //        .HasConstraintName("FK_ZipPlacementInstruction_TrimPlacementInstruction_Setup");
            //});

            //modelBuilder.Entity<ZipPullerColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<ZipPullerImageSetup>(entity =>
            //{
            //    entity.ToTable("ZipPullerImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MetalFinishId).HasColumnName("MetalFinishID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.ZipPullerImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipPullerImage_Setup_ZipPullerMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.ZipPullerImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_ZipPullerImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<ZipPullerMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ZipPullerMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ZipPullerPlacementInstruction>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.OtherInstruction)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlacementInstructionId).HasColumnName("PlacementInstructionID");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipPullerPlacementInstruction)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipPullerPlacementInstruction_ZipPullerSpecification");
            //});

            //modelBuilder.Entity<ZipPullerSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.ZipPullerSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipPullerSpecification_ZipPullerImage_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipPullerSpecification)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipPullerSpecification_ZipSpecification");
            //});

            //modelBuilder.Entity<ZipSliderImageSetup>(entity =>
            //{
            //    entity.ToTable("ZipSliderImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsPriceInsert).HasDefaultValueSql("(0)");

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.OpenCloseId).HasColumnName("OpenCloseID");

            //    entity.Property(e => e.SliderMetalFinishId).HasColumnName("SliderMetalFinishID");

            //    entity.Property(e => e.SliderTypeId).HasColumnName("SliderTypeID");

            //    entity.Property(e => e.TapeMaterialId).HasColumnName("TapeMaterialID");

            //    entity.Property(e => e.TeethMetalFinishId).HasColumnName("TeethMetalFinishID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.ZipSliderImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_ZipSliderImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<ZipSliderImageSetupDetail>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.ToTable("ZipSliderImage_Setup_Detail");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");
            //});

            //modelBuilder.Entity<ZipSliderTypeSetup>(entity =>
            //{
            //    entity.ToTable("ZipSliderType_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ZipSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.InsertionId)
            //        .HasColumnName("InsertionID")
            //        .HasDefaultValueSql("(6)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.OpenCloseId).HasColumnName("OpenCloseID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SelectedTrimId).HasColumnName("SelectedTrimID");

            //    entity.Property(e => e.SliderImageId).HasColumnName("SliderImageID");

            //    entity.Property(e => e.SliderTypeId).HasColumnName("SliderTypeID");

            //    entity.Property(e => e.TapeMaterialId).HasColumnName("TapeMaterialID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.TrimMeasurementScaleId).HasColumnName("TrimMeasurementScaleID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.MaterialId)
            //        .HasConstraintName("FK_ZipSpecification_ZipMaterial_Setup");

            //    entity.HasOne(d => d.NumberNavigation)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.Number)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipSpecification_ZipNumber_Setup");

            //    entity.HasOne(d => d.OpenClose)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.OpenCloseId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipSpecification_ZipOpenClose_Setup");

            //    entity.HasOne(d => d.ProcurementSource)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.ProcurementSourceId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipSpecification_ProcurementSource_Setup");

            //    entity.HasOne(d => d.SliderImage)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.SliderImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipSpecification_ZipSliderImage_Setup");

            //    entity.HasOne(d => d.SliderType)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.SliderTypeId)
            //        .HasConstraintName("FK_ZipSpecification_ZipSliderType_Setup");

            //    entity.HasOne(d => d.TapeMaterial)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.TapeMaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipSpecification_ZipTapeMaterial_Setup");

            //    entity.HasOne(d => d.TrimMeasurementScale)
            //        .WithMany(p => p.ZipSpecification)
            //        .HasForeignKey(d => d.TrimMeasurementScaleId)
            //        .HasConstraintName("FK_ZipSpecification_TrimMeasurementScale_Setup");
            //});

            //modelBuilder.Entity<ZipStudColor>(entity =>
            //{
            //     //entity.HasNoKey();

            //     entity.Property(e => e.ColorSetId).HasColumnName("ColorSetID");

            //    entity.Property(e => e.MatchId).HasColumnName("MatchID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.TrimColor)
            //        .IsRequired()
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .IsFixedLength();

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipStudColor)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipStudColor_ZipStudSpecification");
            //});

            //modelBuilder.Entity<ZipStudImageSetup>(entity =>
            //{
            //    entity.ToTable("ZipStudImage_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Clrtotal).HasColumnName("CLRTotal");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CodeToDisplay)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.CollectionId).HasColumnName("CollectionID");

            //    entity.Property(e => e.CreationDate).HasColumnType("datetime");

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.Fob).HasColumnName("FOB");

            //    entity.Property(e => e.ImagePath)
            //        .IsRequired()
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.IsValidate)
            //        .IsRequired()
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.MetalFinishId).HasColumnName("MetalFinishID");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TrimId).HasColumnName("TrimID");

            //    entity.Property(e => e.TrimUnitId).HasColumnName("TrimUnitID");

            //    entity.Property(e => e.UserCode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.UserId).HasColumnName("UserID");

            //    entity.Property(e => e.VendorId).HasColumnName("VendorID");

            //    entity.HasOne(d => d.Material)
            //        .WithMany(p => p.ZipStudImageSetup)
            //        .HasForeignKey(d => d.MaterialId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipStudImage_Setup_ZipStudMaterial_Setup");

            //    entity.HasOne(d => d.TrimUnit)
            //        .WithMany(p => p.ZipStudImageSetup)
            //        .HasForeignKey(d => d.TrimUnitId)
            //        .HasConstraintName("FK_ZipStudImage_Setup_TrimUnit_Setup");
            //});

            //modelBuilder.Entity<ZipStudMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ZipStudMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ZipStudSizeSetup>(entity =>
            //{
            //    entity.ToTable("ZipStudSize_Setup");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<ZipStudSpecification>(entity =>
            //{
            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Comments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.DesignTypeId).HasColumnName("DesignTypeID");

            //    entity.Property(e => e.ImageId).HasColumnName("ImageID");

            //    entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            //    entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

            //    entity.Property(e => e.ProcurementSourceId)
            //        .HasColumnName("ProcurementSourceID")
            //        .HasDefaultValueSql("(1)");

            //    entity.Property(e => e.SizeId).HasColumnName("SizeID");

            //    entity.Property(e => e.TechComments)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.HasOne(d => d.Image)
            //        .WithMany(p => p.ZipStudSpecification)
            //        .HasForeignKey(d => d.ImageId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipStudSpecification_ZipStudImage_Setup");

            //    entity.HasOne(d => d.Object)
            //        .WithMany(p => p.ZipStudSpecification)
            //        .HasForeignKey(d => d.ObjectId)
            //        .HasConstraintName("FK_ZipStudSpecification_ZipPullerSpecification");

            //    entity.HasOne(d => d.Size)
            //        .WithMany(p => p.ZipStudSpecification)
            //        .HasForeignKey(d => d.SizeId)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_ZipStudSpecification_ZipStudSize_Setup");
            //});

            //modelBuilder.Entity<ZipTapeMaterialSetup>(entity =>
            //{
            //    entity.ToTable("ZipTapeMaterial_Setup");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("ID")
            //        .ValueGeneratedOnAdd();

            //    entity.Property(e => e.Description)
            //        .IsRequired()
            //        .HasMaxLength(25)
            //        .IsUnicode(false);
            //});




            //  OnModelCreatingPartial(modelBuilder);
        }

        //partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
