@model List<RG.Application.Contracts.Embro.AccountsReports.TrialBalance.Queries.QueryResponseModel.TrialBalanceNoteRM>
@{

    Layout = null;
    int GroupCategoryID = 0;
    string GroupCategoryName = "";
    var totalrow = Model.Count;
    if (totalrow > 0)
    {
        GroupCategoryID = Model[0].GroupCategoryID;
        GroupCategoryName = Model[0].GroupCategoryName;
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>@(GroupCategoryName==""?"Balance Sheet Notes":GroupCategoryName)</title>
    <link href="~/AdminLTE-3.1.0/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-5.0.2/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/AdminLTE-3.1.0/plugins/jquery/jquery.min.js"></script>
    <script src="~/AdminLTE-3.1.0/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/lib/bootstrap-5.0.2/js/bootstrap.bundle.min.js"></script>


    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.2.2/css/buttons.dataTables.min.css" />
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.12.3.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>

    <style>
        .header {
            position: sticky;
            top: 0;
        }
    </style>

</head>
<body>
    <div class="container-fluid">
        @if (totalrow > 0)
        {
            <div class="row">
                <div class="col-12 text-center">
                    <h5 class="mb-0">@Model[0].CompanyName</h5>
                    <h6 class="mb-0">@Model[0].GroupCategoryName</h6>
                    <h6 class="mb-0">From: @Model[0].DateFrom To @Model[0].DateTo</h6>
                </div>
            </div>

            <table class="table table-sm table-bordered table-striped text-sm text-center display nowrap" id="tblTrialBalanceNotes" style="font-size:11px;">

                <thead class="header">

                    <tr class="bg-dark text-white " style="font-weight:bold;">
                        <td rowspan="2">Account</td>
                        <td rowspan="2">Description</td>
                        <td rowspan="2">Sub Account</td>
                        <td rowspan="2">Description</td>
                        <td colspan="2">Opening Balance</td>
                        <td colspan="2">Current Period</td>
                        <td colspan="2">Balance</td>

                    </tr>
                    <tr class="bg-dark text-white " style="font-weight:bold;">
                        <td>Debits</td>
                        <td>Credits</td>
                        <td>Debits</td>
                        <td>Credits</td>
                        <td>Periodic</td>
                        <td>Cumulative</td>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var groupCategory = Model.Select(x => new { x.GroupCode, x.GroupName, x.GroupSerial }).Distinct().OrderBy(x => x.GroupSerial).ToList();
                        decimal grandTotalOBDebit = 0;
                        decimal grandTotalOBCredit = 0;
                        decimal grandTotalDebit = 0;
                        decimal grandTotalCredit = 0;
                        decimal grandTotalCurrentBalance = 0;
                        decimal grandTotalCumulativeBalance = 0;

                        foreach (var itemCategory in groupCategory)
                        {                   
                            <tr class="bg-secondary text-white" style="text-align:left;font-weight:bold;">
                                <td colspan="10">@itemCategory.GroupCode @itemCategory.GroupName</td>
                            </tr>



                            decimal totalOBDebit = 0;
                            decimal totalOBCredit = 0;
                            decimal totalDebit = 0;
                            decimal totalCredit = 0;
                            decimal currentBalance = 0;
                            decimal cumulativeBalance = 0;
                            decimal totalCurrentBalance = 0;
                            decimal totalCumulativeBalance = 0;

                            foreach (var item in Model.Where(x => x.GroupCode == itemCategory.GroupCode).ToList())
                            {
                                totalOBDebit += item.OBDebit;
                                totalOBCredit += item.OBCredit;
                                totalDebit += item.Debit;
                                totalCredit += item.Credit;

                                var clsPeriodicBalance = "";

                                if (item.Category == "Assets" || item.Category == "Expenditure")
                                {
                                    currentBalance = item.Debit - item.Credit;
                                    cumulativeBalance = item.OBDebit - item.OBCredit + currentBalance;
                                }
                                else
                                {
                                    currentBalance = item.Credit - item.Debit;
                                    cumulativeBalance = item.OBCredit - item.OBDebit + currentBalance;
                                }

                                if (currentBalance < 0)
                                {
                                    clsPeriodicBalance = "text-danger fw-bold";
                                }
                                totalCurrentBalance += currentBalance;
                                totalCumulativeBalance += cumulativeBalance;
                                <tr>
                                    <td></td>
                                    <td>@item.ITEM</td>
                                    <td></td>
                                    <td></td>
                                    <td>@(String.Format("{0:n2}", item.OBDebit))</td>
                                    <td>@(String.Format("{0:n2}", item.OBCredit))</td>
                                    <td>@(String.Format("{0:n2}", item.Debit))</td>
                                    <td>@(String.Format("{0:n2}", item.Credit))</td>
                                    @*<td class="@clsPeriodicBalance">@(String.Format("{0:n2}", item.CurrentBalance))</td>*@
                                    <td class="@clsPeriodicBalance">@(String.Format("{0:n2}", currentBalance))</td>
                                    @if (GroupCategoryID == 1)
                                    {
                                        <td class="@clsPeriodicBalance">@(String.Format("{0:n2}", cumulativeBalance))</td>
                                    }
                                    else
                                    {
                                        <td class="@clsPeriodicBalance">@(String.Format("{0:n2}", currentBalance))</td>
                                    }
                                </tr>
                            }
                            var clstotalCurrentBalance = "";
                            if (totalCurrentBalance < 0)
                            {
                                clstotalCurrentBalance = "text-danger fw-bold";

                            }
                            <tr style="font-weight:bold;">
                                <td></td>
                                <td>Total</td>
                                <td></td>
                                <td></td>
                                <td>@(String.Format("{0:n2}", totalOBDebit))</td>
                                <td>@(String.Format("{0:n2}", totalOBCredit))</td>
                                <td>@(String.Format("{0:n2}", totalDebit))</td>
                                <td>@(String.Format("{0:n2}", totalCredit))</td>
                                <td class="@clstotalCurrentBalance">@(String.Format("{0:n2}", totalCurrentBalance))</td>
                                @if (GroupCategoryID == 1)
                                {
                                    <td class="@clstotalCurrentBalance">@(String.Format("{0:n2}", totalCumulativeBalance))</td>
                                }
                                else
                                {
                                    <td class="@clstotalCurrentBalance">@(String.Format("{0:n2}", totalCurrentBalance))</td>
                                }
                            </tr>
                            grandTotalOBDebit += totalOBDebit;
                            grandTotalOBCredit += totalOBCredit;
                            grandTotalDebit += totalDebit;
                            grandTotalCredit += totalCredit;
                            grandTotalCurrentBalance += totalCurrentBalance;
                            grandTotalCumulativeBalance += totalCumulativeBalance;
                        }
                    }
                    @{var clsGrandtotalCurrentBalance = "";
                        if (grandTotalCurrentBalance < 0)
                        {
                            clsGrandtotalCurrentBalance = "text-danger fw-bold";
                        }
                    }
                    <tr class="bg-info" style="font-weight:bold;">
                        <td></td>
                        <td>Grand Total</td>
                        <td></td>
                        <td></td>
                        <td>@(String.Format("{0:n2}", grandTotalOBDebit))</td>
                        <td>@(String.Format("{0:n2}", grandTotalOBCredit))</td>
                        <td>@(String.Format("{0:n2}", grandTotalDebit))</td>
                        <td>@(String.Format("{0:n2}", grandTotalCredit))</td>
                        <td class="@clsGrandtotalCurrentBalance">@(String.Format("{0:n2}", grandTotalCurrentBalance))</td>
                        @if (GroupCategoryID == 1)
                        {
                            <td class="@clsGrandtotalCurrentBalance">@(String.Format("{0:n2}", grandTotalCumulativeBalance))</td>
                        }
                        else
                        {
                            <td class="@clsGrandtotalCurrentBalance">@(String.Format("{0:n2}", grandTotalCurrentBalance))</td>
                        }
                    </tr>
                </tbody>
            </table>
        }
        else
        {
            <h5 class="bg-danger text-center">No Record Found</h5>
        }
        <div class="text-center">
            <input type="button" class="btn btn-sm btn-success" value="Excel" id="btnPdf" onclick="exportToExcel()" />
        </div>
    </div>
</body>


</html>

<script type="text/javascript">
    function exportToExcel() {
        var htmls = "";
        var uri = 'data:application/vnd.ms-excel;base64,';
        var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';
        var base64 = function (s) {
            return window.btoa(unescape(encodeURIComponent(s)))
        };

        var format = function (s, c) {
            return s.replace(/{(\w+)}/g, function (m, p) {
                return c[p];
            })
        };

        htmls = document.getElementById("tblTrialBalanceNotes").innerHTML;

        var ctx = {
            worksheet: 'Worksheet',
            table: htmls
        }
        debugger;
        if('@totalrow' > "0") {
            let reportName = '@GroupCategoryName';
            var link = document.createElement("a");
            link.download = `${reportName}.xls`;
            link.href = uri + base64(format(template, ctx));
            link.click();
        }

    }
</script>