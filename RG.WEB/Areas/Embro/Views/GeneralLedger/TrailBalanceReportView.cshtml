@model List<RG.Application.Contracts.Embro.AccountsReports.TrialBalance.Queries.QueryResponseModel.TrialBalanceReportRM>
@{
    int selectLevel = Model.Count > 0 ? Model.First().SelectLevel : 0;
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>Trail Balance</title>
    <link href="~/AdminLTE-3.1.0/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-5.0.2/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/AdminLTE-3.1.0/plugins/jquery/jquery.min.js"></script>
    <script src="~/AdminLTE-3.1.0/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/lib/bootstrap-5.0.2/js/bootstrap.bundle.min.js"></script>


    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.2.2/css/buttons.dataTables.min.css" />
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.12.3.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>

    <style>
        .header {
            position: sticky;
            top: 0;
        }
    </style>

</head>
@if (selectLevel > 0)
{
    <body>
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 text-center">
                    <h5 class="mb-0">@Model[0].CompanyName</h5>
                    <h6>@Model[0].CompanyAddress</h6>
                    <h6>Trial Balance (@Model[0].DateFrom To @Model[0].DateTo)</h6>
                </div>
            </div>

            <table class="table table-sm table-bordered table-striped text-sm text-center display nowrap" id="tblTrialBalance" style="font-size:11px;">
                <thead class="bg-dark text-white header">
                    <tr>
                        <th rowspan="2">SL#</th>
                        @*<th rowspan="2">Code</th>*@
                        @if (selectLevel >= 4)
                        {
                            <th rowspan="2">Category</th>
                        }
                        @if (selectLevel >= 5)
                        {
                            <th rowspan="2">Sub Category</th>
                        }
                        @if (selectLevel >= 6)
                        {
                            <th rowspan="2">Broad Group</th>
                        }
                        @if (selectLevel >= 7)
                        {
                            <th rowspan="2">Narrow Group</th>
                        }
                        @if (selectLevel >= 8)
                        {
                            <th rowspan="2">Identification</th>
                        }
                        @if (selectLevel >= 14)
                        {
                            <th rowspan="2">Item</th>
                        }


                        <th colspan="2">Opening Balance</th>
                        <th colspan="2">Activity</th>
                        <th colspan="2">Balance</th>
                    </tr>
                    <tr>
                        <th>Debit</th>
                        <th>Credit</th>
                        <th>Debit</th>
                        <th>Credit</th>
                        <th>Debit</th>
                        <th>Credit</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var sl = 0;
                        var lastItem = Model.Last();

                        var obDebitSum = Model.Sum(x => x.OBDebit);
                        var obCreditSum = Model.Sum(x => x.OBCredit);

                        var debitSum = Model.Sum(x => x.Debit);
                        var creditSum = Model.Sum(x => x.Credit);

                        var balanceDebitSum = Model.Sum(x => x.BalanceDebit);
                        var balanceCreditSum = Model.Sum(x => x.BalanceCredit);


                        decimal prevIdentID = 0;
                        string prevIdent = "";
                        decimal prevNGID = 0;
                        string prevNG = "";
                        decimal prevBGID = 0;
                        string prevBG = "";
                        decimal prevSCID = 0;
                        string prevSC = "";
                        decimal prevCID = 0;
                        string prevCat = "";

                        var orderedModel = Model;//.OrderBy(x => x.CID);//.ThenBy(x => x.SCID);//.ThenBy(x=>x.BGID).ThenBy(x=>x.NGID);
                        var totalColspan = 1;
                        foreach (var item in orderedModel)
                        {
                            var currentCategorycount = Model.Where(x => x.CID == item.CID).Count();


                            if (selectLevel > 8 && prevIdentID != 0 && prevIdentID != item.IdentID)
                            {
                                var identificationSum = Model.Where(x => x.IdentID == prevIdentID)
                                    .GroupBy(x => new { x.IdentID, x.IDENTIFICATION })
                                    .Select(r => new
                                    {
                                        IdentID = r.Key.IdentID,
                                        IDENTIFICATION = r.Key.IDENTIFICATION,
                                        Debit = r.Sum(x => x.Debit),
                                        Credit = r.Sum(x => x.Credit),
                                        OBDebit = r.Sum(x => x.OBDebit),
                                        OBCredit = r.Sum(x => x.OBCredit),
                                        BalanceDebit = r.Sum(x => x.BalanceDebit),
                                        BalanceCredit = r.Sum(x => x.BalanceCredit)
                                    }).ToList();

                                <tr>
                                    <td></td>
                                    <td style="background-color:#00bfff;font-weight:bold;" colspan="2">@prevIdent Total</td>
                                    <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].OBDebit))</td>
                                    <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].OBCredit))</td>
                                    <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].Debit))</td>
                                    <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].Credit))</td>
                                    <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].BalanceDebit))</td>
                                    <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].BalanceCredit))</td>
                                </tr>
                            }
                            if (selectLevel > 7 && prevNGID != 0 && prevNGID != item.NGID)
                            {
                                var ngSum = Model.Where(x => x.NGID == prevNGID)
                                    .GroupBy(x => new { x.NGID, x.NarrowGroup })
                                    .Select(r => new
                                    {
                                        NGID = r.Key.NGID,
                                        NarrowGroup = r.Key.NarrowGroup,
                                        Debit = r.Sum(x => x.Debit),
                                        Credit = r.Sum(x => x.Credit),
                                        OBDebit = r.Sum(x => x.OBDebit),
                                        OBCredit = r.Sum(x => x.OBCredit),
                                        BalanceDebit = r.Sum(x => x.BalanceDebit),
                                        BalanceCredit = r.Sum(x => x.BalanceCredit)

                                    }).ToList();
                                totalColspan = 2;
                                if (selectLevel > 8)
                                {
                                    totalColspan = 3;
                                }

                                <tr class="text-white">
                                    <td></td>

                                    <td style="background-color:#0080ff;font-weight:bold;" colspan="@totalColspan">@prevNG Total</td>
                                    <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                    <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                    <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                    <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                    <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                    <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                </tr>
                            }
                            if (selectLevel > 6 && prevBGID != 0 && prevBGID != item.BGID)
                            {
                                var ngSum = Model.Where(x => x.BGID == prevBGID)
                                    .GroupBy(x => new { x.BGID, x.BroadGroup })
                                    .Select(r => new
                                    {
                                        BGID = r.Key.BGID,
                                        BroadGroup = r.Key.BroadGroup,
                                        Debit = r.Sum(x => x.Debit),
                                        Credit = r.Sum(x => x.Credit),
                                        OBDebit = r.Sum(x => x.OBDebit),
                                        OBCredit = r.Sum(x => x.OBCredit),
                                        BalanceDebit = r.Sum(x => x.BalanceDebit),
                                        BalanceCredit = r.Sum(x => x.BalanceCredit)

                                    }).ToList();
                                totalColspan = 2;
                                if (selectLevel > 8)
                                    totalColspan = 4;
                                else if (selectLevel > 7)
                                    totalColspan = 3;


                                <tr class="text-white">
                                    <td></td>

                                    <td style="background-color:#0040ff;font-weight:bold;" colspan="@totalColspan">@prevBG Total</td>
                                    <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                    <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                    <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                    <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                    <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                    <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                </tr>
                            }
                            if (selectLevel > 5 && prevSCID != 0 && prevSCID != item.SCID)
                            {
                                var ngSum = Model.Where(x => x.SCID == prevSCID)
                                    .GroupBy(x => new { x.SCID, x.SubCateogory })
                                    .Select(r => new
                                    {
                                        SCID = r.Key.SCID,
                                        SubCateogory = r.Key.SubCateogory,
                                        Debit = r.Sum(x => x.Debit),
                                        Credit = r.Sum(x => x.Credit),
                                        OBDebit = r.Sum(x => x.OBDebit),
                                        OBCredit = r.Sum(x => x.OBCredit),
                                        BalanceDebit = r.Sum(x => x.BalanceDebit),
                                        BalanceCredit = r.Sum(x => x.BalanceCredit)

                                    }).ToList();
                                totalColspan = 2;
                                if (selectLevel > 8)
                                    totalColspan = 5;
                                else if (selectLevel > 7)
                                    totalColspan = 4;
                                else if (selectLevel > 6)
                                    totalColspan = 3;


                                <tr class="text-white">
                                    <td colspan="2"></td>

                                    <td style="background-color:#0000ff;font-weight:bold;" colspan="@totalColspan">@prevSC Total</td>
                                    <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                    <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                    <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                    <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                    <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                    <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                </tr>
                            }
                            if (selectLevel > 4 && prevCID != 0 && prevCID != item.CID)
                            {
                                var ngSum = Model.Where(x => x.CID == prevCID)
                                    .GroupBy(x => new { x.CID, x.Category })
                                    .Select(r => new
                                    {
                                        CID = r.Key.CID,
                                        Category = r.Key.Category,
                                        Debit = r.Sum(x => x.Debit),
                                        Credit = r.Sum(x => x.Credit),
                                        OBDebit = r.Sum(x => x.OBDebit),
                                        OBCredit = r.Sum(x => x.OBCredit),
                                        BalanceDebit = r.Sum(x => x.BalanceDebit),
                                        BalanceCredit = r.Sum(x => x.BalanceCredit)

                                    }).ToList();
                                totalColspan = 2;
                                if (selectLevel > 8)
                                    totalColspan = 6;
                                else if (selectLevel > 7)
                                    totalColspan = 5;
                                else if (selectLevel > 6)
                                    totalColspan = 4;
                                else if (selectLevel > 5)
                                    totalColspan = 3;


                                <tr class="text-white">
                                    <td></td>

                                    <td style="background-color:#4000ff;font-weight:bold;" colspan="@totalColspan">@prevCat Total</td>
                                    <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                    <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                    <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                    <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                    <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                    <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                </tr>
                            }
                            <tr>
                                <td>@(++sl)</td>
                                @*<th>@item.CategoryAccountCode</th>*@
                                @if (selectLevel >= 4)
                                {
                                    if (prevCID != item.CID)
                                    {
                                        var currentCatCount = Model.Where(x => x.CID == item.CID).Count();
                                        var currentBGCount = 0;
                                        var currentNGIdentCount = 0;
                                        var currentNGCount = 0;
                                        var currentSCCount = 0;
                                        if (selectLevel > 8)
                                            currentNGIdentCount = Model.Where(x => x.CID == item.CID).Select(x => x.IdentID).Distinct().Count();
                                        if (selectLevel > 7)
                                            currentNGCount = Model.Where(x => x.CID == item.CID).Select(x => x.NGID).Distinct().Count();
                                        if (selectLevel > 6)
                                            currentBGCount = Model.Where(x => x.CID == item.CID).Select(x => x.BGID).Distinct().Count();
                                        if (selectLevel > 5)
                                            currentSCCount = Model.Where(x => x.CID == item.CID).Select(x => x.SCID).Distinct().Count();

                                        <td title="@item.Category" rowspan="@(currentCatCount+currentSCCount+currentBGCount+currentNGIdentCount+currentNGCount)">@item.Category</td>
                                    }
                                    @*<td>@item.Category</td>*@
                                }
                                @if (selectLevel >= 5)
                                {
                                    if (prevSCID != item.SCID)
                                    {
                                        var currentSCCount = Model.Where(x => x.SCID == item.SCID).Count();
                                        var currentBGCount = 0;
                                        var currentNGIdentCount = 0;
                                        var currentNGCount = 0;
                                        if (selectLevel > 8)
                                            currentNGIdentCount = Model.Where(x => x.SCID == item.SCID).Select(x => x.IdentID).Distinct().Count();
                                        if (selectLevel > 7)
                                            currentNGCount = Model.Where(x => x.SCID == item.SCID).Select(x => x.NGID).Distinct().Count();
                                        if (selectLevel > 6)
                                            currentBGCount = Model.Where(x => x.SCID == item.SCID).Select(x => x.BGID).Distinct().Count();

                                        <td title="@item.SubCateogory" rowspan="@(currentSCCount+currentBGCount+currentNGIdentCount+currentNGCount)">@item.SubCateogory</td>
                                    }


                                    @*<td>@item.SubCateogory</td>*@
                                }
                                @if (selectLevel >= 6)
                                {
                                    if (prevBGID != item.BGID)
                                    {
                                        var currentBGCount = Model.Where(x => x.BGID == item.BGID).Count();
                                        var currentNGIdentCount = 0;
                                        var currentNGCount = 0;
                                        if (selectLevel > 8)
                                            currentNGIdentCount = Model.Where(x => x.BGID == item.BGID).Select(x => x.IdentID).Distinct().Count();
                                        if (selectLevel > 7)
                                            currentNGCount = Model.Where(x => x.BGID == item.BGID).Select(x => x.NGID).Distinct().Count();

                                        <td title="@item.BroadGroup" rowspan="@(currentBGCount+currentNGIdentCount+currentNGCount)">@item.BroadGroup</td>
                                    }
                                }
                                @if (selectLevel >= 7)
                                {
                                    if (prevNGID != item.NGID)
                                    {
                                        var currentNGCount = Model.Where(x => x.NGID == item.NGID).Count();
                                        var currentNGIdentCount = 0;
                                        if (selectLevel > 8)
                                        {
                                            currentNGIdentCount = Model.Where(x => x.NGID == item.NGID).Select(x => x.IdentID).Distinct().Count();
                                        }

                                        <td title="@item.NarrowGroup" rowspan="@(currentNGCount+currentNGIdentCount)">@item.NarrowGroup</td>
                                    }
                                    @*<td >@item.NarrowGroup</td>*@
                                }
                                @if (selectLevel >= 8)
                                {
                                    if (prevIdentID != item.IdentID)
                                    {
                                        var currentIdentCount = Model.Where(x => x.IdentID == item.IdentID).Count();
                                        <td title="@item.IDENTIFICATION" rowspan="@currentIdentCount">@item.IDENTIFICATION</td>
                                    }


                                }
                                @if (selectLevel >= 14)
                                {
                                    <td title="@item.ITEM"><a href="Javascript:void(0)" onclick="GetVoucherDetail(@item.TopID)">@item.ITEM</a></td>
                                    @*<td title="@item.ITEM">@item.ITEM</td>*@
                                }
                                <td>@(String.Format("{0:n2}", item.OBDebit))</td>
                                <td>@(String.Format("{0:n2}", item.OBCredit))</td>
                                <td>@(String.Format("{0:n2}", item.Debit))</td>
                                <td>@(String.Format("{0:n2}", item.Credit))</td>
                                <td>@(String.Format("{0:n2}", item.BalanceDebit))</td>
                                <td>@(String.Format("{0:n2}", item.BalanceCredit))</td>
                            </tr>

                            if (item.Equals(lastItem))
                            {
                                if (selectLevel > 8)
                                {
                                    var identificationSum = Model.Where(x => x.IdentID == item.IdentID)
                                        .GroupBy(x => new { x.IdentID, x.IDENTIFICATION })
                                        .Select(r => new
                                        {
                                            IdentID = r.Key.IdentID,
                                            IDENTIFICATION = r.Key.IDENTIFICATION,
                                            Debit = r.Sum(x => x.Debit),
                                            Credit = r.Sum(x => x.Credit),
                                            OBDebit = r.Sum(x => x.OBDebit),
                                            OBCredit = r.Sum(x => x.OBCredit),
                                            BalanceDebit = r.Sum(x => x.BalanceDebit),
                                            BalanceCredit = r.Sum(x => x.BalanceCredit)
                                        }).ToList();

                                    <tr>
                                        <td></td>
                                        <td style="background-color:#00bfff;font-weight:bold;" colspan="2">@item.IDENTIFICATION Total</td>
                                        <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].OBDebit))</td>
                                        <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].OBCredit))</td>
                                        <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].Debit))</td>
                                        <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].Credit))</td>
                                        <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].BalanceDebit))</td>
                                        <td style="background-color:#00bfff;font-weight:bold;">@(String.Format("{0:n2}", identificationSum[0].BalanceCredit))</td>
                                    </tr>
                                }
                                if (selectLevel > 7)
                                {
                                    var ngSum = Model.Where(x => x.NGID == item.NGID)
                                        .GroupBy(x => new { x.NGID, x.NarrowGroup })
                                        .Select(r => new
                                        {
                                            NGID = r.Key.NGID,
                                            NarrowGroup = r.Key.NarrowGroup,
                                            Debit = r.Sum(x => x.Debit),
                                            Credit = r.Sum(x => x.Credit),
                                            OBDebit = r.Sum(x => x.OBDebit),
                                            OBCredit = r.Sum(x => x.OBCredit),
                                            BalanceDebit = r.Sum(x => x.BalanceDebit),
                                            BalanceCredit = r.Sum(x => x.BalanceCredit)

                                        }).ToList();
                                    totalColspan = 2;
                                    if (selectLevel > 8)
                                    {
                                        totalColspan = 3;
                                    }

                                    <tr class="text-white">
                                        <td></td>

                                        <td style="background-color:#0080ff;font-weight:bold;" colspan="@totalColspan">@item.NarrowGroup Total</td>
                                        <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                        <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                        <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                        <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                        <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                        <td style="background-color:#0080ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                    </tr>
                                }
                                if (selectLevel > 6)
                                {
                                    var ngSum = Model.Where(x => x.BGID == item.BGID)
                                        .GroupBy(x => new { x.BGID, x.BroadGroup })
                                        .Select(r => new
                                        {
                                            BGID = r.Key.BGID,
                                            BroadGroup = r.Key.BroadGroup,
                                            Debit = r.Sum(x => x.Debit),
                                            Credit = r.Sum(x => x.Credit),
                                            OBDebit = r.Sum(x => x.OBDebit),
                                            OBCredit = r.Sum(x => x.OBCredit),
                                            BalanceDebit = r.Sum(x => x.BalanceDebit),
                                            BalanceCredit = r.Sum(x => x.BalanceCredit)

                                        }).ToList();
                                    totalColspan = 2;
                                    if (selectLevel > 8)
                                        totalColspan = 4;
                                    else if (selectLevel > 7)
                                        totalColspan = 3;


                                    <tr class="text-white">
                                        <td></td>

                                        <td style="background-color:#0040ff;font-weight:bold;" colspan="@totalColspan">@item.BroadGroup Total</td>
                                        <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                        <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                        <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                        <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                        <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                        <td style="background-color:#0040ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                    </tr>
                                }
                                if (selectLevel > 5)
                                {
                                    var ngSum = Model.Where(x => x.SCID == item.SCID)
                                        .GroupBy(x => new { x.SCID, x.SubCateogory })
                                        .Select(r => new
                                        {
                                            SCID = r.Key.SCID,
                                            SubCateogory = r.Key.SubCateogory,
                                            Debit = r.Sum(x => x.Debit),
                                            Credit = r.Sum(x => x.Credit),
                                            OBDebit = r.Sum(x => x.OBDebit),
                                            OBCredit = r.Sum(x => x.OBCredit),
                                            BalanceDebit = r.Sum(x => x.BalanceDebit),
                                            BalanceCredit = r.Sum(x => x.BalanceCredit)

                                        }).ToList();
                                    totalColspan = 2;
                                    if (selectLevel > 8)
                                        totalColspan = 5;
                                    else if (selectLevel > 7)
                                        totalColspan = 4;
                                    else if (selectLevel > 6)
                                        totalColspan = 3;


                                    <tr class="text-white">
                                        <td colspan="2"></td>

                                        <td style="background-color:#0000ff;font-weight:bold;" colspan="@totalColspan">@item.SubCateogory Total</td>
                                        <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                        <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                        <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                        <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                        <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                        <td style="background-color:#0000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                    </tr>
                                }
                                if (selectLevel > 4)
                                {
                                    var ngSum = Model.Where(x => x.CID == item.CID)
                                        .GroupBy(x => new { x.CID, x.Category })
                                        .Select(r => new
                                        {
                                            CID = r.Key.CID,
                                            Category = r.Key.Category,
                                            Debit = r.Sum(x => x.Debit),
                                            Credit = r.Sum(x => x.Credit),
                                            OBDebit = r.Sum(x => x.OBDebit),
                                            OBCredit = r.Sum(x => x.OBCredit),
                                            BalanceDebit = r.Sum(x => x.BalanceDebit),
                                            BalanceCredit = r.Sum(x => x.BalanceCredit)

                                        }).ToList();
                                    totalColspan = 2;
                                    if (selectLevel > 8)
                                        totalColspan = 6;
                                    else if (selectLevel > 7)
                                        totalColspan = 5;
                                    else if (selectLevel > 6)
                                        totalColspan = 4;
                                    else if (selectLevel > 5)
                                        totalColspan = 3;


                                    <tr class="text-white">
                                        <td></td>

                                        <td style="background-color:#4000ff;font-weight:bold;" colspan="@totalColspan">@item.Category Total</td>
                                        <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBDebit))</td>
                                        <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].OBCredit))</td>
                                        <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Debit))</td>
                                        <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].Credit))</td>
                                        <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceDebit))</td>
                                        <td style="background-color:#4000ff;font-weight:bold;">@(String.Format("{0:n2}", ngSum[0].BalanceCredit))</td>
                                    </tr>
                                }
                            }

                            prevIdentID = item.IdentID;
                            prevIdent = item.IDENTIFICATION;
                            prevNGID = item.NGID;
                            prevNG = item.NarrowGroup;
                            prevBGID = item.BGID;
                            prevBG = item.BroadGroup;
                            prevSCID = item.SCID;
                            prevSC = item.SubCateogory;
                            prevCID = item.CID;
                            prevCat = item.Category;
                        }

                        //loop END
                        <tr class="text-white">

                            <td style="background-color:#6611ff; font-weight: bold;" colspan="@(totalColspan+1)">Grand Total</td>
                            <td style="background-color:#6611ff; font-weight: bold; ">@(String.Format("{0:n2}", orderedModel.Sum(b=>b.OBDebit)))</td>
                            <td style="background-color:#6611ff; font-weight: bold; ">@(String.Format("{0:n2}", orderedModel.Sum(b => b.OBCredit)))</td>
                            <td style="background-color:#6611ff; font-weight: bold; ">@(String.Format("{0:n2}", orderedModel.Sum(b => b.Debit)))</td>
                            <td style="background-color:#6611ff; font-weight: bold; ">@(String.Format("{0:n2}", orderedModel.Sum(b => b.Credit)))</td>
                            @{
                                decimal grandBalanceDebit = 0;
                                decimal grandBalanceCredit = 0;
                                var finalBalance = orderedModel.Sum(b => b.BalanceDebit);
                                var finalBalanceCr = orderedModel.Sum(b => b.BalanceCredit);//Sum(b => b.OBDebit - b.OBCredit + b.Debit - b.Credit);
                                if (finalBalance > 0)
                                {
                                    grandBalanceDebit = finalBalance;
                                }
                                if (finalBalanceCr > 0)
                                {
                                    grandBalanceCredit = finalBalanceCr;
                                }

                                <td style="background-color:#7711ff; font-weight: bold; ">@(String.Format("{0:n2}", grandBalanceDebit))</td>
                                <td style="background-color:#7711ff; font-weight: bold;">@(String.Format("{0:n2}", grandBalanceCredit))</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            <div class="text-center">
                <input type="button" class="btn btn-sm btn-success" value="Excel" id="btnPdf" onclick="exportToExcel()" />
            </div>
        </div>
        <!-- The Modal -->
        <div class="modal" id="myModal" tabindex="-1">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header p-1">
                        <h5 class="modal-title">Voucher Info</h5>
                        <button type="button" class="btn-close btn-sm pt-2 pr-2" data-bs-dismiss="modal"></button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body p-0" id="myModalBody">

                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer p-0 pr-2">
                        <input type="button" class="btn btn-sm btn-success" value="Excel" id="btnDetailPdf" onclick="exportDetailToExcel()" />
                        <button type="button" class="btn btn-sm btn-danger" data-bs-dismiss="modal">Close</button>
                    </div>

                </div>
            </div>
        </div>
    </body>

}
</html>

<script type="text/javascript">
    function GetVoucherDetail(accountID) {
        debugger;
        $("#myModalBody").html('');
        if (accountID > 0) {
            $("#myModalBody").load("/Embro/GeneralLedger/CallVoucherInfoTBViewComponent", { AccountID: accountID, DateFrom: '@Model[0].DateFrom', DateTo: '@Model[0].DateTo', NeedConversion: false }, function () {
                $('#myModal').modal('toggle');
            });
        }
    }
    function exportDetailToExcel() {
        var htmls = "";
        var uri = 'data:application/vnd.ms-excel;base64,';
        var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';
        var base64 = function (s) {
            return window.btoa(unescape(encodeURIComponent(s)))
        };

        var format = function (s, c) {
            return s.replace(/{(\w+)}/g, function (m, p) {
                return c[p];
            })
        };

        htmls = document.getElementById("myModalBody").innerHTML;

        var ctx = {
            worksheet: 'Worksheet',
            table: htmls
        }
        var link = document.createElement("a");
        link.download = "BankAccountGroupDetail.xls";
        link.href = uri + base64(format(template, ctx));
        link.click();
    }
    function exportToExcel() {
        var htmls = "";
        var uri = 'data:application/vnd.ms-excel;base64,';
        var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';
        var base64 = function (s) {
            return window.btoa(unescape(encodeURIComponent(s)))
        };

        var format = function (s, c) {
            return s.replace(/{(\w+)}/g, function (m, p) {
                return c[p];
            })
        };

        htmls = document.getElementById("tblTrialBalance").innerHTML;

        var ctx = {
            worksheet: 'Worksheet',
            table: htmls
        }
        var link = document.createElement("a");
        link.download = "TrialBalance.xls";
        link.href = uri + base64(format(template, ctx));
        link.click();
    }
    $(function () {
        //$("#myModal").draggable({
        //    handle: ".modal-header"
        //});
    });
</script>