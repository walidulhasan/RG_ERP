#pragma checksum "E:\TFS Project\RG_ERP\RG.WEB\Areas\AlgoHR\Views\Notification\LeaveApplication.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e5664a65abe430f4f3e8bc38511c73e8849b7ed0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_AlgoHR_Views_Notification_LeaveApplication), @"mvc.1.0.view", @"/Areas/AlgoHR/Views/Notification/LeaveApplication.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.WEB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.WEB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.IdentityEntities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.Constants;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.Common.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.Contracts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Antiforgery;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e5664a65abe430f4f3e8bc38511c73e8849b7ed0", @"/Areas/AlgoHR/Views/Notification/LeaveApplication.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"579f12fddde6ad7d5e2e7207f508f2b104c1f8c2", @"/Areas/_ViewImports.cshtml")]
    public class Areas_AlgoHR_Views_Notification_LeaveApplication : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "E:\TFS Project\RG_ERP\RG.WEB\Areas\AlgoHR\Views\Notification\LeaveApplication.cshtml"
  
    ViewData[PageInfo.PageTitle] = "Leave Application Notification";
    ViewData[PageInfo.PageHeader] = "Leave Application Notification";

    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<style type=""text/css"">
    .modal {
        overflow-y: auto;
    }

    .Image {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

    .bg-sick-leave {
        background-color: #edaaaa !important;
        color: #835;
    }

    .max-leave-dayes {
        background-color: #bbb6e5;
    }
</style>
<div class=""row"">
    <div class=""col-md-12 col-sm-12"">
        <div id=""grid"">
        </div>
    </div>
</div>

<div class=""row pt-2"">
    <div class=""col-md-12 col-sm-12 text-center"">
        <input type=""button"" class=""btn btn-sm btn-danger d-none"" value=""Approve Multiple"" id=""btnApproveMultipel"" />
    </div>
</div>

<!-- Modal -->
<div id=""notificationDetailModal"" class=""modal fade"" role=""dialog"" style=""z-index:1050"">
    <div class=""modal-dialog modal-lg"">

        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header p-2"">
                <h5 class=""modal-title"">Leave Detail</h5>
      ");
            WriteLiteral(@"          <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                <input type=""hidden"" id=""hdnNotificationID"" />
                <input type=""hidden"" id=""hdnIsAdjusted"" />
                <input type=""hidden"" id=""hdnEmployeeID"" />
                <input type=""hidden"" id=""hdnLeaveTypeID"" />

            </div>
            <div class=""modal-body"">
                <table id=""tblNotificationDetail"" class=""table table-sm table-striped table-bordered text-sm mb-0"">
                    <thead class=""bg-dark"">
                    </thead>
                    <tbody id=""tbodyNotificationDetail"">
                    </tbody>
                    <caption id=""tcaptionComplimentaryLeaveDetail"" class=""p-0 mt-2 text-"" style=""text-align:revert"">

                    </caption>
                    <caption id=""captionShortLeaveAtt"" class=""bg-info p-0 m-0 d-none"" style=""text-align:revert"">

                    </caption>
                </table>
                <div class=""");
            WriteLiteral("row\" id=\"divNeedAdjustment\">\r\n                    <div class=\"col-4 col-sm-3\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 2452, "\"", 2460, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""chkNeedAdjustment"">
                            <label class=""form-check-label"" for=""defaultCheck1"">
                                Need Adjustment
                            </label>
                        </div>
                    </div>
                    <div class=""col-4 col-sm-4 d-none divLeaveAdjust"">
                        <div class=""form-group mb-2"">
");
            WriteLiteral(@"                            <div class=""input-group"">
                                <label class=""required"">From</label>
                                <input type=""text"" id=""AdjustedDateFrom"" class=""form-control form-control-sm readonlyNormal dateFieldCustom"" readonly style=""position:relative;z-index:1100;"" />
                                <div class=""input-group-append"">
                                    <span class=""input-group-text""><i class=""fa fa-calendar"" aria-hidden=""true""></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""col-4 col-sm-4 d-none divLeaveAdjust"">
                        <div class=""form-group mb-2"">
");
            WriteLiteral(@"                            <div class=""input-group"">
                                <label class=""required"">To</label>
                                <input type=""text"" id=""AdjustedDateTo"" class=""form-control form-control-sm readonlyNormal dateFieldCustom"" readonly style=""position:relative;z-index:1100;"" />
                                <div class=""input-group-append"">
                                    <span class=""input-group-text""><i class=""fa fa-calendar"" aria-hidden=""true""></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class=""row mt-2"">
                    <div class=""col-md-12"">
                        <div class=""icheck-success d-inline"">
                            <input class=""chkPreLeaveHistory"" type=""radio"" value=""PreLeaveHistory"" name=""leaveInfo"">
                            <label class=""text-body leaveHistoryType"">Leave History</label");
            WriteLiteral(@">
                            &nbsp;
                            <input class=""chkPreLeaveHistory"" type=""radio"" value=""PreLeaveAllHistory"" name=""leaveInfo"">
                            <label class=""text-body"">All Leave History</label>
                        </div>
                    </div>
                </div>
                <table id=""tblNotificationLeaveDetail"" class=""table table-sm table-striped table-bordered text-center text-xs d-none mt-1"">
                    <thead class=""bg-dark"">
                        <tr>
                            <th>SL#</th>
                            <th>Leave Type</th>
                            <th>Leave From</th>
                            <th>Leave To</th>
                            <th>Total Days</th>
                            <th>Reason</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id=""tbodyLeavehistory"">
");
            WriteLiteral(@"                    </tbody>
                </table>

            </div>
            <div class=""row p-1"">
                <div class=""col-md-12 col-sm-12"">
                    <div class=""col-md-12"">
                        <button type=""button"" class=""btn btn-xs btn-danger float-left"" onclick=""ApproveRejectNotification('reject')"">Reject</button>
                        <button type=""button"" class=""btn btn-xs btn-success float-right"" onclick=""ApproveRejectNotification('approve')"">Approve</button>
                    </div>
                </div>
            </div>
");
            WriteLiteral("        </div>\r\n\r\n    </div>\r\n</div>\r\n");
            WriteLiteral(@"
<div id=""modalLeaveApprovalFlowInfos"" class=""modal fade"" role=""dialog"" style=""z-index:1050"">
    <div class=""modal-dialog modal-lg"">

        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header p-2"">
                <h5 class=""modal-title"">Leave Approval Flow</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <table id=""tblLeaveApprovalFlowInfos"" class=""table table-sm table-striped table-bordered text-sm text-center"">
                    <thead class=""bg-dark"">
                        <tr>
                            <td style=""width:5%"">SL#</td>
                            <td style=""width:55%"">Checked By</td>
                            <td style=""width:15%"">Checked Date</td>
                            <td style=""width:10%"">Status</td>
                            <td style=""width:15%"">Remarks</td>
                        </tr>
  ");
            WriteLiteral(@"                  </thead>
                    <tbody id=""tbodyLeaveApprovalFlow"">
                    </tbody>
                </table>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
            </div>
        </div>

    </div>
</div>

");
            WriteLiteral(@"
<div id=""imgModal"" class=""modal fade"" role=""dialog"" style=""z-index:1500"">
    <div class=""modal-dialog modal-lg"">

        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header p-2"">
                <h6 class=""modal-title"" id=""caption""></h6>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <img class=""modal-content"" id=""largeImg"">
");
            WriteLiteral("            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">

        //function ClearAdjustLeave() {
        //    $('#hdnIsAdjusted').val(0);
        //    $(""#AdjustedDateFrom"").val('');
        //    $(""#AdjustedDateTo"").val('');
        //    $(""#divLeaveAdjust,#btnClearAdjust"").addClass('d-none');
        //    $(""#btnAdjust"").removeClass('d-none');
        //}
        //function AdjustLeave() {
        //    $('#hdnIsAdjusted').val(1);
        //    $(""#AdjustedDateFrom"").val($("".hdnLeaveFromMsg"").val());
        //    $(""#AdjustedDateTo"").val($('.hdnLeaveToMsg').val());
        //    $(""#divLeaveAdjust,#btnClearAdjust"").removeClass('d-none');
        //    $(""#btnAdjust"").addClass('d-none');
        //}

        function saveSuccess(data) {

            if (data.result == 1) {

                $.alert.open({
                    type: 'Success',
                    content: data.message,
                    callback: function () {
                        $(""#hdnNotificationID"").val('');
            ");
                WriteLiteral(@"            $('#notificationDetailModal').modal('hide');
                        NotificationList();
                    }
                });
            }
            else {
                $.alert.open(""error"", data.message);
            }
        }
        function ApproveRejectNotification(type, notificationIDList) {
            let notColor = ""text-danger"";
            if (type == ""approve"") {
                notColor = ""text-success""
            }
            $.alert.open('prompt', '<p class=""' + notColor + '"">Are you sure to <b>' + type.toUpperCase() + '</b> this record?<br/><br/>Enter your <b>' + type.toUpperCase() + '</b> comments :</p>', function (button, value) {

                if (button == 'ok') {
                    debugger;
                    //if (value != """") {
                    let notificationIDs = new Array();
                    let notificationID = 0;
                    if (typeof notificationIDList != 'undefined' && notificationIDList.length > 0) {
        ");
                WriteLiteral(@"                notificationIDs = notificationIDList;
                    } else {
                        notificationID = $(""#hdnNotificationID"").val();
                        notificationIDs.push(notificationID);
                    }

                    if (notificationIDs.length > 0) {
                        if (type === 'approve') {
                            let isAdjusted = RtnBool($('#hdnIsAdjusted').val());
                            let adjustedDateFrom = '';
                            let adjustedDateTo = '';
                            let applicationID = $(""#hdnApplicationID"").val();
                            if (isAdjusted) {
                                adjustedDateFrom = $(""#AdjustedDateFrom"").val();
                                adjustedDateTo = $(""#AdjustedDateTo"").val();
                            }
                            HttpRequest.Ajax(""POST"", '/AlgoHR/Notification/ApproveNotification', { ""notificationIDs"": notificationIDs, 'comment': value, 'isAdjuste");
                WriteLiteral(@"d': isAdjusted, 'applicationID': applicationID, 'adjustedDateFrom': adjustedDateFrom, 'adjustedDateTo': adjustedDateTo }, saveSuccess, true);
                        } else if (type === 'reject') {
                            HttpRequest.Ajax(""POST"", '/AlgoHR/Notification/RejectNotification', { ""notificationID"": notificationID, 'comment': value }, saveSuccess, true);
                        } else {
                            $.alert.open(""error"", 'Error Occured!');
                        }
                    }
                    //} else {
                    //    $.alert.open('You must write a comment');
                    //}

                } else {
                    $(""#hdnNotificationID"").val('');
                }

            });
        }
        function EnlargeImage(thatImg) {

            $(""#largeImg"").attr('src', thatImg.src);
            $(""#caption"").text(thatImg.alt);
            $(""#imgModal"").modal('toggle');
        }

        function NotificationDetails(d");
                WriteLiteral(@"ata) {

            $(""#tbodyNotificationDetail"").html('');
            $(""#hdnNotificationID"").val(0);
            if (data != null) {
                var dataDetail = HttpRequest.AjaxData('GET', '/AlgoHR/ApplicationDocuments/GetApplicationDocuments', { applicationID: data.ApplicationID });

                let tr = '';
                tr = `<tr><td class='col-2 col-md-2'><b>Application Date</b></td><td class='col-3 col-md-3'> ${data.LeaveCreatedMsg}</td><td class='col-3 col-md-3'><b>${data.LeaveType} Enjoyed </b></td><td class='col-4 col-md-4'><span class=""text-danger""><b>${data.LeaveEnjoyed}</b></span></td></tr>
                                                                        <tr><td class='col-2 col-md-2'><b>Leave Date</b></td><td class='col-3 col-md-3'><input type='hidden' class='hdnLeaveFromMsg'value=${data.LeaveFromMsg} /><input type='hidden' class='hdnLeaveToMsg' value=${data.LeaveToMsg} /><b>${data.LeaveDate}</b></td><td class='col-3 col-md-3'><b>Leave Days </b></td><td class='col-4 c");
                WriteLiteral(@"ol-md-4'><b>${data.LeaveDays}</b></td></tr>
                                                                                <tr><td class='col-2 col-md-2'><input type='hidden' id='hdnApplicationID'value=${data.ApplicationID} /><b>Leave Reason</b></td><td class='col-3 col-md-3 bg-danger text-white'> ${data.LeaveReason}</td><td class='col-3 col-md-3'><b>Address of Leave </b></td><td class='col-4 col-md-4'> ${data.LeaveAddress}</td></tr>`;
                if (dataDetail.length > 0) {
                    let img = ``;
                    $.each(dataDetail, function (i, v) {
                        img += `<img class=""Image mr-2"" src='/${v.DocumentPath}' title='${v.DocumentType}' alt=${v.DocumentType} width=""100"" height=""100"" onclick='EnlargeImage(this)'/>`;
                        //    img += `<div class=""col-sm-2 col-md-2 col-lg-2"">
                        //    <img class=""Image"" src='/${v.DocumentPath}' alt=${v.DocumentType} width=""100"" height=""100"" />
                        //</div>`;
             ");
                WriteLiteral(@"       });

                    tr += `<tr><td colspan='4'>${img}</td></tr>`;
                }
                $(""#hdnNotificationID"").val(data.NotificationID);
                $(""#tbodyNotificationDetail"").html(tr);

                $('#notificationDetailModal').modal('toggle');
            }
        }
        function NotificationList() {
            var dataGrid = $(""#grid"").dxDataGrid({
                height: 510,
                remoteOperations: { paging: true, filtering: true, sorting: false, grouping: false, summary: false, groupPaging: false },
                dataSource: DevExpress.data.AspNet.createStore({
                    key: ""NotificationID"",
                    loadUrl: ""/AlgoHR/Notification/GetLeaveApplicationNotificationList""
                }),
                hoverStateEnabled: true,

                showBorders: true,
                columnAutoWidth: true,
                sorting: {
                    mode: ""multiple""
                },
                filter");
                WriteLiteral(@"Row: { visible: true },
                pager: { visible: true, showInfo: true, allowedPageSizes: [20, 50, 100, 500], showPageSizeSelector: true, },
                paging: { pageSize: 20 },
                selection: { mode: 'multiple' },
                export: {
                    //   enabled: true
                },
                columns: [
                    {
                        width: ""40"",
                        caption: ""SL #"",
                        alignment: 'center',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        },
                        cellTemplate: function (container, e) {
                            var index = dataGrid.pageIndex() * dataGrid.pageSize() + e.rowIndex + 1;
                            container.text(index);
                        }

                    },
                    {
           ");
                WriteLiteral(@"             dataField: ""NotificationID"",
                        visible: false,

                    },
                    {
                        dataField: ""EmployeeCode"",
                        alignment: 'center',
                        caption: 'Code',
                        width: ""78"",
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""EmployeeName"",
                        alignment: 'center',
                        caption: 'Name',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""Designation"",
          ");
                WriteLiteral(@"              alignment: 'center',
                        caption: 'Designation',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""DivisionName"",
                        alignment: 'center',
                        caption: 'Division',
                        width: ""80"",
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""DepartmentName"",
                        alignment: 'center',
                        caption: 'Department',
                        headerCellTemplate: function (header, info) {
                          ");
                WriteLiteral(@"  $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""SectionName"",
                        alignment: 'center',
                        caption: 'Section',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""LeaveType"",
                        alignment: 'center',
                        width: ""90"",
                        caption: 'Leave Type',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataFi");
                WriteLiteral(@"eld: ""LeaveEnjoyed"",
                        alignment: 'center',
                        width: ""60"",
                        caption: 'Enjoyed',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        dataField: ""LeaveDateSort"",
                        alignment: 'center',
                        caption: 'Leave Date',
                        //width: ""170"",
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        },
                        cellTemplate: function (element, info) {
                            var leaveDateSort = info.data.LeaveDateSort;
                            var hasMultipledayes = leaveDateSort.includes(""to"")");
                WriteLiteral(@";
                            var isSortLeave = leaveDateSort.includes(""("");
                            var cssClass = "" "";
                            if (hasMultipledayes && isSortLeave == false) {
                                cssClass += "" max-leave-dayes font-weight-bold"";
                            } else if (isSortLeave) {
                                cssClass += "" bg-dark"";
                            } else {
                                cssClass += "" font-weight-normal"";
                            }
                            element.append(`<div class=""${cssClass}"">${info.text}</div>`);

                        }
                    },
                    //{
                    //    dataField: ""LeaveToMsg"",
                    //    alignment: 'center',
                    //    caption: 'To',
                    //    width: ""85"",
                    //    headerCellTemplate: function (header, info) {
                    //        $('<div>').html(info.column.capti");
                WriteLiteral(@"on).css('font-weight', 'bold').appendTo(header);
                    //    }
                    //},
                    {
                        dataField: ""LeaveDays"",
                        alignment: 'center',
                        caption: 'Days',
                        width: ""50"",
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        }
                    },
                    {
                        caption: ""Action"",
                        alignment: 'center',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        },
                        cellTemplate: function (container, options) {
                            var returnText = '<button class=""btn btn-xs btn-info""><i class=""fa");
                WriteLiteral(@" fa-bars""></i></button>';
                            returnText = returnText + '</div>';
                            $(returnText).on('dxclick', function (e) {
                                e.stopPropagation();
                                NotificationDetails(options.data);
                            }).appendTo(container);

                            var returnTextApproved = '<span>&nbsp;</span><button class=""btn btn-xs btn-success""><i class=""fa fa-check""></i></button>';
                            returnTextApproved = returnTextApproved + '</div>';
                            $(returnTextApproved).on('dxclick', function (e) {
                                e.stopPropagation();
                                $(""#hdnNotificationID"").val(options.data.NotificationID);
                                ApproveRejectNotification('approve');
                            }).appendTo(container);
                        }
                    }

                ],
                onCellPrepare");
                WriteLiteral(@"d: function (e) {
                    if (e.rowType === ""data"" && e.column.dataField === ""LeaveType"") {
                        //e.cellElement.addClass('bg-warning');
                        var LeaveTypeId = e.data.LeaveTypeID;

                        if (LeaveTypeId == 0) {
                            e.cellElement.addClass('bg-danger');
                        }
                        else if (LeaveTypeId == 8) {
                            e.cellElement.addClass('bg-sick-leave');
                        }
                        else if (LeaveTypeId == 9) {
                            e.cellElement.addClass('bg-primary');
                        }
                        else if (LeaveTypeId == 10) {
                            e.cellElement.addClass('bg-info');
                        }
                        else if (LeaveTypeId == 11) {
                            e.cellElement.addClass('bg-light');
                        }
                        else if (LeaveTypeId == 14) {");
                WriteLiteral(@"
                            e.cellElement.addClass('bg-secondary');
                        }

                        else {
                            e.cellElement.addClass('bg-warning');
                        }
                        //  e.cellElement.css(""background-color"", e.data.Color.color);
                    }
                    if (e.rowType === ""data"" && (e.column.dataField === ""LeaveDays"")) {
                        e.cellElement.addClass('bg-danger');
                    }
                    if (e.rowType === ""data"" && (e.column.dataField === ""LeaveEnjoyed"")) {
                        e.cellElement.addClass('bg-success');
                    }
                },

            }).dxDataGrid(""instance"");
            $(""#select-all-mode"").dxSelectBox({
                dataSource: [""allPages"", ""page""],
                value: ""allPages"",
                onValueChanged: function (data) {
                    dataGrid.option(""selection.selectAllMode"", data.value);
          ");
                WriteLiteral(@"      }
            });
        }
        function NotificationDetails(data) {
            debugger
            console.log(data);
            if (data.LeaveTypeID == 14 || data.LeaveType == ""Complimentary Leave"" || data.LeaveType == ""Short Leave"") {
                $(""#divNeedAdjustment"").addClass('d-none');
            } else {
                $(""#divNeedAdjustment"").removeClass('d-none');
            }
            var tel = document.getElementById('tests');
            $(""#tbodyNotificationDetail"").html('');
            $(""#hdnNotificationID"").val(0);

            if (data != null) {
                var dataDetail = HttpRequest.AjaxData('GET', '/AlgoHR/ApplicationDocuments/GetApplicationDocuments', { applicationID: data.ApplicationID });
                $('.leaveHistoryType').text(`${data.LeaveType} History`);
                let tr = '';
                let trf = '';
                let csl = '';
                tr = `<tr>
                                                        <td s");
                WriteLiteral(@"tyle=""width:16%""><b>Application Date</b></td>
                                                        <td style=""width:30%""> ${data.LeaveCreatedMsg}</td>
                                                        <td style=""width:30%""><b>${data.LeaveType} Enjoyed </b></td>
                                                        <td style=""width:24%""><span class=""text-danger""><b>${data.LeaveEnjoyed}</b></span></td>
                                                      </tr>
                                                      <tr>
                                                        <td style=""width:16%""><b>Leave Date</b></td>
                                                        <td style=""width:34%""><input type='hidden' class='hdnLeaveFromMsg'value=${data.LeaveFromMsg} /><input type='hidden' class='hdnLeaveToMsg' value=${data.LeaveToMsg} /><b>${data.LeaveDate}</b></td>
                                                        <td style=""width:16%""><b>Leave Days </b></td>
                           ");
                WriteLiteral(@"                             <td style=""width:34%""><b>${data.LeaveDays}</b></td>
                                                      </tr>
                                                      <tr>
                                                        <td style=""width:16%""><input type='hidden' id='hdnApplicationID'value=${data.ApplicationID} /><b>Leave Reason</b></td>
                                                        <td style=""width:34%"" class=""bg-danger text-white""> ${data.LeaveReason}</td>
                                                        <td style=""width:16%""><b>Address of Leave </b></td>
                                                        <td style=""width:34%""> ${data.LeaveAddress}</td>
                                                      </tr>`;
                if (data.LeaveTypeID == 14) {
                    trf = `<tr title=""I am attending on this ${data.HolidayType} holiday."">
                                                          <td style=""width:25%;""><b>Complimen");
                WriteLiteral(@"tary Leave Date</b></td>
                                                          <td style=""width:38%;""> ${data.ComplimentaryLeaveDate} (${data.HolidayType})</td>
                                                          <td style=""width:20%""><b>In Time : </b> ${data.AttendanceInTime}</td>
                                                          <td style=""width:20%"" id=""tests""><b>Out Time : </b>${data.AttendanceOutTime}</td>
                                                      </tr>
                                                        `;
                    if (data.AttendanceInTime == null) {
                        $(""#tcaptionComplimentaryLeaveDetail"").addClass(""bg-danger"");
                    } else {
                        $(""#tcaptionComplimentaryLeaveDetail"").addClass(""bg-success"");
                    }
                }
                if (data.LeaveType === ""Short Leave"") {

                    data.LeaveTypeID = -1;

                    $(""#captionShortLeaveAtt"").removeCla");
                WriteLiteral(@"ss('d-none');
                    let colStatus = 'bg-primary';
                    let outTimeStatus = """";
                    if (data.AttendanceInTime != null) {
                        outTimeStatus = data.ShortLeaveOutTimeStatus == ""earlytime"" ? ""bg-danger"" : """";
                        outTimeStatusTitle = data.ShortLeaveOutTimeStatus == ""earlytime"" ? ""Early Out"" : """";
                        csl = `<tr title='Attendance Status on Short Leave Date.'>
                                                          <td style=""width:30%;""><b>Short Leave (Attendance Status)</b></td>
                                                          <td style=""width:25%;""> ${data.AttendanceDateStr}</td>
                                                          <td style=""width:20%""><b>In Time : </b> ${data.AttendanceInTime}</td>
                                                          <td title='${outTimeStatusTitle}' class='${outTimeStatus}' style=""width:28%"" id=""tests""><b>Out Time : </b>${data.AttendanceOutTim");
                WriteLiteral(@"e}</td>
                                                      </tr>`;
                    } else {
                        colStatus = 'bg-danger';
                        csl = `<tr title='Attendance Status on Short Leave Date'>
                                                          <td style=""width:30%;""><b>Short Leave (Attendance Status)</b></td>
                                                          <td style=""width:25%;""> ${data.AttendanceDateStr}</td>
                                                           <td style=""width:20%""><b> Attendance Status -</b></td>
                                                          <td style=""width:45%""><b>  </b> Employee isn't Present  </td>
                                                      </tr>`;
                    }
                    $(""#captionShortLeaveAtt"").addClass(colStatus);

                }
                if (dataDetail.length > 0) {
                    let img = ``;
                    $.each(dataDetail, function (i, v) {");
                WriteLiteral(@"
                        img += `<img class=""Image mr-2"" src='/${v.DocumentPath}' title='${v.DocumentType}' alt=${v.DocumentType} width=""100"" height=""100"" onclick='EnlargeImage(this)'/>`;
                        //    img += `<div class=""col-sm-2 col-md-2 col-lg-2"">
                        //    <img class=""Image"" src='/${v.DocumentPath}' alt=${v.DocumentType} width=""100"" height=""100"" />
                        //</div>`;
                    });

                    tr += `<tr><td colspan='4'>${img}</td></tr>`;
                }
                //GetHistoryDetail(data.EmployeeID, data.LeaveTypeID);
                $(""#hdnNotificationID"").val(data.NotificationID);
                $(""#hdnEmployeeID"").val(data.EmployeeID);
                $(""#hdnLeaveTypeID"").val(data.LeaveTypeID);
                
                $(""#tbodyNotificationDetail"").html(tr);
                $(""#tcaptionComplimentaryLeaveDetail"").html(trf);
                $(""#captionShortLeaveAtt"").html(csl);
                $('#noti");
                WriteLiteral(@"ficationDetailModal').modal('toggle');
            }
        }
        //Leave History
        function LeaveApprovalFlow(that) {
            let notificationTr = $(that).parent().parent().find('.hiddenDetail').val();
            $(""#tbodyLeaveApprovalFlow"").html(notificationTr);
            $('#modalLeaveApprovalFlowInfos').modal().hide();
        }
        function GetHistoryDetail(employeeID, leaveTypeID) {
            //document.getElementById(""chkPreLeaveHistory"").checked = false;
            $(""#tblNotificationLeaveDetail"").addClass('d-none');

            let LeaveHistoryData = {
                EmployeeID: employeeID,
                LeaveTypeID: leaveTypeID,
                LeaveStatusIndependent: true
            }

            var data = HttpRequest.AjaxData('POST', '/AlgoHR/Notification/EmpLeaveDetailInfo', { queryModel: LeaveHistoryData });
            console.log(data);

            let rowLeaveHistory = '';
            $.each(data, function (d, e) {
                let n");
                WriteLiteral(@"otificationTr = ``;
                if (e.NotificationHistory.length > 0) {

                    $.each(e.NotificationHistory, function (i, v) {

                        notificationTr += `<tr>
                                                                    <td>${(++i)}</td>
                                                                    <td>${v.ApprovalEmployee}&nbsp;&nbsp;<sub><b>${v.DesignationName}<b>,  ${v.DepartmentName}</sub></td>
                                                                    <td>${v.CheckedDate}</td>
                                                                    <td>${v.ApprovalStatus}</td>
                                                                    <td>${v.Remarks == null ? """" : v.Remarks}</td>
                                                                 </tr>`;

                    });
                }

                let trBgColor = '';
                let trBgColorStatus = ''
                let trMessage = '';
                if ");
                WriteLiteral(@"(e.LeaveStatus == 'Rejected') {
                    trBgColorStatus = 'background-color:red;'

                }
                if (e.IsNotCurrentMonth) {
                    trBgColor = 'background-color:darkgray;';
                    trMessage = 'For Current Month Wise Leave';
                }
                rowLeaveHistory += `<tr style='${trBgColor}' title='${trMessage}'>
                                                <td>${++d}</td>
                                                <td>${e.LeaveType}</td>
                                                <td>${e.LeaveFromMsg}</td>
                                                <td>${e.LeaveToMsg}</td>
                                                <td>${e.LeaveDays}</td>
                                                <td>${e.LeaveReason}</td>
                                                <td style='${trBgColorStatus}'><input type=""hidden"" class=""hiddenDetail"" value=""${notificationTr}""> ${e.LeaveStatus}</td>
                         ");
                WriteLiteral(@"                       <td><a href=""Javascript:void(0);"" onclick=""LeaveApprovalFlow(this)""><i class=""fa fa-eye"" aria-hidden=""true""""></i></a></td></tr>`
            });
            $(""#tbodyLeavehistory"").html(rowLeaveHistory);
        }
        $(document).ready(function () {
            NotificationList();
            $(""#notificationDetailModal"").on(""hidden.bs.modal"", function () {
                $(""#captionShortLeaveAtt"").addClass('d-none');
                $('.chkPreLeaveHistory').prop('checked', false);
                $(""#tbodyLeavehistory"").html("""");
                $(""#tblNotificationLeaveDetail"").addClass('d-none');
            });
            $("".dateFieldCustom"").datepicker(
                {
                    dateFormat: ""dd-M-yy"",
                    showAnim: ""scale"",
                    changeMonth: true,
                    yearRange: ""2000:2050"",
                    changeYear: true,

                });
            $(""#chkNeedAdjustment"").change(function () {
       ");
                WriteLiteral(@"         debugger;
                if ($(this).prop('checked')) {
                    $('#hdnIsAdjusted').val(1);
                    $(""#AdjustedDateFrom"").val($("".hdnLeaveFromMsg"").val());
                    $(""#AdjustedDateTo"").val($('.hdnLeaveToMsg').val());
                    $("".divLeaveAdjust"").removeClass('d-none');

                } else {
                    $('#hdnIsAdjusted').val(0);
                    $(""#AdjustedDateFrom"").val('');
                    $(""#AdjustedDateTo"").val('');
                    $("".divLeaveAdjust"").addClass('d-none');

                }
            });

            $(""#grid"").dxDataGrid({
                onSelectionChanged: function (e) {
                    debugger;
                    var dataGrid = $(""#grid"").dxDataGrid(""instance"");
                    var selectedRowsData = dataGrid.getSelectedRowsData();
                    if (selectedRowsData.length > 0) {
                        $(""#btnApproveMultipel"").removeClass('d-none');
           ");
                WriteLiteral(@"         } else {
                        $(""#btnApproveMultipel"").addClass('d-none');
                    }
                }
            });

            $(""#btnApproveMultipel"").click(function () {
                debugger;
                var dataGrid = $(""#grid"").dxDataGrid(""instance"");
                var selectedRowsData = dataGrid.getSelectedRowsData();
                let notificationIDs = new Array();
                $.each(selectedRowsData, function (i, v) {
                    notificationIDs.push(v.NotificationID);
                });

                ApproveRejectNotification('approve', notificationIDs);
            });
        });

        $("".chkPreLeaveHistory"").click(function () {
            /*let isChecked = $(this).is(':checked') ? 1 : 0;*/
            var radioValue = $(""input[name='leaveInfo']:checked"").val();
            $(""#tbodyLeavehistory"").html("""");
            $(""#tblNotificationLeaveDetail"").addClass('d-none');
            let employeeID = $(""#hdnEmployee");
                WriteLiteral(@"ID"").val();
            let leaveTypeID = $(""#hdnLeaveTypeID"").val();

            if (radioValue === ""PreLeaveHistory"") {
                GetHistoryDetail(employeeID, leaveTypeID);
                $(""#tblNotificationLeaveDetail"").removeClass('d-none');
            } else if (radioValue === ""PreLeaveAllHistory"") {
               
                GetHistoryDetail(employeeID);
                $(""#tblNotificationLeaveDetail"").removeClass('d-none');
            } else {}
        });
        //$(""#chkPreLeaveAllHistory"").click(function () {
        //    let isChecked = $(this).is(':checked') ? 1 : 0;
        //    $(""#tbodyLeavehistory"").html("""");
        //    if (isChecked == 1) {
        //        let employeeID = $(""#hdnEmployeeID"").val();                
        //        GetHistoryDetail(employeeID);
        //        $(""#tblNotificationLeaveDetail"").removeClass('d-none');
        //    } else if (isChecked == 0) {
        //        $(""#tblNotificationLeaveDetail"").addClass('d-none');
 ");
                WriteLiteral("       //    }\r\n        //});\r\n        \r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
