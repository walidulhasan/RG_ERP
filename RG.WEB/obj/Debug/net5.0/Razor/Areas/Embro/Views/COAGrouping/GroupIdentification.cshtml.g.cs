#pragma checksum "E:\TFS Project\RG_ERP\RG.WEB\Areas\Embro\Views\COAGrouping\GroupIdentification.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0cad7a9976b12a8b01ca9eb21064a291a9d4c120"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Embro_Views_COAGrouping_GroupIdentification), @"mvc.1.0.view", @"/Areas/Embro/Views/COAGrouping/GroupIdentification.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.WEB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.WEB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.IdentityEntities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.Constants;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.Common.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using RG.Application.Contracts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Antiforgery;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\TFS Project\RG_ERP\RG.WEB\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0cad7a9976b12a8b01ca9eb21064a291a9d4c120", @"/Areas/Embro/Views/COAGrouping/GroupIdentification.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"579f12fddde6ad7d5e2e7207f508f2b104c1f8c2", @"/Areas/_ViewImports.cshtml")]
    public class Areas_Embro_Views_COAGrouping_GroupIdentification : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RG.Application.ViewModel.Embro.Setup.COAGroupings.GroupIdentificationVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("label-ajt-sm required"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-sm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "E:\TFS Project\RG_ERP\RG.WEB\Areas\Embro\Views\COAGrouping\GroupIdentification.cshtml"
  
    ViewData[PageInfo.PageTitle] = "Group Identification";
    ViewData[PageInfo.PageHeader] = "Group Identification";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<style>\r\n    .header {\r\n        position: sticky;\r\n        top: 50px;\r\n    }\r\n</style>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0cad7a9976b12a8b01ca9eb21064a291a9d4c1206658", async() => {
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n");
                WriteLiteral("                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0cad7a9976b12a8b01ca9eb21064a291a9d4c1207072", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 18 "E:\TFS Project\RG_ERP\RG.WEB\Areas\Embro\Views\COAGrouping\GroupIdentification.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.GroupCategoryID);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0cad7a9976b12a8b01ca9eb21064a291a9d4c1208681", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("required", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
#nullable restore
#line 19 "E:\TFS Project\RG_ERP\RG.WEB\Areas\Embro\Views\COAGrouping\GroupIdentification.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.GroupCategoryID);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 19 "E:\TFS Project\RG_ERP\RG.WEB\Areas\Embro\Views\COAGrouping\GroupIdentification.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.DDLCOAGroupingCategory;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0cad7a9976b12a8b01ca9eb21064a291a9d4c12011105", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
#nullable restore
#line 20 "E:\TFS Project\RG_ERP\RG.WEB\Areas\Embro\Views\COAGrouping\GroupIdentification.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.GroupCategoryID);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            </div>\r\n        </div>\r\n");
                WriteLiteral("    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-md-12 col-sm-12 col-xs-12"">
        <table class=""table table-sm table-striped table-bordered text-center text-xs"">
            <thead class=""bg-dark header"">
                <tr>
                    <td style=""width:5%"">SL#</td>
                    <td style=""width:10%"">Category</td>
                    <td style=""width:10%"">Sub Category</td>
                    <td style=""width:10%"">Broad Group</td>
                    <td style=""width:10%"">Narrow Group</td>
                    <td style=""width:10%"">Identification</td>
                    <td style=""width:15%"">Group</td>
                    <td style=""width:30%"">Item</td>
                </tr>
            </thead>
            <tbody id=""tbodyCOADetailInfo"">
            </tbody>
        </table>
    </div>
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        function ChangeItemStatus(thatBtn) {

            if ($(thatBtn).find('.clsBtnIcon').hasClass('fa-check')) {
                $(thatBtn).find('.clsBtnIcon').removeClass('fa-check text-success');
                $(thatBtn).find('.clsBtnIcon').addClass('fa-times text-danger');
                //$(thatBtn).parent().addClass('bg-danger');
            } else {
                $(thatBtn).find('.clsBtnIcon').removeClass('fa-times text-danger');
                $(thatBtn).find('.clsBtnIcon').addClass('fa-check text-success');
                //$(thatBtn).parent().removeClass('bg-danger');
            }

        }
        function ChangeCheckedState(that) {
           
            if ($(that).is(':checked')) {
                $(that).parent().parent().find('.clsGroup').attr('disabled', false);
            } else {
                let groupIdentificationID = $(that).parent().find('.hdnGroupIdentificationID').val();
                if (groupIdentificatio");
                WriteLiteral(@"nID>0) {
                    $(that).parent().parent().find('.clsGroup').val('').trigger('change');
                } else {
                    $(that).parent().parent().find('.clsGroup').val('');
                }                
                $(that).parent().parent().find('.clsGroup').attr('disabled', true);
            }
        }
        function saveSuccess(data) {

            if (data.result == 1) {
                //$(""#GroupCategoryID"").trigger(""change"");
                $.alert.open({
                    type: 'Success',
                    content: data.message,
                    callback: function () {

                    }
                });
            }
            else {
                $.alert.open(""error"", data.message);

            }
        }
        $(function () {
            //$(""#GroupID"").select2();
            //$(""#GroupCategoryID"").change(function () {
            //    let groupCategoryID = $(""#GroupCategoryID"").val();
            //    if (gr");
                WriteLiteral(@"oupCategoryID != """") {
            //        HttpRequest.DropDownSelect2(""GET"", '/Embro/COAGrouping/GetDDLCOAGroup', { categoryID: groupCategoryID, predict: $(""#GroupID"").val() }, 'GroupID');
            //    } else {
            //        $(""#tbodyCOADetailInfo"").html("""");
            //        HttpRequest.DropDownDefault('GroupID');
            //    }
            //});

            $(""#GroupCategoryID"").change(function () {
               
                $(""body"").addClass(""loading"");
                let groupCategoryID = $(""#GroupCategoryID"").val();
                if (groupCategoryID != """") {

                    let ddlGroup = HttpRequest.AjaxData(""GET"", '/Embro/COAGrouping/GetDDLCOAGroup', { categoryID: groupCategoryID, predict: '' });
                   
                    let data = HttpRequest.AjaxData(""GET"", ""/Embro/COAGrouping/GetBasicCOADetailInfo"", { groupCategoryID: groupCategoryID })
                    if (data != null && data.length > 0) {
                        $(""body");
                WriteLiteral(@""").removeClass(""loading"");
                        let tr = ``;
                        let previousCategory = ``;
                        let previousSubCategory = ``;
                        let previousBroadGroup = ``;
                        let previousNarrowGroup = ``;
                        let previousIdentification = ``;
                        $.each(data, function (i, v) {
                            let currentCategory = v.Category;
                            let currentCategoryCount = data.filter(x => x.CategoryID == v.CategoryID).length;
                            let currentSubCategory = v.SubCategory;
                            let currentSubCategoryCount = data.filter(x => x.SubCategoryID == v.SubCategoryID).length;

                            let currentBroadGroup = v.BroadGroup;
                            let currentBroadGroupCount = data.filter(x => x.BroadGroupID == v.BroadGroupID).length;

                            let currentNarrowGroup = v.NarrowGroup;
        ");
                WriteLiteral(@"                    let currentNarrowGroupCount = data.filter(x => x.NarrowGroupID == v.NarrowGroupID).length;

                            let currentIdentification = v.Identification;
                            let currentIdentificationCount = data.filter(x => x.IdentificationID == v.IdentificationID).length;

                            tr = tr + `<tr> <td>${++i}</td>`;
                            if (currentCategory != previousCategory) {
                                tr = tr + `<td title = '${v.Category}' rowspan = ${currentCategoryCount}> ${v.Category}</td >`;
                            }
                            if (currentSubCategory != previousSubCategory) {
                                tr = tr + `<td title = '${v.SubCategory}' rowspan = ${currentSubCategoryCount}>${v.SubCategory}</td>`;
                            }
                            if (currentBroadGroup != previousBroadGroup) {
                                tr = tr + `<td title = '${v.BroadGroup}' rowspan = ${cur");
                WriteLiteral(@"rentBroadGroupCount}>${v.BroadGroup}</td>`;
                            }
                            if (currentNarrowGroup != previousNarrowGroup) {
                                tr = tr + `<td title = '${v.NarrowGroup}' rowspan = ${currentNarrowGroupCount}>${v.NarrowGroup}</td>`
                            }
                            if (currentIdentification != previousIdentification) {
                                let chkBox = ``;
                                let isDisabled = 'disabled';
                                let title = `${v.Category} => ${v.SubCategory}=>${v.BroadGroup}=>${v.NarrowGroup}=> ${v.Identification}`;
                                if (v.IsAssignedIdentification) {
                                    isDisabled = '';
                                    if (v.IdentificationAssignedCategoryID != groupCategoryID) {
                                        isDisabled = 'disabled';
                                        title += `${v.IdentificationAssignedGroup}`;");
                WriteLiteral(@"
                                    } 
                                    chkBox = `<input type=""checkbox"" class=""chkIdentification"" checked ${isDisabled} onchange='ChangeCheckedState(this)'/>`;
                                }
                                //else if (!v.IsAssignedIdentification && v.IdentificationAssignedGroup == """") {
                                //    isDisabled = 'disabled';
                                //    chkBox = `<input type=""checkbox"" class=""chkIdentification"" onchange='ChangeCheckedState(this)'/>`;
                                //}
                                else {

                                    chkBox = `<input type=""checkbox"" class=""chkIdentification"" onchange='ChangeCheckedState(this)'/>`;
                                    //chkBox = '';
                                    //title = `${v.Identification}(${v.IdentificationAssignedGroup})`;
                                }

                                tr = tr + `<td class='text-left' ");
                WriteLiteral(@"title = '${title}' rowspan = ${currentIdentificationCount}>
                                                <input type='hidden'class='hdnGroupIdentificationID' value=${v.GroupIdentificationID}><input type='hidden'class='hdnIdentificationID' value=${v.IdentificationID}>
                                                ${chkBox} ${v.Identification}</td>`
                                tr = tr + `<td  rowspan = ${currentIdentificationCount}>`;
                                tr = tr + `<select class='clsGroup' ${isDisabled} onchange=""IdentificationGroupChange(this)"" value = ${v.IdentificationAssignedGroupID}>`;
                                let optionItem = """";
                                ddlGroup.forEach(function (opt) {
                                    var isSelected = v.IdentificationAssignedGroupID == opt.Value;
                                    optionItem += `<option value=""${opt.Value}""  ${isSelected ? ""selected"" : """"}>${opt.Text}</option>`
                                });
        ");
                WriteLiteral(@"                        tr = tr + `${optionItem}</select ></td >`;
                            }
                            let btnIcon = 'fa-check text-success';
                            //if (v.IsIgnoredItem) {
                            //    btnIcon = 'fa-times text-danger';
                            //} else if (!v.IsAssignedIdentification && v.IdentificationAssignedGroup != """") {
                            //    btnIcon = '';
                            //} onclick=""ChangeItemStatus(this)""
                            tr = tr + `<td class='text-left'><button class='btn btn-sm' ><i class=""clsBtnIcon fas ${btnIcon} idn${v.IdentificationID}""></i></button>
                                                <input type='hidden'class='hdnGroupIdentificationID' value=${v.GroupIdentificationID}><input type='hidden'class='hdnIdentificationID' value=${v.IdentificationID}>
                                                <input type='hidden'class='hdnItemID' value=${v.ItemID}> ${v.Item}</td>
        ");
                WriteLiteral(@"                                                        </tr>`;
                            $("".clsGroup"").val(v.IdentificationAssignedGroupID);
                            previousCategory = v.Category;
                            previousSubCategory = v.SubCategory;
                            previousBroadGroup = v.BroadGroup;
                            previousNarrowGroup = v.NarrowGroup;
                            previousIdentification = v.Identification;

                        });
                        $(""#tbodyCOADetailInfo"").html(tr);
                        //$("".clsGroup"").select2();
                    }
                } else {
                    $(""#tbodyCOADetailInfo"").html("""");
                }
            });
            $(""#btnSave"").click(function () {
                debugger;
                let coaGroup = new Array();
                let isDataOk = true;
                let focusItem = """";
                let groupCategoryID = $(""#GroupCategoryID"").val();
  ");
                WriteLiteral(@"              $('.chkIdentification:checkbox:checked').each(function () {

                    let that = $(this);
                    let groupID = that.parent().parent().find('.clsGroup').val();

                    if (groupID == '' || groupID == 0) {
                        focusItem= that.parent().parent().find('.clsGroup');
                        isDataOk = false;
                        return false;
                    }

                    if (groupCategoryID != '' && groupID != '' && groupID > 0) {
                        //alert(groupID);
                        let groupIdentificationID = that.parent().find('.hdnGroupIdentificationID').val();
                        let identificationID = that.parent().find('.hdnIdentificationID').val();

                        let ignoredItems = new Array();
                        $(`.idn${identificationID}`).each(function (i, v) {
                            let itemBtn = $(this);
                            if (itemBtn.hasClass('fa-times'");
                WriteLiteral(@")) {
                                let itemID = itemBtn.parent().parent().find('.hdnItemID').val();
                                let ignoreItem = {
                                    GroupIdentificationID: groupIdentificationID,
                                    IdentificationID: identificationID,
                                    IgnoredItemID: itemID
                                };
                                ignoredItems.push(ignoreItem);
                            }
                        });

                        coaGroup.push({
                            GroupIdentificationID: groupIdentificationID,
                            IdentificationID: identificationID,
                            GroupID: groupID,
                            COAGroupIgnoredItem: ignoredItems,
                            GroupCategoryID: groupCategoryID
                        });


                    } else {
                        isDataOk = false;
                        return ");
                WriteLiteral(@"false;
                    }
                });
                debugger;
                if (isDataOk && coaGroup.length > 0) {
                    HttpRequest.Ajax('POST', '/Embro/COAGrouping/GroupIdentification', { groupIdentifications: coaGroup }, saveSuccess);
                } else {
                    focusItem.focus();
                    focusItem.addClass('bg-danger')
                    $.alert.open('warning', 'Please Select Group For All Selected Identification');
                }
            });
        });
        function IdentificationGroupChange(that) {
            debugger;
            let coaGroup = new Array();
            let isDataOk = true;
            let focusItem = """";
            let groupCategoryID = $(""#GroupCategoryID"").val();

            let thatDDl = $(that);
            let groupID = thatDDl.parent().parent().find('.clsGroup').val();

            //if (groupID == '' || groupID == 0) {
            //    focusItem = thatDDl.parent().parent().find('.cl");
                WriteLiteral(@"sGroup');
            //    isDataOk = false;
            //    return false;
            //}
            if (groupCategoryID != '') {
                //alert(groupID);
                let groupIdentificationID = thatDDl.parent().parent().find('.hdnGroupIdentificationID').val();
                let identificationID = thatDDl.parent().parent().find('.hdnIdentificationID').val();

                //let ignoredItems = new Array();
                //$(`.idn${identificationID}`).each(function (i, v) {
                //    let itemBtn = $(this);
                //    if (itemBtn.hasClass('fa-times')) {
                //        let itemID = itemBtn.parent().parent().find('.hdnItemID').val();
                //        let ignoreItem = {
                //            GroupIdentificationID: groupIdentificationID,
                //            IdentificationID: identificationID,
                //            IgnoredItemID: itemID
                //        };
                //        ignoredItems.pu");
                WriteLiteral(@"sh(ignoreItem);
                //    }
                //});

                coaGroup.push({
                    GroupIdentificationID: groupIdentificationID,
                    IdentificationID: identificationID,
                    GroupID: groupID,
                   // COAGroupIgnoredItem: ignoredItems,
                    GroupCategoryID: groupCategoryID
                });


            } else {
                isDataOk = false;
                return false;
            }
            debugger;
            if (isDataOk && coaGroup.length > 0) {
                HttpRequest.Ajax('POST', '/Embro/COAGrouping/GroupIdentification', { groupIdentifications: coaGroup }, saveSuccess);
            } else {
                focusItem.focus();
                focusItem.addClass('bg-danger')
                $.alert.open('warning', 'Please Select Group For All Selected Identification');
            }
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RG.Application.ViewModel.Embro.Setup.COAGroupings.GroupIdentificationVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
